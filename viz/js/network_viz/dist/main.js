/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/jQuery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jQuery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.3.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2018-01-20T17:24Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif (  true && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, doc, node ) {\n\t\tdoc = doc || document;\n\n\t\tvar i,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\t\t\t\tif ( node[ i ] ) {\n\t\t\t\t\tscript[ i ] = node[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.3.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n        if ( nodeName( elem, \"iframe\" ) ) {\n            return elem.contentDocument;\n        }\n\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n        // Treat the template element as a regular one in browsers that\n        // don't support it.\n        if ( nodeName( elem, \"template\" ) ) {\n            elem = elem.content || elem;\n        }\n\n        return jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc, node );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a property mapped along what jQuery.cssProps suggests or to\n// a vendor prefixed property.\nfunction finalPropName( name ) {\n\tvar ret = jQuery.cssProps[ name ];\n\tif ( !ret ) {\n\t\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\n\t}\n\treturn ret;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\t\t) );\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\t\tval = curCSS( elem, dimension, styles ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox;\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\t// Check for style in case a browser which returns unreliable values\n\t// for getComputedStyle silently falls back to the reliable elem.style\n\tvalueIsBorderBox = valueIsBorderBox &&\n\t\t( support.boxSizingReliable() || val === elem.style[ dimension ] );\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\tif ( val === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) {\n\n\t\tval = elem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];\n\n\t\t// offsetWidth/offsetHeight provide border-box values\n\t\tvalueIsBorderBox = true;\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\t\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra && boxModelAdjustment(\n\t\t\t\t\telem,\n\t\t\t\t\tdimension,\n\t\t\t\t\textra,\n\t\t\t\t\tisBorderBox,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && support.scrollboxSize() === styles.position ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = Date.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( true ) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\treturn jQuery;\n\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n\n\n//# sourceURL=webpack:///./node_modules/jQuery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/sigma/build/plugins/sigma.layout.forceatlas2.min.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sigma/build/plugins/sigma.layout.forceatlas2.min.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n(function(undefined){\"use strict\";function Supervisor(sigInst,options){var _this=this,workerFn=sigInst.getForceAtlas2Worker&&sigInst.getForceAtlas2Worker();if(options=options||{},_root.URL=_root.URL||_root.webkitURL,this.sigInst=sigInst,this.graph=this.sigInst.graph,this.ppn=10,this.ppe=3,this.config={},this.shouldUseWorker=!1!==options.worker&&webWorkers,this.workerUrl=options.workerUrl,this.started=!1,this.running=!1,this.shouldUseWorker){if(this.workerUrl)this.worker=new Worker(this.workerUrl);else{var blob=this.makeBlob(workerFn);this.worker=new Worker(URL.createObjectURL(blob))}this.worker.postMessage=this.worker.webkitPostMessage||this.worker.postMessage}else eval(workerFn);this.msgName=this.worker?\"message\":\"newCoords\",this.listener=function(t){_this.nodesByteArray=new Float32Array(t.data.nodes),_this.running&&(_this.applyLayoutChanges(),_this.sendByteArrayToWorker(),_this.sigInst.refresh())},(this.worker||document).addEventListener(this.msgName,this.listener),this.graphToByteArrays(),sigInst.bind(\"kill\",function(){sigInst.killForceAtlas2()})}if(\"undefined\"==typeof sigma)throw\"sigma is not declared\";var _root=this,webWorkers=\"Worker\"in _root;Supervisor.prototype.makeBlob=function(t){var e;try{e=new Blob([t],{type:\"application/javascript\"})}catch(s){_root.BlobBuilder=_root.BlobBuilder||_root.WebKitBlobBuilder||_root.MozBlobBuilder,e=new BlobBuilder,e.append(t),e=e.getBlob()}return e},Supervisor.prototype.graphToByteArrays=function(){var t,e,s,r=this.graph.nodes(),i=this.graph.edges(),o=r.length*this.ppn,n=i.length*this.ppe,a={};for(this.nodesByteArray=new Float32Array(o),this.edgesByteArray=new Float32Array(n),t=e=0,s=r.length;t<s;t++)a[r[t].id]=e,this.nodesByteArray[e]=r[t].x,this.nodesByteArray[e+1]=r[t].y,this.nodesByteArray[e+2]=0,this.nodesByteArray[e+3]=0,this.nodesByteArray[e+4]=0,this.nodesByteArray[e+5]=0,this.nodesByteArray[e+6]=1+this.graph.degree(r[t].id),this.nodesByteArray[e+7]=1,this.nodesByteArray[e+8]=r[t].size,this.nodesByteArray[e+9]=0,e+=this.ppn;for(t=e=0,s=i.length;t<s;t++)this.edgesByteArray[e]=a[i[t].source],this.edgesByteArray[e+1]=a[i[t].target],this.edgesByteArray[e+2]=i[t].weight||0,e+=this.ppe},Supervisor.prototype.applyLayoutChanges=function(){for(var t=this.graph.nodes(),e=0,s=0,r=this.nodesByteArray.length;s<r;s+=this.ppn)t[e].x=this.nodesByteArray[s],t[e].y=this.nodesByteArray[s+1],e++},Supervisor.prototype.sendByteArrayToWorker=function(t){var e={action:t||\"loop\",nodes:this.nodesByteArray.buffer},s=[this.nodesByteArray.buffer];\"start\"===t&&(e.config=this.config||{},e.edges=this.edgesByteArray.buffer,s.push(this.edgesByteArray.buffer)),this.shouldUseWorker?this.worker.postMessage(e,s):_root.postMessage(e,\"*\")},Supervisor.prototype.start=function(){if(!this.running){this.running=!0;var t,e;for(t in this.sigInst.cameras)e=this.sigInst.cameras[t],e.edgequadtree._enabled=!1;this.started?this.sendByteArrayToWorker():(this.sendByteArrayToWorker(\"start\"),this.started=!0)}},Supervisor.prototype.stop=function(){if(this.running){var t,e,s;for(t in this.sigInst.cameras)e=this.sigInst.cameras[t],e.edgequadtree._enabled=!0,s=sigma.utils.getBoundaries(this.graph,e.readPrefix),e.settings(\"drawEdges\")&&e.settings(\"enableEdgeHovering\")&&e.edgequadtree.index(this.sigInst.graph,{prefix:e.readPrefix,bounds:{x:s.minX,y:s.minY,width:s.maxX-s.minX,height:s.maxY-s.minY}});this.running=!1}},Supervisor.prototype.killWorker=function(){this.worker?this.worker.terminate():(_root.postMessage({action:\"kill\"},\"*\"),document.removeEventListener(this.msgName,this.listener))},Supervisor.prototype.configure=function(t){if(this.config=t,this.started){var e={action:\"config\",config:this.config};this.shouldUseWorker?this.worker.postMessage(e):_root.postMessage(e,\"*\")}},sigma.prototype.startForceAtlas2=function(t){return this.supervisor||(this.supervisor=new Supervisor(this,t)),t&&this.supervisor.configure(t),this.supervisor.start(),this},sigma.prototype.stopForceAtlas2=function(){return this.supervisor?(this.supervisor.stop(),this):this},sigma.prototype.killForceAtlas2=function(){return this.supervisor?(this.supervisor.stop(),this.supervisor.killWorker(),this.supervisor=null,this):this},sigma.prototype.configForceAtlas2=function(t){return this.supervisor||(this.supervisor=new Supervisor(this,t)),this.supervisor.configure(t),this},sigma.prototype.isForceAtlas2Running=function(t){return!!this.supervisor&&this.supervisor.running}}).call(this),function(undefined){\"use strict\";function no_crush(t){var e,s,r,i=[\"x\",\"y\",\"dx\",\"dy\",\"old_dx\",\"old_dy\",\"mass\",\"convergence\",\"size\",\"fixed\"],o=[\"source\",\"target\",\"weight\"],n=[\"node\",\"centerX\",\"centerY\",\"size\",\"nextSibling\",\"firstChild\",\"mass\",\"massCenterX\",\"massCenterY\"];for(s=0,r=n.length;s<r;s++)e=new RegExp(\"rp\\\\(([^,]*), '\"+n[s]+\"'\\\\)\",\"g\"),t=t.replace(e,0===s?\"$1\":\"$1 + \"+s);for(s=0,r=i.length;s<r;s++)e=new RegExp(\"np\\\\(([^,]*), '\"+i[s]+\"'\\\\)\",\"g\"),t=t.replace(e,0===s?\"$1\":\"$1 + \"+s);for(s=0,r=o.length;s<r;s++)e=new RegExp(\"ep\\\\(([^,]*), '\"+o[s]+\"'\\\\)\",\"g\"),t=t.replace(e,0===s?\"$1\":\"$1 + \"+s);return t}function getWorkerFn(){return\";(\"+(crush?crush(Worker.toString()):Worker.toString())+\").call(this);\"}var _root=this,inWebWorker=!(\"document\"in _root),Worker=function(t){function e(){var t,e,s={},r=arguments.length;for(t=r-1;t>=0;t--)for(e in arguments[t])s[e]=arguments[t][e];return s}function s(t){var e;for(e in t)\"hasOwnProperty\"in t&&!t.hasOwnProperty(e)||delete t[e];return t}function r(t,e,s){s=s||{};a=t,h=e,u.nodesLength=a.length,u.edgesLength=h.length,i(s)}function i(t){u.settings=e(t,u.settings)}function o(){var t,e,s,r,i,o,n,g,d,l,c,f,y,w,v;for(s=0;s<u.nodesLength;s+=u.ppn)a[s+4]=a[s+2],a[s+5]=a[s+3],a[s+2]=0,a[s+3]=0;if(u.settings.outboundAttractionDistribution){for(d=0,s=0;s<u.nodesLength;s+=u.ppn)d+=a[s+6];d/=u.nodesLength}if(u.settings.barnesHutOptimize){var k,m,b=1/0,M=-1/0,A=1/0,B=-1/0;for(p=[],s=0;s<u.nodesLength;s+=u.ppn)b=Math.min(b,a[s]),M=Math.max(M,a[s]),A=Math.min(A,a[s+1]),B=Math.max(B,a[s+1]);for(p[0]=-1,p[1]=(b+M)/2,p[2]=(A+B)/2,p[3]=Math.max(M-b,B-A),p[4]=-1,p[5]=-1,p[6]=0,p[7]=0,p[8]=0,t=1,s=0;s<u.nodesLength;s+=u.ppn)for(e=0;;)if(p[e+5]>=0)k=a[s]<p[e+1]?a[s+1]<p[e+2]?p[e+5]:p[e+5]+u.ppr:a[s+1]<p[e+2]?p[e+5]+2*u.ppr:p[e+5]+3*u.ppr,p[e+7]=(p[e+7]*p[e+6]+a[s]*a[s+6])/(p[e+6]+a[s+6]),p[e+8]=(p[e+8]*p[e+6]+a[s+1]*a[s+6])/(p[e+6]+a[s+6]),p[e+6]+=a[s+6],e=k;else{if(p[e]<0){p[e]=s;break}if(p[e+5]=t*u.ppr,n=p[e+3]/2,g=p[e+5],p[g]=-1,p[g+1]=p[e+1]-n,p[g+2]=p[e+2]-n,p[g+3]=n,p[g+4]=g+u.ppr,p[g+5]=-1,p[g+6]=0,p[g+7]=0,p[g+8]=0,g+=u.ppr,p[g]=-1,p[g+1]=p[e+1]-n,p[g+2]=p[e+2]+n,p[g+3]=n,p[g+4]=g+u.ppr,p[g+5]=-1,p[g+6]=0,p[g+7]=0,p[g+8]=0,g+=u.ppr,p[g]=-1,p[g+1]=p[e+1]+n,p[g+2]=p[e+2]-n,p[g+3]=n,p[g+4]=g+u.ppr,p[g+5]=-1,p[g+6]=0,p[g+7]=0,p[g+8]=0,g+=u.ppr,p[g]=-1,p[g+1]=p[e+1]+n,p[g+2]=p[e+2]+n,p[g+3]=n,p[g+4]=p[e+4],p[g+5]=-1,p[g+6]=0,p[g+7]=0,p[g+8]=0,t+=4,k=a[p[e]]<p[e+1]?a[p[e]+1]<p[e+2]?p[e+5]:p[e+5]+u.ppr:a[p[e]+1]<p[e+2]?p[e+5]+2*u.ppr:p[e+5]+3*u.ppr,p[e+6]=a[p[e]+6],p[e+7]=a[p[e]],p[e+8]=a[p[e]+1],p[k]=p[e],p[e]=-1,m=a[s]<p[e+1]?a[s+1]<p[e+2]?p[e+5]:p[e+5]+u.ppr:a[s+1]<p[e+2]?p[e+5]+2*u.ppr:p[e+5]+3*u.ppr,k!==m){p[m]=s;break}e=k}}if(u.settings.barnesHutOptimize)for(l=u.settings.scalingRatio,s=0;s<u.nodesLength;s+=u.ppn)for(e=0;;)if(p[e+5]>=0){if(w=Math.sqrt(Math.pow(a[s]-p[e+7],2)+Math.pow(a[s+1]-p[e+8],2)),2*p[e+3]/w<u.settings.barnesHutTheta){if(c=a[s]-p[e+7],f=a[s+1]-p[e+8],u.settings.adjustSizes?w>0?(v=l*a[s+6]*p[e+6]/w/w,a[s+2]+=c*v,a[s+3]+=f*v):w<0&&(v=-l*a[s+6]*p[e+6]/w,a[s+2]+=c*v,a[s+3]+=f*v):w>0&&(v=l*a[s+6]*p[e+6]/w/w,a[s+2]+=c*v,a[s+3]+=f*v),p[e+4]<0)break;e=p[e+4];continue}e=p[e+5]}else{if(p[e]>=0&&p[e]!==s&&(c=a[s]-a[p[e]],f=a[s+1]-a[p[e]+1],w=Math.sqrt(c*c+f*f),u.settings.adjustSizes?w>0?(v=l*a[s+6]*a[p[e]+6]/w/w,a[s+2]+=c*v,a[s+3]+=f*v):w<0&&(v=-l*a[s+6]*a[p[e]+6]/w,a[s+2]+=c*v,a[s+3]+=f*v):w>0&&(v=l*a[s+6]*a[p[e]+6]/w/w,a[s+2]+=c*v,a[s+3]+=f*v)),p[e+4]<0)break;e=p[e+4]}else for(l=u.settings.scalingRatio,r=0;r<u.nodesLength;r+=u.ppn)for(i=0;i<r;i+=u.ppn)c=a[r]-a[i],f=a[r+1]-a[i+1],u.settings.adjustSizes?(w=Math.sqrt(c*c+f*f)-a[r+8]-a[i+8],w>0?(v=l*a[r+6]*a[i+6]/w/w,a[r+2]+=c*v,a[r+3]+=f*v,a[i+2]+=c*v,a[i+3]+=f*v):w<0&&(v=100*l*a[r+6]*a[i+6],a[r+2]+=c*v,a[r+3]+=f*v,a[i+2]-=c*v,a[i+3]-=f*v)):(w=Math.sqrt(c*c+f*f))>0&&(v=l*a[r+6]*a[i+6]/w/w,a[r+2]+=c*v,a[r+3]+=f*v,a[i+2]-=c*v,a[i+3]-=f*v);for(g=u.settings.gravity/u.settings.scalingRatio,l=u.settings.scalingRatio,s=0;s<u.nodesLength;s+=u.ppn)v=0,c=a[s],f=a[s+1],w=Math.sqrt(Math.pow(c,2)+Math.pow(f,2)),u.settings.strongGravityMode?w>0&&(v=l*a[s+6]*g):w>0&&(v=l*a[s+6]*g/w),a[s+2]-=c*v,a[s+3]-=f*v;for(l=1*(u.settings.outboundAttractionDistribution?d:1),o=0;o<u.edgesLength;o+=u.ppe)r=h[o],i=h[o+1],n=h[o+2],y=Math.pow(n,u.settings.edgeWeightInfluence),c=a[r]-a[i],f=a[r+1]-a[i+1],u.settings.adjustSizes?(w=Math.sqrt(Math.pow(c,2)+Math.pow(f,2)-a[r+8]-a[i+8]),u.settings.linLogMode?u.settings.outboundAttractionDistribution?w>0&&(v=-l*y*Math.log(1+w)/w/a[r+6]):w>0&&(v=-l*y*Math.log(1+w)/w):u.settings.outboundAttractionDistribution?w>0&&(v=-l*y/a[r+6]):w>0&&(v=-l*y)):(w=Math.sqrt(Math.pow(c,2)+Math.pow(f,2)),u.settings.linLogMode?u.settings.outboundAttractionDistribution?w>0&&(v=-l*y*Math.log(1+w)/w/a[r+6]):w>0&&(v=-l*y*Math.log(1+w)/w):u.settings.outboundAttractionDistribution?(w=1,v=-l*y/a[r+6]):(w=1,v=-l*y)),w>0&&(a[r+2]+=c*v,a[r+3]+=f*v,a[i+2]-=c*v,a[i+3]-=f*v);var W,L,F,_;if(u.settings.adjustSizes)for(s=0;s<u.nodesLength;s+=u.ppn)a[s+9]||(W=Math.sqrt(Math.pow(a[s+2],2)+Math.pow(a[s+3],2)),W>u.maxForce&&(a[s+2]=a[s+2]*u.maxForce/W,a[s+3]=a[s+3]*u.maxForce/W),L=a[s+6]*Math.sqrt((a[s+4]-a[s+2])*(a[s+4]-a[s+2])+(a[s+5]-a[s+3])*(a[s+5]-a[s+3])),F=Math.sqrt((a[s+4]+a[s+2])*(a[s+4]+a[s+2])+(a[s+5]+a[s+3])*(a[s+5]+a[s+3]))/2,_=.1*Math.log(1+F)/(1+Math.sqrt(L)),a[s]=a[s]+a[s+2]*(_/u.settings.slowDown),a[s+1]=a[s+1]+a[s+3]*(_/u.settings.slowDown));else for(s=0;s<u.nodesLength;s+=u.ppn)a[s+9]||(L=a[s+6]*Math.sqrt((a[s+4]-a[s+2])*(a[s+4]-a[s+2])+(a[s+5]-a[s+3])*(a[s+5]-a[s+3])),F=Math.sqrt((a[s+4]+a[s+2])*(a[s+4]+a[s+2])+(a[s+5]+a[s+3])*(a[s+5]+a[s+3]))/2,_=a[s+7]*Math.log(1+F)/(1+Math.sqrt(L)),a[s+7]=Math.min(1,Math.sqrt(_*(Math.pow(a[s+2],2)+Math.pow(a[s+3],2))/(1+Math.sqrt(L)))),a[s]=a[s]+a[s+2]*(_/u.settings.slowDown),a[s+1]=a[s+1]+a[s+3]*(_/u.settings.slowDown));u.iterations++}function n(t){for(var e=0;e<t;e++)o();g()}var a,h,p,g,u={ppn:10,ppe:3,ppr:9,maxForce:10,iterations:0,converged:!1,settings:{linLogMode:!1,outboundAttractionDistribution:!1,adjustSizes:!1,edgeWeightInfluence:0,scalingRatio:1,strongGravityMode:!1,gravity:1,slowDown:1,barnesHutOptimize:!1,barnesHutTheta:.5,startingIterations:1,iterationsPerRender:1}};g=\"undefined\"!=typeof window&&window.document?function(){var t;document.createEvent?(t=document.createEvent(\"Event\"),t.initEvent(\"newCoords\",!0,!1)):(t=document.createEventObject(),t.eventType=\"newCoords\"),t.eventName=\"newCoords\",t.data={nodes:a.buffer},requestAnimationFrame(function(){document.dispatchEvent(t)})}:function(){self.postMessage({nodes:a.buffer},[a.buffer])};var d=function(t){switch(t.data.action){case\"start\":r(new Float32Array(t.data.nodes),new Float32Array(t.data.edges),t.data.config),n(u.settings.startingIterations);break;case\"loop\":a=new Float32Array(t.data.nodes),n(u.settings.iterationsPerRender);break;case\"config\":i(t.data.config);break;case\"kill\":s(u),a=null,h=null,p=null,self.removeEventListener(\"message\",d)}};self.addEventListener(\"message\",d)},crush=null;if(inWebWorker)eval(getWorkerFn());else{if(\"undefined\"==typeof sigma)throw\"sigma is not declared\";sigma.prototype.getForceAtlas2Worker=getWorkerFn}}.call(this);\n}.call(window));\n\n//# sourceURL=webpack:///./node_modules/sigma/build/plugins/sigma.layout.forceatlas2.min.js?");

/***/ }),

/***/ "./node_modules/sigma/build/sigma.require.js":
/*!***************************************************!*\
  !*** ./node_modules/sigma/build/sigma.require.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n;(function(undefined) {\n  'use strict';\n\n  var __instances = {};\n\n  /**\n   * This is the sigma instances constructor. One instance of sigma represent\n   * one graph. It is possible to represent this grapĥ with several renderers\n   * at the same time. By default, the default renderer (WebGL + Canvas\n   * polyfill) will be used as the only renderer, with the container specified\n   * in the configuration.\n   *\n   * @param  {?*}    conf The configuration of the instance. There are a lot of\n   *                      different recognized forms to instantiate sigma, check\n   *                      example files, documentation in this file and unit\n   *                      tests to know more.\n   * @return {sigma}      The fresh new sigma instance.\n   *\n   * Instanciating sigma:\n   * ********************\n   * If no parameter is given to the constructor, the instance will be created\n   * without any renderer or camera. It will just instantiate the graph, and\n   * other modules will have to be instantiated through the public methods,\n   * like \"addRenderer\" etc:\n   *\n   *  > s0 = new sigma();\n   *  > s0.addRenderer({\n   *  >   type: 'canvas',\n   *  >   container: 'my-container-id'\n   *  > });\n   *\n   * In most of the cases, sigma will simply be used with the default renderer.\n   * Then, since the only required parameter is the DOM container, there are\n   * some simpler way to call the constructor. The four following calls do the\n   * exact same things:\n   *\n   *  > s1 = new sigma('my-container-id');\n   *  > s2 = new sigma(document.getElementById('my-container-id'));\n   *  > s3 = new sigma({\n   *  >   container: document.getElementById('my-container-id')\n   *  > });\n   *  > s4 = new sigma({\n   *  >   renderers: [{\n   *  >     container: document.getElementById('my-container-id')\n   *  >   }]\n   *  > });\n   *\n   * Recognized parameters:\n   * **********************\n   * Here is the exhaustive list of every accepted parameters, when calling the\n   * constructor with to top level configuration object (fourth case in the\n   * previous examples):\n   *\n   *   {?string} id        The id of the instance. It will be generated\n   *                       automatically if not specified.\n   *   {?array}  renderers An array containing objects describing renderers.\n   *   {?object} graph     An object containing an array of nodes and an array\n   *                       of edges, to avoid having to add them by hand later.\n   *   {?object} settings  An object containing instance specific settings that\n   *                       will override the default ones defined in the object\n   *                       sigma.settings.\n   */\n  var sigma = function(conf) {\n    // Local variables:\n    // ****************\n    var i,\n        l,\n        a,\n        c,\n        o,\n        id;\n\n    sigma.classes.dispatcher.extend(this);\n\n    // Private attributes:\n    // *******************\n    var _self = this,\n        _conf = conf || {};\n\n    // Little shortcut:\n    // ****************\n    // The configuration is supposed to have a list of the configuration\n    // objects for each renderer.\n    //  - If there are no configuration at all, then nothing is done.\n    //  - If there are no renderer list, the given configuration object will be\n    //    considered as describing the first and only renderer.\n    //  - If there are no renderer list nor \"container\" object, it will be\n    //    considered as the container itself (a DOM element).\n    //  - If the argument passed to sigma() is a string, it will be considered\n    //    as the ID of the DOM container.\n    if (\n      typeof _conf === 'string' ||\n      _conf instanceof HTMLElement\n    )\n      _conf = {\n        renderers: [_conf]\n      };\n    else if (Object.prototype.toString.call(_conf) === '[object Array]')\n      _conf = {\n        renderers: _conf\n      };\n\n    // Also check \"renderer\" and \"container\" keys:\n    o = _conf.renderers || _conf.renderer || _conf.container;\n    if (!_conf.renderers || _conf.renderers.length === 0)\n      if (\n        typeof o === 'string' ||\n        o instanceof HTMLElement ||\n        (typeof o === 'object' && 'container' in o)\n      )\n        _conf.renderers = [o];\n\n    // Recense the instance:\n    if (_conf.id) {\n      if (__instances[_conf.id])\n        throw 'sigma: Instance \"' + _conf.id + '\" already exists.';\n      Object.defineProperty(this, 'id', {\n        value: _conf.id\n      });\n    } else {\n      id = 0;\n      while (__instances[id])\n        id++;\n      Object.defineProperty(this, 'id', {\n        value: '' + id\n      });\n    }\n    __instances[this.id] = this;\n\n    // Initialize settings function:\n    this.settings = new sigma.classes.configurable(\n      sigma.settings,\n      _conf.settings || {}\n    );\n\n    // Initialize locked attributes:\n    Object.defineProperty(this, 'graph', {\n      value: new sigma.classes.graph(this.settings),\n      configurable: true\n    });\n    Object.defineProperty(this, 'middlewares', {\n      value: [],\n      configurable: true\n    });\n    Object.defineProperty(this, 'cameras', {\n      value: {},\n      configurable: true\n    });\n    Object.defineProperty(this, 'renderers', {\n      value: {},\n      configurable: true\n    });\n    Object.defineProperty(this, 'renderersPerCamera', {\n      value: {},\n      configurable: true\n    });\n    Object.defineProperty(this, 'cameraFrames', {\n      value: {},\n      configurable: true\n    });\n    Object.defineProperty(this, 'camera', {\n      get: function() {\n        return this.cameras[0];\n      }\n    });\n    Object.defineProperty(this, 'events', {\n      value: [\n        'click',\n        'rightClick',\n        'clickStage',\n        'doubleClickStage',\n        'rightClickStage',\n        'clickNode',\n        'clickNodes',\n        'doubleClickNode',\n        'doubleClickNodes',\n        'rightClickNode',\n        'rightClickNodes',\n        'overNode',\n        'overNodes',\n        'outNode',\n        'outNodes',\n        'downNode',\n        'downNodes',\n        'upNode',\n        'upNodes'\n      ],\n      configurable: true\n    });\n\n    // Add a custom handler, to redispatch events from renderers:\n    this._handler = (function(e) {\n      var k,\n          data = {};\n\n      for (k in e.data)\n        data[k] = e.data[k];\n\n      data.renderer = e.target;\n      this.dispatchEvent(e.type, data);\n    }).bind(this);\n\n    // Initialize renderers:\n    a = _conf.renderers || [];\n    for (i = 0, l = a.length; i < l; i++)\n      this.addRenderer(a[i]);\n\n    // Initialize middlewares:\n    a = _conf.middlewares || [];\n    for (i = 0, l = a.length; i < l; i++)\n      this.middlewares.push(\n        typeof a[i] === 'string' ?\n          sigma.middlewares[a[i]] :\n          a[i]\n      );\n\n    // Check if there is already a graph to fill in:\n    if (typeof _conf.graph === 'object' && _conf.graph) {\n      this.graph.read(_conf.graph);\n\n      // If a graph is given to the to the instance, the \"refresh\" method is\n      // directly called:\n      this.refresh();\n    }\n\n    // Deal with resize:\n    window.addEventListener('resize', function() {\n      if (_self.settings)\n        _self.refresh();\n    });\n  };\n\n\n\n\n  /**\n   * This methods will instantiate and reference a new camera. If no id is\n   * specified, then an automatic id will be generated.\n   *\n   * @param  {?string}              id Eventually the camera id.\n   * @return {sigma.classes.camera}    The fresh new camera instance.\n   */\n  sigma.prototype.addCamera = function(id) {\n    var self = this,\n        camera;\n\n    if (!arguments.length) {\n      id = 0;\n      while (this.cameras['' + id])\n        id++;\n      id = '' + id;\n    }\n\n    if (this.cameras[id])\n      throw 'sigma.addCamera: The camera \"' + id + '\" already exists.';\n\n    camera = new sigma.classes.camera(id, this.graph, this.settings);\n    this.cameras[id] = camera;\n\n    // Add a quadtree to the camera:\n    camera.quadtree = new sigma.classes.quad();\n\n    // Add an edgequadtree to the camera:\n    if (sigma.classes.edgequad !== undefined) {\n      camera.edgequadtree = new sigma.classes.edgequad();\n    }\n\n    camera.bind('coordinatesUpdated', function(e) {\n      self.renderCamera(camera, camera.isAnimated);\n    });\n\n    this.renderersPerCamera[id] = [];\n\n    return camera;\n  };\n\n  /**\n   * This method kills a camera, and every renderer attached to it.\n   *\n   * @param  {string|camera} v The camera to kill or its ID.\n   * @return {sigma}           Returns the instance.\n   */\n  sigma.prototype.killCamera = function(v) {\n    v = typeof v === 'string' ? this.cameras[v] : v;\n\n    if (!v)\n      throw 'sigma.killCamera: The camera is undefined.';\n\n    var i,\n        l,\n        a = this.renderersPerCamera[v.id];\n\n    for (l = a.length, i = l - 1; i >= 0; i--)\n      this.killRenderer(a[i]);\n\n    delete this.renderersPerCamera[v.id];\n    delete this.cameraFrames[v.id];\n    delete this.cameras[v.id];\n\n    if (v.kill)\n      v.kill();\n\n    return this;\n  };\n\n  /**\n   * This methods will instantiate and reference a new renderer. The \"type\"\n   * argument can be the constructor or its name in the \"sigma.renderers\"\n   * package. If no type is specified, then \"sigma.renderers.def\" will be used.\n   * If no id is specified, then an automatic id will be generated.\n   *\n   * @param  {?object}  options Eventually some options to give to the renderer\n   *                            constructor.\n   * @return {renderer}         The fresh new renderer instance.\n   *\n   * Recognized parameters:\n   * **********************\n   * Here is the exhaustive list of every accepted parameters in the \"options\"\n   * object:\n   *\n   *   {?string}            id     Eventually the renderer id.\n   *   {?(function|string)} type   Eventually the renderer constructor or its\n   *                               name in the \"sigma.renderers\" package.\n   *   {?(camera|string)}   camera Eventually the renderer camera or its\n   *                               id.\n   */\n  sigma.prototype.addRenderer = function(options) {\n    var id,\n        fn,\n        camera,\n        renderer,\n        o = options || {};\n\n    // Polymorphism:\n    if (typeof o === 'string')\n      o = {\n        container: document.getElementById(o)\n      };\n    else if (o instanceof HTMLElement)\n      o = {\n        container: o\n      };\n\n    // If the container still is a string, we get it by id\n    if (typeof o.container === 'string')\n      o.container = document.getElementById(o.container);\n\n    // Reference the new renderer:\n    if (!('id' in o)) {\n      id = 0;\n      while (this.renderers['' + id])\n        id++;\n      id = '' + id;\n    } else\n      id = o.id;\n\n    if (this.renderers[id])\n      throw 'sigma.addRenderer: The renderer \"' + id + '\" already exists.';\n\n    // Find the good constructor:\n    fn = typeof o.type === 'function' ? o.type : sigma.renderers[o.type];\n    fn = fn || sigma.renderers.def;\n\n    // Find the good camera:\n    camera = 'camera' in o ?\n      (\n        o.camera instanceof sigma.classes.camera ?\n          o.camera :\n          this.cameras[o.camera] || this.addCamera(o.camera)\n      ) :\n      this.addCamera();\n\n    if (this.cameras[camera.id] !== camera)\n      throw 'sigma.addRenderer: The camera is not properly referenced.';\n\n    // Instantiate:\n    renderer = new fn(this.graph, camera, this.settings, o);\n    this.renderers[id] = renderer;\n    Object.defineProperty(renderer, 'id', {\n      value: id\n    });\n\n    // Bind events:\n    if (renderer.bind)\n      renderer.bind(\n        [\n          'click',\n          'rightClick',\n          'clickStage',\n          'doubleClickStage',\n          'rightClickStage',\n          'clickNode',\n          'clickNodes',\n          'clickEdge',\n          'clickEdges',\n          'doubleClickNode',\n          'doubleClickNodes',\n          'doubleClickEdge',\n          'doubleClickEdges',\n          'rightClickNode',\n          'rightClickNodes',\n          'rightClickEdge',\n          'rightClickEdges',\n          'overNode',\n          'overNodes',\n          'overEdge',\n          'overEdges',\n          'outNode',\n          'outNodes',\n          'outEdge',\n          'outEdges',\n          'downNode',\n          'downNodes',\n          'downEdge',\n          'downEdges',\n          'upNode',\n          'upNodes',\n          'upEdge',\n          'upEdges'\n        ],\n        this._handler\n      );\n\n    // Reference the renderer by its camera:\n    this.renderersPerCamera[camera.id].push(renderer);\n\n    return renderer;\n  };\n\n  /**\n   * This method kills a renderer.\n   *\n   * @param  {string|renderer} v The renderer to kill or its ID.\n   * @return {sigma}             Returns the instance.\n   */\n  sigma.prototype.killRenderer = function(v) {\n    v = typeof v === 'string' ? this.renderers[v] : v;\n\n    if (!v)\n      throw 'sigma.killRenderer: The renderer is undefined.';\n\n    var a = this.renderersPerCamera[v.camera.id],\n        i = a.indexOf(v);\n\n    if (i >= 0)\n      a.splice(i, 1);\n\n    if (v.kill)\n      v.kill();\n\n    delete this.renderers[v.id];\n\n    return this;\n  };\n\n\n\n\n  /**\n   * This method calls the \"render\" method of each renderer, with the same\n   * arguments than the \"render\" method, but will also check if the renderer\n   * has a \"process\" method, and call it if it exists.\n   *\n   * It is useful for quadtrees or WebGL processing, for instance.\n   *\n   * @param  {?object}  options Eventually some options to give to the refresh\n   *                            method.\n   * @return {sigma}            Returns the instance itself.\n   *\n   * Recognized parameters:\n   * **********************\n   * Here is the exhaustive list of every accepted parameters in the \"options\"\n   * object:\n   *\n   *   {?boolean} skipIndexation A flag specifying wether or not the refresh\n   *                             function should reindex the graph in the\n   *                             quadtrees or not (default: false).\n   */\n  sigma.prototype.refresh = function(options) {\n    var i,\n        l,\n        k,\n        a,\n        c,\n        bounds,\n        prefix = 0;\n\n    options = options || {};\n\n    // Call each middleware:\n    a = this.middlewares || [];\n    for (i = 0, l = a.length; i < l; i++)\n      a[i].call(\n        this,\n        (i === 0) ? '' : 'tmp' + prefix + ':',\n        (i === l - 1) ? 'ready:' : ('tmp' + (++prefix) + ':')\n      );\n\n    // Then, for each camera, call the \"rescale\" middleware, unless the\n    // settings specify not to:\n    for (k in this.cameras) {\n      c = this.cameras[k];\n      if (\n        c.settings('autoRescale') &&\n        this.renderersPerCamera[c.id] &&\n        this.renderersPerCamera[c.id].length\n      )\n        sigma.middlewares.rescale.call(\n          this,\n          a.length ? 'ready:' : '',\n          c.readPrefix,\n          {\n            width: this.renderersPerCamera[c.id][0].width,\n            height: this.renderersPerCamera[c.id][0].height\n          }\n        );\n      else\n        sigma.middlewares.copy.call(\n          this,\n          a.length ? 'ready:' : '',\n          c.readPrefix\n        );\n\n      if (!options.skipIndexation) {\n        // Find graph boundaries:\n        bounds = sigma.utils.getBoundaries(\n          this.graph,\n          c.readPrefix\n        );\n\n        // Refresh quadtree:\n        c.quadtree.index(this.graph.nodes(), {\n          prefix: c.readPrefix,\n          bounds: {\n            x: bounds.minX,\n            y: bounds.minY,\n            width: bounds.maxX - bounds.minX,\n            height: bounds.maxY - bounds.minY\n          }\n        });\n\n        // Refresh edgequadtree:\n        if (\n          c.edgequadtree !== undefined &&\n          c.settings('drawEdges') &&\n          c.settings('enableEdgeHovering')\n        ) {\n          c.edgequadtree.index(this.graph, {\n            prefix: c.readPrefix,\n            bounds: {\n              x: bounds.minX,\n              y: bounds.minY,\n              width: bounds.maxX - bounds.minX,\n              height: bounds.maxY - bounds.minY\n            }\n          });\n        }\n      }\n    }\n\n    // Call each renderer:\n    a = Object.keys(this.renderers);\n    for (i = 0, l = a.length; i < l; i++)\n      if (this.renderers[a[i]].process) {\n        if (this.settings('skipErrors'))\n          try {\n            this.renderers[a[i]].process();\n          } catch (e) {\n            console.log(\n              'Warning: The renderer \"' + a[i] + '\" crashed on \".process()\"'\n            );\n          }\n        else\n          this.renderers[a[i]].process();\n      }\n\n    this.render();\n\n    return this;\n  };\n\n  /**\n   * This method calls the \"render\" method of each renderer.\n   *\n   * @return {sigma} Returns the instance itself.\n   */\n  sigma.prototype.render = function() {\n    var i,\n        l,\n        a,\n        prefix = 0;\n\n    // Call each renderer:\n    a = Object.keys(this.renderers);\n    for (i = 0, l = a.length; i < l; i++)\n      if (this.settings('skipErrors'))\n        try {\n          this.renderers[a[i]].render();\n        } catch (e) {\n          if (this.settings('verbose'))\n            console.log(\n              'Warning: The renderer \"' + a[i] + '\" crashed on \".render()\"'\n            );\n        }\n      else\n        this.renderers[a[i]].render();\n\n    return this;\n  };\n\n  /**\n   * This method calls the \"render\" method of each renderer that is bound to\n   * the specified camera. To improve the performances, if this method is\n   * called too often, the number of effective renderings is limitated to one\n   * per frame, unless you are using the \"force\" flag.\n   *\n   * @param  {sigma.classes.camera} camera The camera to render.\n   * @param  {?boolean}             force  If true, will render the camera\n   *                                       directly.\n   * @return {sigma}                       Returns the instance itself.\n   */\n  sigma.prototype.renderCamera = function(camera, force) {\n    var i,\n        l,\n        a,\n        self = this;\n\n    if (force) {\n      a = this.renderersPerCamera[camera.id];\n      for (i = 0, l = a.length; i < l; i++)\n        if (this.settings('skipErrors'))\n          try {\n            a[i].render();\n          } catch (e) {\n            if (this.settings('verbose'))\n              console.log(\n                'Warning: The renderer \"' + a[i].id + '\" crashed on \".render()\"'\n              );\n          }\n        else\n          a[i].render();\n    } else {\n      if (!this.cameraFrames[camera.id]) {\n        a = this.renderersPerCamera[camera.id];\n        for (i = 0, l = a.length; i < l; i++)\n          if (this.settings('skipErrors'))\n            try {\n              a[i].render();\n            } catch (e) {\n              if (this.settings('verbose'))\n                console.log(\n                  'Warning: The renderer \"' +\n                    a[i].id +\n                    '\" crashed on \".render()\"'\n                );\n            }\n          else\n            a[i].render();\n\n        this.cameraFrames[camera.id] = requestAnimationFrame(function() {\n          delete self.cameraFrames[camera.id];\n        });\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * This method calls the \"kill\" method of each module and destroys any\n   * reference from the instance.\n   */\n  sigma.prototype.kill = function() {\n    var k;\n\n    // Dispatching event\n    this.dispatchEvent('kill');\n\n    // Kill graph:\n    this.graph.kill();\n\n    // Kill middlewares:\n    delete this.middlewares;\n\n    // Kill each renderer:\n    for (k in this.renderers)\n      this.killRenderer(this.renderers[k]);\n\n    // Kill each camera:\n    for (k in this.cameras)\n      this.killCamera(this.cameras[k]);\n\n    delete this.renderers;\n    delete this.cameras;\n\n    // Kill everything else:\n    for (k in this)\n      if (this.hasOwnProperty(k))\n        delete this[k];\n\n    delete __instances[this.id];\n  };\n\n\n\n\n  /**\n   * Returns a clone of the instances object or a specific running instance.\n   *\n   * @param  {?string} id Eventually an instance ID.\n   * @return {object}     The related instance or a clone of the instances\n   *                      object.\n   */\n  sigma.instances = function(id) {\n    return arguments.length ?\n      __instances[id] :\n      sigma.utils.extend({}, __instances);\n  };\n\n\n\n  /**\n   * The current version of sigma:\n   */\n  sigma.version = '1.2.1';\n\n\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof this.sigma !== 'undefined')\n    throw 'An object called sigma is already in the global scope.';\n\n  this.sigma = sigma;\n\n}).call(this);\n\n/**\n * conrad.js is a tiny JavaScript jobs scheduler,\n *\n * Version: 0.1.0\n * Sources: http://github.com/jacomyal/conrad.js\n * Doc:     http://github.com/jacomyal/conrad.js#readme\n *\n * License:\n * --------\n * Copyright © 2013 Alexis Jacomy, Sciences-Po médialab\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * The Software is provided \"as is\", without warranty of any kind, express or\n * implied, including but not limited to the warranties of merchantability,\n * fitness for a particular purpose and noninfringement. In no event shall the\n * authors or copyright holders be liable for any claim, damages or other\n * liability, whether in an action of contract, tort or otherwise, arising\n * from, out of or in connection with the software or the use or other dealings\n * in the Software.\n */\n(function(global) {\n  'use strict';\n\n  // Check that conrad.js has not been loaded yet:\n  if (global.conrad)\n    throw new Error('conrad already exists');\n\n\n  /**\n   * PRIVATE VARIABLES:\n   * ******************\n   */\n\n  /**\n   * A flag indicating whether conrad is running or not.\n   *\n   * @type {Number}\n   */\n  var _lastFrameTime;\n\n  /**\n   * A flag indicating whether conrad is running or not.\n   *\n   * @type {Boolean}\n   */\n  var _isRunning = false;\n\n  /**\n   * The hash of registered jobs. Each job must at least have a unique ID\n   * under the key \"id\" and a function under the key \"job\". This hash\n   * contains each running job and each waiting job.\n   *\n   * @type {Object}\n   */\n  var _jobs = {};\n\n  /**\n   * The hash of currently running jobs.\n   *\n   * @type {Object}\n   */\n  var _runningJobs = {};\n\n  /**\n   * The array of currently running jobs, sorted by priority.\n   *\n   * @type {Array}\n   */\n  var _sortedByPriorityJobs = [];\n\n  /**\n   * The array of currently waiting jobs.\n   *\n   * @type {Object}\n   */\n  var _waitingJobs = {};\n\n  /**\n   * The array of finished jobs. They are stored in an array, since two jobs\n   * with the same \"id\" can happen at two different times.\n   *\n   * @type {Array}\n   */\n  var _doneJobs = [];\n\n  /**\n   * A dirty flag to keep conrad from starting: Indeed, when addJob() is called\n   * with several jobs, conrad must be started only at the end. This flag keeps\n   * me from duplicating the code that effectively adds a job.\n   *\n   * @type {Boolean}\n   */\n  var _noStart = false;\n\n  /**\n   * An hash containing some global settings about how conrad.js should\n   * behave.\n   *\n   * @type {Object}\n   */\n  var _parameters = {\n    frameDuration: 20,\n    history: true\n  };\n\n  /**\n   * This object contains every handlers bound to conrad events. It does not\n   * requirea any DOM implementation, since the events are all JavaScript.\n   *\n   * @type {Object}\n   */\n  var _handlers = Object.create(null);\n\n\n  /**\n   * PRIVATE FUNCTIONS:\n   * ******************\n   */\n\n  /**\n   * Will execute the handler everytime that the indicated event (or the\n   * indicated events) will be triggered.\n   *\n   * @param  {string|array|object} events  The name of the event (or the events\n   *                                       separated by spaces).\n   * @param  {function(Object)}    handler The handler to bind.\n   * @return {Object}                      Returns conrad.\n   */\n  function _bind(events, handler) {\n    var i,\n        i_end,\n        event,\n        eArray;\n\n    if (!arguments.length)\n      return;\n    else if (\n      arguments.length === 1 &&\n      Object(arguments[0]) === arguments[0]\n    )\n      for (events in arguments[0])\n        _bind(events, arguments[0][events]);\n    else if (arguments.length > 1) {\n      eArray =\n        Array.isArray(events) ?\n          events :\n          events.split(/ /);\n\n      for (i = 0, i_end = eArray.length; i !== i_end; i += 1) {\n        event = eArray[i];\n\n        if (!_handlers[event])\n          _handlers[event] = [];\n\n        // Using an object instead of directly the handler will make possible\n        // later to add flags\n        _handlers[event].push({\n          handler: handler\n        });\n      }\n    }\n  }\n\n  /**\n   * Removes the handler from a specified event (or specified events).\n   *\n   * @param  {?string}           events  The name of the event (or the events\n   *                                     separated by spaces). If undefined,\n   *                                     then all handlers are removed.\n   * @param  {?function(Object)} handler The handler to unbind. If undefined,\n   *                                     each handler bound to the event or the\n   *                                     events will be removed.\n   * @return {Object}            Returns conrad.\n   */\n  function _unbind(events, handler) {\n    var i,\n        i_end,\n        j,\n        j_end,\n        a,\n        event,\n        eArray = Array.isArray(events) ?\n                   events :\n                   events.split(/ /);\n\n    if (!arguments.length)\n      _handlers = Object.create(null);\n    else if (handler) {\n      for (i = 0, i_end = eArray.length; i !== i_end; i += 1) {\n        event = eArray[i];\n        if (_handlers[event]) {\n          a = [];\n          for (j = 0, j_end = _handlers[event].length; j !== j_end; j += 1)\n            if (_handlers[event][j].handler !== handler)\n              a.push(_handlers[event][j]);\n\n          _handlers[event] = a;\n        }\n\n        if (_handlers[event] && _handlers[event].length === 0)\n          delete _handlers[event];\n      }\n    } else\n      for (i = 0, i_end = eArray.length; i !== i_end; i += 1)\n        delete _handlers[eArray[i]];\n  }\n\n  /**\n   * Executes each handler bound to the event.\n   *\n   * @param  {string}  events The name of the event (or the events separated\n   *                          by spaces).\n   * @param  {?Object} data   The content of the event (optional).\n   * @return {Object}         Returns conrad.\n   */\n  function _dispatch(events, data) {\n    var i,\n        j,\n        i_end,\n        j_end,\n        event,\n        eventName,\n        eArray = Array.isArray(events) ?\n                   events :\n                   events.split(/ /);\n\n    data = data === undefined ? {} : data;\n\n    for (i = 0, i_end = eArray.length; i !== i_end; i += 1) {\n      eventName = eArray[i];\n\n      if (_handlers[eventName]) {\n        event = {\n          type: eventName,\n          data: data || {}\n        };\n\n        for (j = 0, j_end = _handlers[eventName].length; j !== j_end; j += 1)\n          try {\n            _handlers[eventName][j].handler(event);\n          } catch (e) {}\n      }\n    }\n  }\n\n  /**\n   * Executes the most prioritary job once, and deals with filling the stats\n   * (done, time, averageTime, currentTime, etc...).\n   *\n   * @return {?Object} Returns the job object if it has to be killed, null else.\n   */\n  function _executeFirstJob() {\n    var i,\n        l,\n        test,\n        kill,\n        pushed = false,\n        time = __dateNow(),\n        job = _sortedByPriorityJobs.shift();\n\n    // Execute the job and look at the result:\n    test = job.job();\n\n    // Deal with stats:\n    time = __dateNow() - time;\n    job.done++;\n    job.time += time;\n    job.currentTime += time;\n    job.weightTime = job.currentTime / (job.weight || 1);\n    job.averageTime = job.time / job.done;\n\n    // Check if the job has to be killed:\n    kill = job.count ? (job.count <= job.done) : !test;\n\n    // Reset priorities:\n    if (!kill) {\n      for (i = 0, l = _sortedByPriorityJobs.length; i < l; i++)\n        if (_sortedByPriorityJobs[i].weightTime > job.weightTime) {\n          _sortedByPriorityJobs.splice(i, 0, job);\n          pushed = true;\n          break;\n        }\n\n      if (!pushed)\n        _sortedByPriorityJobs.push(job);\n    }\n\n    return kill ? job : null;\n  }\n\n  /**\n   * Activates a job, by adding it to the _runningJobs object and the\n   * _sortedByPriorityJobs array. It also initializes its currentTime value.\n   *\n   * @param  {Object} job The job to activate.\n   */\n  function _activateJob(job) {\n    var l = _sortedByPriorityJobs.length;\n\n    // Add the job to the running jobs:\n    _runningJobs[job.id] = job;\n    job.status = 'running';\n\n    // Add the job to the priorities:\n    if (l) {\n      job.weightTime = _sortedByPriorityJobs[l - 1].weightTime;\n      job.currentTime = job.weightTime * (job.weight || 1);\n    }\n\n    // Initialize the job and dispatch:\n    job.startTime = __dateNow();\n    _dispatch('jobStarted', __clone(job));\n\n    _sortedByPriorityJobs.push(job);\n  }\n\n  /**\n   * The main loop of conrad.js:\n   *  . It executes job such that they all occupate the same processing time.\n   *  . It stops jobs that do not need to be executed anymore.\n   *  . It triggers callbacks when it is relevant.\n   *  . It starts waiting jobs when they need to be started.\n   *  . It injects frames to keep a constant frapes per second ratio.\n   *  . It stops itself when there are no more jobs to execute.\n   */\n  function _loop() {\n    var k,\n        o,\n        l,\n        job,\n        time,\n        deadJob;\n\n    // Deal with the newly added jobs (the _jobs object):\n    for (k in _jobs) {\n      job = _jobs[k];\n\n      if (job.after)\n        _waitingJobs[k] = job;\n      else\n        _activateJob(job);\n\n      delete _jobs[k];\n    }\n\n    // Set the _isRunning flag to false if there are no running job:\n    _isRunning = !!_sortedByPriorityJobs.length;\n\n    // Deal with the running jobs (the _runningJobs object):\n    while (\n      _sortedByPriorityJobs.length &&\n      __dateNow() - _lastFrameTime < _parameters.frameDuration\n    ) {\n      deadJob = _executeFirstJob();\n\n      // Deal with the case where the job has ended:\n      if (deadJob) {\n        _killJob(deadJob.id);\n\n        // Check for waiting jobs:\n        for (k in _waitingJobs)\n          if (_waitingJobs[k].after === deadJob.id) {\n            _activateJob(_waitingJobs[k]);\n            delete _waitingJobs[k];\n          }\n      }\n    }\n\n    // Check if conrad still has jobs to deal with, and kill it if not:\n    if (_isRunning) {\n      // Update the _lastFrameTime:\n      _lastFrameTime = __dateNow();\n\n      _dispatch('enterFrame');\n      setTimeout(_loop, 0);\n    } else\n      _dispatch('stop');\n  }\n\n  /**\n   * Adds one or more jobs, and starts the loop if no job was running before. A\n   * job is at least a unique string \"id\" and a function, and there are some\n   * parameters that you can specify for each job to modify the way conrad will\n   * execute it. If a job is added with the \"id\" of another job that is waiting\n   * or still running, an error will be thrown.\n   *\n   * When a job is added, it is referenced in the _jobs object, by its id.\n   * Then, if it has to be executed right now, it will be also referenced in\n   * the _runningJobs object. If it has to wait, then it will be added into the\n   * _waitingJobs object, until it can start.\n   *\n   * Keep reading this documentation to see how to call this method.\n   *\n   * @return {Object} Returns conrad.\n   *\n   * Adding one job:\n   * ***************\n   * Basically, a job is defined by its string id and a function (the job). It\n   * is also possible to add some parameters:\n   *\n   *  > conrad.addJob('myJobId', myJobFunction);\n   *  > conrad.addJob('myJobId', {\n   *  >   job: myJobFunction,\n   *  >   someParameter: someValue\n   *  > });\n   *  > conrad.addJob({\n   *  >   id: 'myJobId',\n   *  >   job: myJobFunction,\n   *  >   someParameter: someValue\n   *  > });\n   *\n   * Adding several jobs:\n   * ********************\n   * When adding several jobs at the same time, it is possible to specify\n   * parameters for each one individually or for all:\n   *\n   *  > conrad.addJob([\n   *  >   {\n   *  >     id: 'myJobId1',\n   *  >     job: myJobFunction1,\n   *  >     someParameter1: someValue1\n   *  >   },\n   *  >   {\n   *  >     id: 'myJobId2',\n   *  >     job: myJobFunction2,\n   *  >     someParameter2: someValue2\n   *  >   }\n   *  > ], {\n   *  >   someCommonParameter: someCommonValue\n   *  > });\n   *  > conrad.addJob({\n   *  >   myJobId1: {,\n   *  >     job: myJobFunction1,\n   *  >     someParameter1: someValue1\n   *  >   },\n   *  >   myJobId2: {,\n   *  >     job: myJobFunction2,\n   *  >     someParameter2: someValue2\n   *  >   }\n   *  > }, {\n   *  >   someCommonParameter: someCommonValue\n   *  > });\n   *  > conrad.addJob({\n   *  >   myJobId1: myJobFunction1,\n   *  >   myJobId2: myJobFunction2\n   *  > }, {\n   *  >   someCommonParameter: someCommonValue\n   *  > });\n   *\n   *  Recognized parameters:\n   *  **********************\n   *  Here is the exhaustive list of every accepted parameters:\n   *\n   *    {?Function} end      A callback to execute when the job is ended. It is\n   *                         not executed if the job is killed instead of ended\n   *                         \"naturally\".\n   *    {?Integer}  count    The number of time the job has to be executed.\n   *    {?Number}   weight   If specified, the job will be executed as it was\n   *                         added \"weight\" times.\n   *    {?String}   after    The id of another job (eventually not added yet).\n   *                         If specified, this job will start only when the\n   *                         specified \"after\" job is ended.\n   */\n  function _addJob(v1, v2) {\n    var i,\n        l,\n        o;\n\n    // Array of jobs:\n    if (Array.isArray(v1)) {\n      // Keep conrad to start until the last job is added:\n      _noStart = true;\n\n      for (i = 0, l = v1.length; i < l; i++)\n        _addJob(v1[i].id, __extend(v1[i], v2));\n\n      _noStart = false;\n      if (!_isRunning) {\n        // Update the _lastFrameTime:\n        _lastFrameTime = __dateNow();\n\n        _dispatch('start');\n        _loop();\n      }\n    } else if (typeof v1 === 'object') {\n      // One job (object):\n      if (typeof v1.id === 'string')\n        _addJob(v1.id, v1);\n\n      // Hash of jobs:\n      else {\n        // Keep conrad to start until the last job is added:\n        _noStart = true;\n\n        for (i in v1)\n          if (typeof v1[i] === 'function')\n            _addJob(i, __extend({\n              job: v1[i]\n            }, v2));\n          else\n            _addJob(i, __extend(v1[i], v2));\n\n        _noStart = false;\n        if (!_isRunning) {\n          // Update the _lastFrameTime:\n          _lastFrameTime = __dateNow();\n\n          _dispatch('start');\n          _loop();\n        }\n      }\n\n    // One job (string, *):\n    } else if (typeof v1 === 'string') {\n      if (_hasJob(v1))\n        throw new Error(\n          '[conrad.addJob] Job with id \"' + v1 + '\" already exists.'\n        );\n\n      // One job (string, function):\n      if (typeof v2 === 'function') {\n        o = {\n          id: v1,\n          done: 0,\n          time: 0,\n          status: 'waiting',\n          currentTime: 0,\n          averageTime: 0,\n          weightTime: 0,\n          job: v2\n        };\n\n      // One job (string, object):\n      } else if (typeof v2 === 'object') {\n        o = __extend(\n          {\n            id: v1,\n            done: 0,\n            time: 0,\n            status: 'waiting',\n            currentTime: 0,\n            averageTime: 0,\n            weightTime: 0\n          },\n          v2\n        );\n\n      // If none of those cases, throw an error:\n      } else\n        throw new Error('[conrad.addJob] Wrong arguments.');\n\n      // Effectively add the job:\n      _jobs[v1] = o;\n      _dispatch('jobAdded', __clone(o));\n\n      // Check if the loop has to be started:\n      if (!_isRunning && !_noStart) {\n        // Update the _lastFrameTime:\n        _lastFrameTime = __dateNow();\n\n        _dispatch('start');\n        _loop();\n      }\n\n    // If none of those cases, throw an error:\n    } else\n      throw new Error('[conrad.addJob] Wrong arguments.');\n\n    return this;\n  }\n\n  /**\n   * Kills one or more jobs, indicated by their ids. It is only possible to\n   * kill running jobs or waiting jobs. If you try to kill a job that does not\n   * exist or that is already killed, a warning will be thrown.\n   *\n   * @param  {Array|String} v1 A string job id or an array of job ids.\n   * @return {Object}       Returns conrad.\n   */\n  function _killJob(v1) {\n    var i,\n        l,\n        k,\n        a,\n        job,\n        found = false;\n\n    // Array of job ids:\n    if (Array.isArray(v1))\n      for (i = 0, l = v1.length; i < l; i++)\n        _killJob(v1[i]);\n\n    // One job's id:\n    else if (typeof v1 === 'string') {\n      a = [_runningJobs, _waitingJobs, _jobs];\n\n      // Remove the job from the hashes:\n      for (i = 0, l = a.length; i < l; i++)\n        if (v1 in a[i]) {\n          job = a[i][v1];\n\n          if (_parameters.history) {\n            job.status = 'done';\n            _doneJobs.push(job);\n          }\n\n          _dispatch('jobEnded', __clone(job));\n          delete a[i][v1];\n\n          if (typeof job.end === 'function')\n            job.end();\n\n          found = true;\n        }\n\n      // Remove the priorities array:\n      a = _sortedByPriorityJobs;\n      for (i = 0, l = a.length; i < l; i++)\n        if (a[i].id === v1) {\n          a.splice(i, 1);\n          break;\n        }\n\n      if (!found)\n        throw new Error('[conrad.killJob] Job \"' + v1 + '\" not found.');\n\n    // If none of those cases, throw an error:\n    } else\n      throw new Error('[conrad.killJob] Wrong arguments.');\n\n    return this;\n  }\n\n  /**\n   * Kills every running, waiting, and just added jobs.\n   *\n   * @return {Object} Returns conrad.\n   */\n  function _killAll() {\n    var k,\n        jobs = __extend(_jobs, _runningJobs, _waitingJobs);\n\n    // Take every jobs and push them into the _doneJobs object:\n    if (_parameters.history)\n      for (k in jobs) {\n        jobs[k].status = 'done';\n        _doneJobs.push(jobs[k]);\n\n        if (typeof jobs[k].end === 'function')\n          jobs[k].end();\n      }\n\n    // Reinitialize the different jobs lists:\n    _jobs = {};\n    _waitingJobs = {};\n    _runningJobs = {};\n    _sortedByPriorityJobs = [];\n\n    // In case some jobs are added right after the kill:\n    _isRunning = false;\n\n    return this;\n  }\n\n  /**\n   * Returns true if a job with the specified id is currently running or\n   * waiting, and false else.\n   *\n   * @param  {String}  id The id of the job.\n   * @return {?Object} Returns the job object if it exists.\n   */\n  function _hasJob(id) {\n    var job = _jobs[id] || _runningJobs[id] || _waitingJobs[id];\n    return job ? __extend(job) : null;\n  }\n\n  /**\n   * This method will set the setting specified by \"v1\" to the value specified\n   * by \"v2\" if both are given, and else return the current value of the\n   * settings \"v1\".\n   *\n   * @param  {String}   v1 The name of the property.\n   * @param  {?*}       v2 Eventually, a value to set to the specified\n   *                       property.\n   * @return {Object|*} Returns the specified settings value if \"v2\" is not\n   *                    given, and conrad else.\n   */\n  function _settings(v1, v2) {\n    var o;\n\n    if (typeof a1 === 'string' && arguments.length === 1)\n      return _parameters[a1];\n    else {\n      o = (typeof a1 === 'object' && arguments.length === 1) ?\n        a1 || {} :\n        {};\n      if (typeof a1 === 'string')\n        o[a1] = a2;\n\n      for (var k in o)\n        if (o[k] !== undefined)\n          _parameters[k] = o[k];\n        else\n          delete _parameters[k];\n\n      return this;\n    }\n  }\n\n  /**\n   * Returns true if conrad is currently running, and false else.\n   *\n   * @return {Boolean} Returns _isRunning.\n   */\n  function _getIsRunning() {\n    return _isRunning;\n  }\n\n  /**\n   * Unreference every job that is stored in the _doneJobs object. It will\n   * not be possible anymore to get stats about these jobs, but it will release\n   * the memory.\n   *\n   * @return {Object} Returns conrad.\n   */\n  function _clearHistory() {\n    _doneJobs = [];\n    return this;\n  }\n\n  /**\n   * Returns a snapshot of every data about jobs that wait to be started, are\n   * currently running or are done.\n   *\n   * It is possible to get only running, waiting or done jobs by giving\n   * \"running\", \"waiting\" or \"done\" as fist argument.\n   *\n   * It is also possible to get every job with a specified id by giving it as\n   * first argument. Also, using a RegExp instead of an id will return every\n   * jobs whose ids match the RegExp. And these two last use cases work as well\n   * by giving before \"running\", \"waiting\" or \"done\".\n   *\n   * @return {Array} The array of the matching jobs.\n   *\n   * Some call examples:\n   * *******************\n   *  > conrad.getStats('running')\n   *  > conrad.getStats('waiting')\n   *  > conrad.getStats('done')\n   *  > conrad.getStats('myJob')\n   *  > conrad.getStats(/test/)\n   *  > conrad.getStats('running', 'myRunningJob')\n   *  > conrad.getStats('running', /test/)\n   */\n  function _getStats(v1, v2) {\n    var a,\n        k,\n        i,\n        l,\n        stats,\n        pattern,\n        isPatternString;\n\n    if (!arguments.length) {\n      stats = [];\n\n      for (k in _jobs)\n        stats.push(_jobs[k]);\n\n      for (k in _waitingJobs)\n        stats.push(_waitingJobs[k]);\n\n      for (k in _runningJobs)\n        stats.push(_runningJobs[k]);\n\n      stats = stats.concat(_doneJobs);\n    }\n\n    if (typeof v1 === 'string')\n      switch (v1) {\n        case 'waiting':\n          stats = __objectValues(_waitingJobs);\n          break;\n        case 'running':\n          stats = __objectValues(_runningJobs);\n          break;\n        case 'done':\n          stats = _doneJobs;\n          break;\n        default:\n          pattern = v1;\n      }\n\n    if (v1 instanceof RegExp)\n      pattern = v1;\n\n    if (!pattern && (typeof v2 === 'string' || v2 instanceof RegExp))\n      pattern = v2;\n\n    // Filter jobs if a pattern is given:\n    if (pattern) {\n      isPatternString = typeof pattern === 'string';\n\n      if (stats instanceof Array) {\n        a = stats;\n      } else if (typeof stats === 'object') {\n        a = [];\n\n        for (k in stats)\n          a = a.concat(stats[k]);\n      } else {\n        a = [];\n\n        for (k in _jobs)\n          a.push(_jobs[k]);\n\n        for (k in _waitingJobs)\n          a.push(_waitingJobs[k]);\n\n        for (k in _runningJobs)\n          a.push(_runningJobs[k]);\n\n        a = a.concat(_doneJobs);\n      }\n\n      stats = [];\n      for (i = 0, l = a.length; i < l; i++)\n        if (isPatternString ? a[i].id === pattern : a[i].id.match(pattern))\n          stats.push(a[i]);\n    }\n\n    return __clone(stats);\n  }\n\n\n  /**\n   * TOOLS FUNCTIONS:\n   * ****************\n   */\n\n  /**\n   * This function takes any number of objects as arguments, copies from each\n   * of these objects each pair key/value into a new object, and finally\n   * returns this object.\n   *\n   * The arguments are parsed from the last one to the first one, such that\n   * when two objects have keys in common, the \"earliest\" object wins.\n   *\n   * Example:\n   * ********\n   *  > var o1 = {\n   *  >       a: 1,\n   *  >       b: 2,\n   *  >       c: '3'\n   *  >     },\n   *  >     o2 = {\n   *  >       c: '4',\n   *  >       d: [ 5 ]\n   *  >     };\n   *  > __extend(o1, o2);\n   *  > // Returns: {\n   *  > //   a: 1,\n   *  > //   b: 2,\n   *  > //   c: '3',\n   *  > //   d: [ 5 ]\n   *  > // };\n   *\n   * @param  {Object+} Any number of objects.\n   * @return {Object}  The merged object.\n   */\n  function __extend() {\n    var i,\n        k,\n        res = {},\n        l = arguments.length;\n\n    for (i = l - 1; i >= 0; i--)\n      for (k in arguments[i])\n        res[k] = arguments[i][k];\n\n    return res;\n  }\n\n  /**\n   * This function simply clones an object. This object must contain only\n   * objects, arrays and immutable values. Since it is not public, it does not\n   * deal with cyclic references, DOM elements and instantiated objects - so\n   * use it carefully.\n   *\n   * @param  {Object} The object to clone.\n   * @return {Object} The clone.\n   */\n  function __clone(item) {\n    var result, i, k, l;\n\n    if (!item)\n      return item;\n\n    if (Array.isArray(item)) {\n      result = [];\n      for (i = 0, l = item.length; i < l; i++)\n        result.push(__clone(item[i]));\n    } else if (typeof item === 'object') {\n      result = {};\n      for (i in item)\n        result[i] = __clone(item[i]);\n    } else\n      result = item;\n\n    return result;\n  }\n\n  /**\n   * Returns an array containing the values of an object.\n   *\n   * @param  {Object} The object.\n   * @return {Array}  The array of values.\n   */\n  function __objectValues(o) {\n    var k,\n        a = [];\n\n    for (k in o)\n      a.push(o[k]);\n\n    return a;\n  }\n\n  /**\n   * A short \"Date.now()\" polyfill.\n   *\n   * @return {Number} The current time (in ms).\n   */\n  function __dateNow() {\n    return Date.now ? Date.now() : new Date().getTime();\n  }\n\n  /**\n   * Polyfill for the Array.isArray function:\n   */\n  if (!Array.isArray)\n    Array.isArray = function(v) {\n      return Object.prototype.toString.call(v) === '[object Array]';\n    };\n\n\n  /**\n   * EXPORT PUBLIC API:\n   * ******************\n   */\n  var conrad = {\n    hasJob: _hasJob,\n    addJob: _addJob,\n    killJob: _killJob,\n    killAll: _killAll,\n    settings: _settings,\n    getStats: _getStats,\n    isRunning: _getIsRunning,\n    clearHistory: _clearHistory,\n\n    // Events management:\n    bind: _bind,\n    unbind: _unbind,\n\n    // Version:\n    version: '0.1.0'\n  };\n\n  if (true) {\n    if ( true && module.exports)\n      exports = module.exports = conrad;\n    exports.conrad = conrad;\n  }\n  global.conrad = conrad;\n})(this);\n\n// Hardcoded export for the node.js version:\nvar sigma = this.sigma,\n    conrad = this.conrad;\n\nsigma.conrad = conrad;\n\n// Dirty polyfills to permit sigma usage in node\nif (typeof HTMLElement === 'undefined')\n  HTMLElement = function() {};\n\nif (typeof window === 'undefined')\n  window = {\n    addEventListener: function() {}\n  };\n\nif (true) {\n  if ( true && module.exports)\n    exports = module.exports = sigma;\n  exports.sigma = sigma;\n}\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  var _root = this;\n\n  // Initialize packages:\n  sigma.utils = sigma.utils || {};\n\n  /**\n   * MISC UTILS:\n   */\n  /**\n   * This function takes any number of objects as arguments, copies from each\n   * of these objects each pair key/value into a new object, and finally\n   * returns this object.\n   *\n   * The arguments are parsed from the last one to the first one, such that\n   * when several objects have keys in common, the \"earliest\" object wins.\n   *\n   * Example:\n   * ********\n   *  > var o1 = {\n   *  >       a: 1,\n   *  >       b: 2,\n   *  >       c: '3'\n   *  >     },\n   *  >     o2 = {\n   *  >       c: '4',\n   *  >       d: [ 5 ]\n   *  >     };\n   *  > sigma.utils.extend(o1, o2);\n   *  > // Returns: {\n   *  > //   a: 1,\n   *  > //   b: 2,\n   *  > //   c: '3',\n   *  > //   d: [ 5 ]\n   *  > // };\n   *\n   * @param  {object+} Any number of objects.\n   * @return {object}  The merged object.\n   */\n  sigma.utils.extend = function() {\n    var i,\n        k,\n        res = {},\n        l = arguments.length;\n\n    for (i = l - 1; i >= 0; i--)\n      for (k in arguments[i])\n        res[k] = arguments[i][k];\n\n    return res;\n  };\n\n  /**\n   * A short \"Date.now()\" polyfill.\n   *\n   * @return {Number} The current time (in ms).\n   */\n  sigma.utils.dateNow = function() {\n    return Date.now ? Date.now() : new Date().getTime();\n  };\n\n  /**\n   * Takes a package name as parameter and checks at each lebel if it exists,\n   * and if it does not, creates it.\n   *\n   * Example:\n   * ********\n   *  > sigma.utils.pkg('a.b.c');\n   *  > a.b.c;\n   *  > // Object {};\n   *  >\n   *  > sigma.utils.pkg('a.b.d');\n   *  > a.b;\n   *  > // Object { c: {}, d: {} };\n   *\n   * @param  {string} pkgName The name of the package to create/find.\n   * @return {object}         The related package.\n   */\n  sigma.utils.pkg = function(pkgName) {\n    return (pkgName || '').split('.').reduce(function(context, objName) {\n      return (objName in context) ?\n        context[objName] :\n        (context[objName] = {});\n    }, _root);\n  };\n\n  /**\n   * Returns a unique incremental number ID.\n   *\n   * Example:\n   * ********\n   *  > sigma.utils.id();\n   *  > // 1;\n   *  >\n   *  > sigma.utils.id();\n   *  > // 2;\n   *  >\n   *  > sigma.utils.id();\n   *  > // 3;\n   *\n   * @param  {string} pkgName The name of the package to create/find.\n   * @return {object}         The related package.\n   */\n  sigma.utils.id = (function() {\n    var i = 0;\n    return function() {\n      return ++i;\n    };\n  })();\n\n  /**\n   * This function takes an hexa color (for instance \"#ffcc00\" or \"#fc0\") or a\n   * rgb / rgba color (like \"rgb(255,255,12)\" or \"rgba(255,255,12,1)\") and\n   * returns an integer equal to \"r * 255 * 255 + g * 255 + b\", to gain some\n   * memory in the data given to WebGL shaders.\n   *\n   * Note that the function actually caches its results for better performance.\n   *\n   * @param  {string} val The hexa or rgba color.\n   * @return {number}     The number value.\n   */\n  var floatColorCache = {};\n\n  sigma.utils.floatColor = function(val) {\n\n    // Is the color already computed?\n    if (floatColorCache[val])\n      return floatColorCache[val];\n\n    var original = val,\n        r = 0,\n        g = 0,\n        b = 0;\n\n    if (val[0] === '#') {\n      val = val.slice(1);\n\n      if (val.length === 3) {\n        r = parseInt(val.charAt(0) + val.charAt(0), 16);\n        g = parseInt(val.charAt(1) + val.charAt(1), 16);\n        b = parseInt(val.charAt(2) + val.charAt(2), 16);\n      }\n      else {\n        r = parseInt(val.charAt(0) + val.charAt(1), 16);\n        g = parseInt(val.charAt(2) + val.charAt(3), 16);\n        b = parseInt(val.charAt(4) + val.charAt(5), 16);\n      }\n    } else if (val.match(/^ *rgba? *\\(/)) {\n      val = val.match(\n        /^ *rgba? *\\( *([0-9]*) *, *([0-9]*) *, *([0-9]*) *(,.*)?\\) *$/\n      );\n      r = +val[1];\n      g = +val[2];\n      b = +val[3];\n    }\n\n    var color = (\n      r * 256 * 256 +\n      g * 256 +\n      b\n    );\n\n    // Caching the color\n    floatColorCache[original] = color;\n\n    return color;\n  };\n\n    /**\n   * Perform a zoom into a camera, with or without animation, to the\n   * coordinates indicated using a specified ratio.\n   *\n   * Recognized parameters:\n   * **********************\n   * Here is the exhaustive list of every accepted parameters in the animation\n   * object:\n   *\n   *   {?number} duration     An amount of time that means the duration of the\n   *                          animation. If this parameter doesn't exist the\n   *                          zoom will be performed without animation.\n   *   {?function} onComplete A function to perform it after the animation. It\n   *                          will be performed even if there is no duration.\n   *\n   * @param {camera}     The camera where perform the zoom.\n   * @param {x}          The X coordiantion where the zoom goes.\n   * @param {y}          The Y coordiantion where the zoom goes.\n   * @param {ratio}      The ratio to apply it to the current camera ratio.\n   * @param {?animation} A dictionary with options for a possible animation.\n   */\n  sigma.utils.zoomTo = function(camera, x, y, ratio, animation) {\n    var settings = camera.settings,\n        count,\n        newRatio,\n        animationSettings,\n        coordinates;\n\n    // Create the newRatio dealing with min / max:\n    newRatio = Math.max(\n      settings('zoomMin'),\n      Math.min(\n        settings('zoomMax'),\n        camera.ratio * ratio\n      )\n    );\n\n    // Check that the new ratio is different from the initial one:\n    if (newRatio !== camera.ratio) {\n      // Create the coordinates variable:\n      ratio = newRatio / camera.ratio;\n      coordinates = {\n        x: x * (1 - ratio) + camera.x,\n        y: y * (1 - ratio) + camera.y,\n        ratio: newRatio\n      };\n\n      if (animation && animation.duration) {\n        // Complete the animation setings:\n        count = sigma.misc.animation.killAll(camera);\n        animation = sigma.utils.extend(\n          animation,\n          {\n            easing: count ? 'quadraticOut' : 'quadraticInOut'\n          }\n        );\n\n        sigma.misc.animation.camera(camera, coordinates, animation);\n      } else {\n        camera.goTo(coordinates);\n        if (animation && animation.onComplete)\n          animation.onComplete();\n      }\n    }\n  };\n\n  /**\n   * Return the control point coordinates for a quadratic bezier curve.\n   *\n   * @param  {number} x1  The X coordinate of the start point.\n   * @param  {number} y1  The Y coordinate of the start point.\n   * @param  {number} x2  The X coordinate of the end point.\n   * @param  {number} y2  The Y coordinate of the end point.\n   * @return {x,y}        The control point coordinates.\n   */\n  sigma.utils.getQuadraticControlPoint = function(x1, y1, x2, y2) {\n    return {\n      x: (x1 + x2) / 2 + (y2 - y1) / 4,\n      y: (y1 + y2) / 2 + (x1 - x2) / 4\n    };\n  };\n\n  /**\n    * Compute the coordinates of the point positioned\n    * at length t in the quadratic bezier curve.\n    *\n    * @param  {number} t  In [0,1] the step percentage to reach\n    *                     the point in the curve from the context point.\n    * @param  {number} x1 The X coordinate of the context point.\n    * @param  {number} y1 The Y coordinate of the context point.\n    * @param  {number} x2 The X coordinate of the ending point.\n    * @param  {number} y2 The Y coordinate of the ending point.\n    * @param  {number} xi The X coordinate of the control point.\n    * @param  {number} yi The Y coordinate of the control point.\n    * @return {object}    {x,y}.\n  */\n  sigma.utils.getPointOnQuadraticCurve = function(t, x1, y1, x2, y2, xi, yi) {\n    // http://stackoverflow.com/a/5634528\n    return {\n      x: Math.pow(1 - t, 2) * x1 + 2 * (1 - t) * t * xi + Math.pow(t, 2) * x2,\n      y: Math.pow(1 - t, 2) * y1 + 2 * (1 - t) * t * yi + Math.pow(t, 2) * y2\n    };\n  };\n\n  /**\n    * Compute the coordinates of the point positioned\n    * at length t in the cubic bezier curve.\n    *\n    * @param  {number} t  In [0,1] the step percentage to reach\n    *                     the point in the curve from the context point.\n    * @param  {number} x1 The X coordinate of the context point.\n    * @param  {number} y1 The Y coordinate of the context point.\n    * @param  {number} x2 The X coordinate of the end point.\n    * @param  {number} y2 The Y coordinate of the end point.\n    * @param  {number} cx The X coordinate of the first control point.\n    * @param  {number} cy The Y coordinate of the first control point.\n    * @param  {number} dx The X coordinate of the second control point.\n    * @param  {number} dy The Y coordinate of the second control point.\n    * @return {object}    {x,y} The point at t.\n  */\n  sigma.utils.getPointOnBezierCurve =\n    function(t, x1, y1, x2, y2, cx, cy, dx, dy) {\n    // http://stackoverflow.com/a/15397596\n    // Blending functions:\n    var B0_t = Math.pow(1 - t, 3),\n        B1_t = 3 * t * Math.pow(1 - t, 2),\n        B2_t = 3 * Math.pow(t, 2) * (1 - t),\n        B3_t = Math.pow(t, 3);\n\n    return {\n      x: (B0_t * x1) + (B1_t * cx) + (B2_t * dx) + (B3_t * x2),\n      y: (B0_t * y1) + (B1_t * cy) + (B2_t * dy) + (B3_t * y2)\n    };\n  };\n\n  /**\n   * Return the coordinates of the two control points for a self loop (i.e.\n   * where the start point is also the end point) computed as a cubic bezier\n   * curve.\n   *\n   * @param  {number} x    The X coordinate of the node.\n   * @param  {number} y    The Y coordinate of the node.\n   * @param  {number} size The node size.\n   * @return {x1,y1,x2,y2} The coordinates of the two control points.\n   */\n  sigma.utils.getSelfLoopControlPoints = function(x , y, size) {\n    return {\n      x1: x - size * 7,\n      y1: y,\n      x2: x,\n      y2: y + size * 7\n    };\n  };\n\n  /**\n   * Return the euclidian distance between two points of a plane\n   * with an orthonormal basis.\n   *\n   * @param  {number} x1  The X coordinate of the first point.\n   * @param  {number} y1  The Y coordinate of the first point.\n   * @param  {number} x2  The X coordinate of the second point.\n   * @param  {number} y2  The Y coordinate of the second point.\n   * @return {number}     The euclidian distance.\n   */\n  sigma.utils.getDistance = function(x0, y0, x1, y1) {\n    return Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n  };\n\n  /**\n   * Return the coordinates of the intersection points of two circles.\n   *\n   * @param  {number} x0  The X coordinate of center location of the first\n   *                      circle.\n   * @param  {number} y0  The Y coordinate of center location of the first\n   *                      circle.\n   * @param  {number} r0  The radius of the first circle.\n   * @param  {number} x1  The X coordinate of center location of the second\n   *                      circle.\n   * @param  {number} y1  The Y coordinate of center location of the second\n   *                      circle.\n   * @param  {number} r1  The radius of the second circle.\n   * @return {xi,yi}      The coordinates of the intersection points.\n   */\n  sigma.utils.getCircleIntersection = function(x0, y0, r0, x1, y1, r1) {\n    // http://stackoverflow.com/a/12219802\n    var a, dx, dy, d, h, rx, ry, x2, y2;\n\n    // dx and dy are the vertical and horizontal distances between the circle\n    // centers:\n    dx = x1 - x0;\n    dy = y1 - y0;\n\n    // Determine the straight-line distance between the centers:\n    d = Math.sqrt((dy * dy) + (dx * dx));\n\n    // Check for solvability:\n    if (d > (r0 + r1)) {\n        // No solution. circles do not intersect.\n        return false;\n    }\n    if (d < Math.abs(r0 - r1)) {\n        // No solution. one circle is contained in the other.\n        return false;\n    }\n\n    //'point 2' is the point where the line through the circle intersection\n    // points crosses the line between the circle centers.\n\n    // Determine the distance from point 0 to point 2:\n    a = ((r0 * r0) - (r1 * r1) + (d * d)) / (2.0 * d);\n\n    // Determine the coordinates of point 2:\n    x2 = x0 + (dx * a / d);\n    y2 = y0 + (dy * a / d);\n\n    // Determine the distance from point 2 to either of the intersection\n    // points:\n    h = Math.sqrt((r0 * r0) - (a * a));\n\n    // Determine the offsets of the intersection points from point 2:\n    rx = -dy * (h / d);\n    ry = dx * (h / d);\n\n    // Determine the absolute intersection points:\n    var xi = x2 + rx;\n    var xi_prime = x2 - rx;\n    var yi = y2 + ry;\n    var yi_prime = y2 - ry;\n\n    return {xi: xi, xi_prime: xi_prime, yi: yi, yi_prime: yi_prime};\n  };\n\n  /**\n    * Check if a point is on a line segment.\n    *\n    * @param  {number} x       The X coordinate of the point to check.\n    * @param  {number} y       The Y coordinate of the point to check.\n    * @param  {number} x1      The X coordinate of the line start point.\n    * @param  {number} y1      The Y coordinate of the line start point.\n    * @param  {number} x2      The X coordinate of the line end point.\n    * @param  {number} y2      The Y coordinate of the line end point.\n    * @param  {number} epsilon The precision (consider the line thickness).\n    * @return {boolean}        True if point is \"close to\" the line\n    *                          segment, false otherwise.\n  */\n  sigma.utils.isPointOnSegment = function(x, y, x1, y1, x2, y2, epsilon) {\n    // http://stackoverflow.com/a/328122\n    var crossProduct = Math.abs((y - y1) * (x2 - x1) - (x - x1) * (y2 - y1)),\n        d = sigma.utils.getDistance(x1, y1, x2, y2),\n        nCrossProduct = crossProduct / d; // normalized cross product\n\n    return (nCrossProduct < epsilon &&\n     Math.min(x1, x2) <= x && x <= Math.max(x1, x2) &&\n     Math.min(y1, y2) <= y && y <= Math.max(y1, y2));\n  };\n\n  /**\n    * Check if a point is on a quadratic bezier curve segment with a thickness.\n    *\n    * @param  {number} x       The X coordinate of the point to check.\n    * @param  {number} y       The Y coordinate of the point to check.\n    * @param  {number} x1      The X coordinate of the curve start point.\n    * @param  {number} y1      The Y coordinate of the curve start point.\n    * @param  {number} x2      The X coordinate of the curve end point.\n    * @param  {number} y2      The Y coordinate of the curve end point.\n    * @param  {number} cpx     The X coordinate of the curve control point.\n    * @param  {number} cpy     The Y coordinate of the curve control point.\n    * @param  {number} epsilon The precision (consider the line thickness).\n    * @return {boolean}        True if (x,y) is on the curve segment,\n    *                          false otherwise.\n  */\n  sigma.utils.isPointOnQuadraticCurve =\n    function(x, y, x1, y1, x2, y2, cpx, cpy, epsilon) {\n    // Fails if the point is too far from the extremities of the segment,\n    // preventing for more costly computation:\n    var dP1P2 = sigma.utils.getDistance(x1, y1, x2, y2);\n    if (Math.abs(x - x1) > dP1P2 || Math.abs(y - y1) > dP1P2) {\n      return false;\n    }\n\n    var dP1 = sigma.utils.getDistance(x, y, x1, y1),\n        dP2 = sigma.utils.getDistance(x, y, x2, y2),\n        t = 0.5,\n        r = (dP1 < dP2) ? -0.01 : 0.01,\n        rThreshold = 0.001,\n        i = 100,\n        pt = sigma.utils.getPointOnQuadraticCurve(t, x1, y1, x2, y2, cpx, cpy),\n        dt = sigma.utils.getDistance(x, y, pt.x, pt.y),\n        old_dt;\n\n    // This algorithm minimizes the distance from the point to the curve. It\n    // find the optimal t value where t=0 is the start point and t=1 is the end\n    // point of the curve, starting from t=0.5.\n    // It terminates because it runs a maximum of i interations.\n    while (i-- > 0 &&\n      t >= 0 && t <= 1 &&\n      (dt > epsilon) &&\n      (r > rThreshold || r < -rThreshold)) {\n      old_dt = dt;\n      pt = sigma.utils.getPointOnQuadraticCurve(t, x1, y1, x2, y2, cpx, cpy);\n      dt = sigma.utils.getDistance(x, y, pt.x, pt.y);\n\n      if (dt > old_dt) {\n        // not the right direction:\n        // halfstep in the opposite direction\n        r = -r / 2;\n        t += r;\n      }\n      else if (t + r < 0 || t + r > 1) {\n        // oops, we've gone too far:\n        // revert with a halfstep\n        r = r / 2;\n        dt = old_dt;\n      }\n      else {\n        // progress:\n        t += r;\n      }\n    }\n\n    return dt < epsilon;\n  };\n\n\n  /**\n    * Check if a point is on a cubic bezier curve segment with a thickness.\n    *\n    * @param  {number} x       The X coordinate of the point to check.\n    * @param  {number} y       The Y coordinate of the point to check.\n    * @param  {number} x1      The X coordinate of the curve start point.\n    * @param  {number} y1      The Y coordinate of the curve start point.\n    * @param  {number} x2      The X coordinate of the curve end point.\n    * @param  {number} y2      The Y coordinate of the curve end point.\n    * @param  {number} cpx1    The X coordinate of the 1st curve control point.\n    * @param  {number} cpy1    The Y coordinate of the 1st curve control point.\n    * @param  {number} cpx2    The X coordinate of the 2nd curve control point.\n    * @param  {number} cpy2    The Y coordinate of the 2nd curve control point.\n    * @param  {number} epsilon The precision (consider the line thickness).\n    * @return {boolean}        True if (x,y) is on the curve segment,\n    *                          false otherwise.\n  */\n  sigma.utils.isPointOnBezierCurve =\n    function(x, y, x1, y1, x2, y2, cpx1, cpy1, cpx2, cpy2, epsilon) {\n    // Fails if the point is too far from the extremities of the segment,\n    // preventing for more costly computation:\n    var dP1CP1 = sigma.utils.getDistance(x1, y1, cpx1, cpy1);\n    if (Math.abs(x - x1) > dP1CP1 || Math.abs(y - y1) > dP1CP1) {\n      return false;\n    }\n\n    var dP1 = sigma.utils.getDistance(x, y, x1, y1),\n        dP2 = sigma.utils.getDistance(x, y, x2, y2),\n        t = 0.5,\n        r = (dP1 < dP2) ? -0.01 : 0.01,\n        rThreshold = 0.001,\n        i = 100,\n        pt = sigma.utils.getPointOnBezierCurve(\n          t, x1, y1, x2, y2, cpx1, cpy1, cpx2, cpy2),\n        dt = sigma.utils.getDistance(x, y, pt.x, pt.y),\n        old_dt;\n\n    // This algorithm minimizes the distance from the point to the curve. It\n    // find the optimal t value where t=0 is the start point and t=1 is the end\n    // point of the curve, starting from t=0.5.\n    // It terminates because it runs a maximum of i interations.\n    while (i-- > 0 &&\n      t >= 0 && t <= 1 &&\n      (dt > epsilon) &&\n      (r > rThreshold || r < -rThreshold)) {\n      old_dt = dt;\n      pt = sigma.utils.getPointOnBezierCurve(\n        t, x1, y1, x2, y2, cpx1, cpy1, cpx2, cpy2);\n      dt = sigma.utils.getDistance(x, y, pt.x, pt.y);\n\n      if (dt > old_dt) {\n        // not the right direction:\n        // halfstep in the opposite direction\n        r = -r / 2;\n        t += r;\n      }\n      else if (t + r < 0 || t + r > 1) {\n        // oops, we've gone too far:\n        // revert with a halfstep\n        r = r / 2;\n        dt = old_dt;\n      }\n      else {\n        // progress:\n        t += r;\n      }\n    }\n\n    return dt < epsilon;\n  };\n\n\n  /**\n   * ************\n   * EVENTS UTILS:\n   * ************\n   */\n  /**\n   * Here are some useful functions to unify extraction of the information we\n   * need with mouse events and touch events, from different browsers:\n   */\n\n  /**\n   * Extract the local X position from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {number}   The local X value of the mouse.\n   */\n  sigma.utils.getX = function(e) {\n    return (\n      (e.offsetX !== undefined && e.offsetX) ||\n      (e.layerX !== undefined && e.layerX) ||\n      (e.clientX !== undefined && e.clientX)\n    );\n  };\n\n  /**\n   * Extract the local Y position from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {number}   The local Y value of the mouse.\n   */\n  sigma.utils.getY = function(e) {\n    return (\n      (e.offsetY !== undefined && e.offsetY) ||\n      (e.layerY !== undefined && e.layerY) ||\n      (e.clientY !== undefined && e.clientY)\n    );\n  };\n\n  /**\n   * The pixel ratio of the screen. Taking zoom into account\n   *\n   * @return {number}        Pixel ratio of the screen\n   */\n  sigma.utils.getPixelRatio = function() {\n    var ratio = 1;\n    if (window.screen.deviceXDPI !== undefined &&\n         window.screen.logicalXDPI !== undefined &&\n         window.screen.deviceXDPI > window.screen.logicalXDPI) {\n        ratio = window.screen.systemXDPI / window.screen.logicalXDPI;\n    }\n    else if (window.devicePixelRatio !== undefined) {\n        ratio = window.devicePixelRatio;\n    }\n    return ratio;\n  };\n\n  /**\n   * Extract the width from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {number}   The width of the event's target.\n   */\n  sigma.utils.getWidth = function(e) {\n    var w = (!e.target.ownerSVGElement) ?\n              e.target.width :\n              e.target.ownerSVGElement.width;\n\n    return (\n      (typeof w === 'number' && w) ||\n      (w !== undefined && w.baseVal !== undefined && w.baseVal.value)\n    );\n  };\n\n  /**\n   * Extract the center from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {object}   The center of the event's target.\n   */\n  sigma.utils.getCenter = function(e) {\n    var ratio = e.target.namespaceURI.indexOf('svg') !== -1 ? 1 :\n        sigma.utils.getPixelRatio();\n    return {\n      x: sigma.utils.getWidth(e) / (2 * ratio),\n      y: sigma.utils.getHeight(e) / (2 * ratio)\n    };\n  };\n\n  /**\n   * Convert mouse coords to sigma coords\n   *\n   * @param  {event}   e A mouse or touch event.\n   * @param  {number?} x The x coord to convert\n   * @param  {number?} x The y coord to convert\n   *\n   * @return {object}    The standardized event\n   */\n  sigma.utils.mouseCoords = function(e, x, y) {\n    x = x || sigma.utils.getX(e);\n    y = y || sigma.utils.getY(e);\n    return {\n        x: x - sigma.utils.getCenter(e).x,\n        y: y - sigma.utils.getCenter(e).y,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        ctrlKey: e.ctrlKey,\n        metaKey: e.metaKey,\n        altKey: e.altKey,\n        shiftKey: e.shiftKey\n    };\n  };\n\n  /**\n   * Extract the height from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {number}   The height of the event's target.\n   */\n  sigma.utils.getHeight = function(e) {\n    var h = (!e.target.ownerSVGElement) ?\n              e.target.height :\n              e.target.ownerSVGElement.height;\n\n    return (\n      (typeof h === 'number' && h) ||\n      (h !== undefined && h.baseVal !== undefined && h.baseVal.value)\n    );\n  };\n\n  /**\n   * Extract the wheel delta from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {number}   The wheel delta of the mouse.\n   */\n  sigma.utils.getDelta = function(e) {\n    return (\n      (e.wheelDelta !== undefined && e.wheelDelta) ||\n      (e.detail !== undefined && -e.detail)\n    );\n  };\n\n  /**\n   * Returns the offset of a DOM element.\n   *\n   * @param  {DOMElement} dom The element to retrieve the position.\n   * @return {object}         The offset of the DOM element (top, left).\n   */\n  sigma.utils.getOffset = function(dom) {\n    var left = 0,\n        top = 0;\n\n    while (dom) {\n      top = top + parseInt(dom.offsetTop);\n      left = left + parseInt(dom.offsetLeft);\n      dom = dom.offsetParent;\n    }\n\n    return {\n      top: top,\n      left: left\n    };\n  };\n\n  /**\n   * Simulates a \"double click\" event.\n   *\n   * @param  {HTMLElement} target   The event target.\n   * @param  {string}      type     The event type.\n   * @param  {function}    callback The callback to execute.\n   */\n  sigma.utils.doubleClick = function(target, type, callback) {\n    var clicks = 0,\n        self = this,\n        handlers;\n\n    target._doubleClickHandler = target._doubleClickHandler || {};\n    target._doubleClickHandler[type] = target._doubleClickHandler[type] || [];\n    handlers = target._doubleClickHandler[type];\n\n    handlers.push(function(e) {\n      clicks++;\n\n      if (clicks === 2) {\n        clicks = 0;\n        return callback(e);\n      } else if (clicks === 1) {\n        setTimeout(function() {\n          clicks = 0;\n        }, sigma.settings.doubleClickTimeout);\n      }\n    });\n\n    target.addEventListener(type, handlers[handlers.length - 1], false);\n  };\n\n  /**\n   * Unbind simulated \"double click\" events.\n   *\n   * @param  {HTMLElement} target   The event target.\n   * @param  {string}      type     The event type.\n   */\n  sigma.utils.unbindDoubleClick = function(target, type) {\n    var handler,\n        handlers = (target._doubleClickHandler || {})[type] || [];\n\n    while ((handler = handlers.pop())) {\n      target.removeEventListener(type, handler);\n    }\n\n    delete (target._doubleClickHandler || {})[type];\n  };\n\n\n\n\n  /**\n   * Here are just some of the most basic easing functions, used for the\n   * animated camera \"goTo\" calls.\n   *\n   * If you need some more easings functions, don't hesitate to add them to\n   * sigma.utils.easings. But I will not add some more here or merge PRs\n   * containing, because I do not want sigma sources full of overkill and never\n   * used stuff...\n   */\n  sigma.utils.easings = sigma.utils.easings || {};\n  sigma.utils.easings.linearNone = function(k) {\n    return k;\n  };\n  sigma.utils.easings.quadraticIn = function(k) {\n    return k * k;\n  };\n  sigma.utils.easings.quadraticOut = function(k) {\n    return k * (2 - k);\n  };\n  sigma.utils.easings.quadraticInOut = function(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k;\n    return - 0.5 * (--k * (k - 2) - 1);\n  };\n  sigma.utils.easings.cubicIn = function(k) {\n    return k * k * k;\n  };\n  sigma.utils.easings.cubicOut = function(k) {\n    return --k * k * k + 1;\n  };\n  sigma.utils.easings.cubicInOut = function(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k * k;\n    return 0.5 * ((k -= 2) * k * k + 2);\n  };\n\n\n\n\n  /**\n   * ************\n   * WEBGL UTILS:\n   * ************\n   */\n  /**\n   * Loads a WebGL shader and returns it.\n   *\n   * @param  {WebGLContext}           gl           The WebGLContext to use.\n   * @param  {string}                 shaderSource The shader source.\n   * @param  {number}                 shaderType   The type of shader.\n   * @param  {function(string): void} error        Callback for errors.\n   * @return {WebGLShader}                         The created shader.\n   */\n  sigma.utils.loadShader = function(gl, shaderSource, shaderType, error) {\n    var compiled,\n        shader = gl.createShader(shaderType);\n\n    // Load the shader source\n    gl.shaderSource(shader, shaderSource);\n\n    // Compile the shader\n    gl.compileShader(shader);\n\n    // Check the compile status\n    compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n    // If something went wrong:\n    if (!compiled) {\n      if (error) {\n        error(\n          'Error compiling shader \"' + shader + '\":' +\n          gl.getShaderInfoLog(shader)\n        );\n      }\n\n      gl.deleteShader(shader);\n      return null;\n    }\n\n    return shader;\n  };\n\n  /**\n   * Creates a program, attaches shaders, binds attrib locations, links the\n   * program and calls useProgram.\n   *\n   * @param  {Array.<WebGLShader>}    shaders   The shaders to attach.\n   * @param  {Array.<string>}         attribs   The attribs names.\n   * @param  {Array.<number>}         locations The locations for the attribs.\n   * @param  {function(string): void} error     Callback for errors.\n   * @return {WebGLProgram}                     The created program.\n   */\n  sigma.utils.loadProgram = function(gl, shaders, attribs, loc, error) {\n    var i,\n        linked,\n        program = gl.createProgram();\n\n    for (i = 0; i < shaders.length; ++i)\n      gl.attachShader(program, shaders[i]);\n\n    if (attribs)\n      for (i = 0; i < attribs.length; ++i)\n        gl.bindAttribLocation(\n          program,\n          locations ? locations[i] : i,\n          opt_attribs[i]\n        );\n\n    gl.linkProgram(program);\n\n    // Check the link status\n    linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      if (error)\n        error('Error in program linking: ' + gl.getProgramInfoLog(program));\n\n      gl.deleteProgram(program);\n      return null;\n    }\n\n    return program;\n  };\n\n\n\n\n  /**\n   * *********\n   * MATRICES:\n   * *********\n   * The following utils are just here to help generating the transformation\n   * matrices for the WebGL renderers.\n   */\n  sigma.utils.pkg('sigma.utils.matrices');\n\n  /**\n   * The returns a 3x3 translation matrix.\n   *\n   * @param  {number} dx The X translation.\n   * @param  {number} dy The Y translation.\n   * @return {array}     Returns the matrix.\n   */\n  sigma.utils.matrices.translation = function(dx, dy) {\n    return [\n      1, 0, 0,\n      0, 1, 0,\n      dx, dy, 1\n    ];\n  };\n\n  /**\n   * The returns a 3x3 or 2x2 rotation matrix.\n   *\n   * @param  {number}  angle The rotation angle.\n   * @param  {boolean} m2    If true, the function will return a 2x2 matrix.\n   * @return {array}         Returns the matrix.\n   */\n  sigma.utils.matrices.rotation = function(angle, m2) {\n    var cos = Math.cos(angle),\n        sin = Math.sin(angle);\n\n    return m2 ? [\n      cos, -sin,\n      sin, cos\n    ] : [\n      cos, -sin, 0,\n      sin, cos, 0,\n      0, 0, 1\n    ];\n  };\n\n  /**\n   * The returns a 3x3 or 2x2 homothetic transformation matrix.\n   *\n   * @param  {number}  ratio The scaling ratio.\n   * @param  {boolean} m2    If true, the function will return a 2x2 matrix.\n   * @return {array}         Returns the matrix.\n   */\n  sigma.utils.matrices.scale = function(ratio, m2) {\n    return m2 ? [\n      ratio, 0,\n      0, ratio\n    ] : [\n      ratio, 0, 0,\n      0, ratio, 0,\n      0, 0, 1\n    ];\n  };\n\n  /**\n   * The returns a 3x3 or 2x2 homothetic transformation matrix.\n   *\n   * @param  {array}   a  The first matrix.\n   * @param  {array}   b  The second matrix.\n   * @param  {boolean} m2 If true, the function will assume both matrices are\n   *                      2x2.\n   * @return {array}      Returns the matrix.\n   */\n  sigma.utils.matrices.multiply = function(a, b, m2) {\n    var l = m2 ? 2 : 3,\n        a00 = a[0 * l + 0],\n        a01 = a[0 * l + 1],\n        a02 = a[0 * l + 2],\n        a10 = a[1 * l + 0],\n        a11 = a[1 * l + 1],\n        a12 = a[1 * l + 2],\n        a20 = a[2 * l + 0],\n        a21 = a[2 * l + 1],\n        a22 = a[2 * l + 2],\n        b00 = b[0 * l + 0],\n        b01 = b[0 * l + 1],\n        b02 = b[0 * l + 2],\n        b10 = b[1 * l + 0],\n        b11 = b[1 * l + 1],\n        b12 = b[1 * l + 2],\n        b20 = b[2 * l + 0],\n        b21 = b[2 * l + 1],\n        b22 = b[2 * l + 2];\n\n    return m2 ? [\n      a00 * b00 + a01 * b10,\n      a00 * b01 + a01 * b11,\n      a10 * b00 + a11 * b10,\n      a10 * b01 + a11 * b11\n    ] : [\n      a00 * b00 + a01 * b10 + a02 * b20,\n      a00 * b01 + a01 * b11 + a02 * b21,\n      a00 * b02 + a01 * b12 + a02 * b22,\n      a10 * b00 + a11 * b10 + a12 * b20,\n      a10 * b01 + a11 * b11 + a12 * b21,\n      a10 * b02 + a11 * b12 + a12 * b22,\n      a20 * b00 + a21 * b10 + a22 * b20,\n      a20 * b01 + a21 * b11 + a22 * b21,\n      a20 * b02 + a21 * b12 + a22 * b22\n    ];\n  };\n}).call(this);\n\n;(function(global) {\n  'use strict';\n\n  /**\n   * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n   * requestAnimationFrame polyfill by Erik Möller.\n   * fixes from Paul Irish and Tino Zijdel\n   * MIT license\n   */\n  var x,\n      lastTime = 0,\n      vendors = ['ms', 'moz', 'webkit', 'o'];\n\n  for (x = 0; x < vendors.length && !global.requestAnimationFrame; x++) {\n    global.requestAnimationFrame =\n      global[vendors[x] + 'RequestAnimationFrame'];\n    global.cancelAnimationFrame =\n      global[vendors[x] + 'CancelAnimationFrame'] ||\n      global[vendors[x] + 'CancelRequestAnimationFrame'];\n  }\n\n  if (!global.requestAnimationFrame)\n    global.requestAnimationFrame = function(callback, element) {\n      var currTime = new Date().getTime(),\n          timeToCall = Math.max(0, 16 - (currTime - lastTime)),\n          id = global.setTimeout(\n            function() {\n              callback(currTime + timeToCall);\n            },\n            timeToCall\n          );\n\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n\n  if (!global.cancelAnimationFrame)\n    global.cancelAnimationFrame = function(id) {\n      clearTimeout(id);\n    };\n\n  /**\n   * Function.prototype.bind polyfill found on MDN.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Compatibility\n   * Public domain\n   */\n  if (!Function.prototype.bind)\n    Function.prototype.bind = function(oThis) {\n      if (typeof this !== 'function')\n        // Closest thing possible to the ECMAScript 5 internal IsCallable\n        // function:\n        throw new TypeError(\n          'Function.prototype.bind - what is trying to be bound is not callable'\n        );\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP,\n          fBound;\n\n      fNOP = function() {};\n      fBound = function() {\n        return fToBind.apply(\n          this instanceof fNOP && oThis ?\n            this :\n            oThis,\n          aArgs.concat(Array.prototype.slice.call(arguments))\n        );\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n})(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Packages initialization:\n  sigma.utils.pkg('sigma.settings');\n\n  var settings = {\n    /**\n     * GRAPH SETTINGS:\n     * ***************\n     */\n    // {boolean} Indicates if the data have to be cloned in methods to add\n    //           nodes or edges.\n    clone: true,\n    // {boolean} Indicates if nodes \"id\" values and edges \"id\", \"source\" and\n    //           \"target\" values must be set as immutable.\n    immutable: true,\n    // {boolean} Indicates if sigma can log its errors and warnings.\n    verbose: false,\n\n\n    /**\n     * RENDERERS SETTINGS:\n     * *******************\n     */\n    // {string}\n    classPrefix: 'sigma',\n    // {string}\n    defaultNodeType: 'def',\n    // {string}\n    defaultEdgeType: 'def',\n    // {string}\n    defaultLabelColor: '#000',\n    // {string}\n    defaultEdgeColor: '#000',\n    // {string}\n    defaultNodeColor: '#000',\n    // {string}\n    defaultLabelSize: 14,\n    // {string} Indicates how to choose the edges color. Available values:\n    //          \"source\", \"target\", \"default\"\n    edgeColor: 'source',\n    // {number} Defines the minimal edge's arrow display size.\n    minArrowSize: 0,\n    // {string}\n    font: 'arial',\n    // {string} Example: 'bold'\n    fontStyle: '',\n    // {string} Indicates how to choose the labels color. Available values:\n    //          \"node\", \"default\"\n    labelColor: 'default',\n    // {string} Indicates how to choose the labels size. Available values:\n    //          \"fixed\", \"proportional\"\n    labelSize: 'fixed',\n    // {string} The ratio between the font size of the label and the node size.\n    labelSizeRatio: 1,\n    // {number} The minimum size a node must have to see its label displayed.\n    labelThreshold: 8,\n    // {number} The oversampling factor used in WebGL renderer.\n    webglOversamplingRatio: 2,\n    // {number} The size of the border of hovered nodes.\n    borderSize: 0,\n    // {number} The default hovered node border's color.\n    defaultNodeBorderColor: '#000',\n    // {number} The hovered node's label font. If not specified, will heritate\n    //          the \"font\" value.\n    hoverFont: '',\n    // {boolean} If true, then only one node can be hovered at a time.\n    singleHover: true,\n    // {string} Example: 'bold'\n    hoverFontStyle: '',\n    // {string} Indicates how to choose the hovered nodes shadow color.\n    //          Available values: \"node\", \"default\"\n    labelHoverShadow: 'default',\n    // {string}\n    labelHoverShadowColor: '#000',\n    // {string} Indicates how to choose the hovered nodes color.\n    //          Available values: \"node\", \"default\"\n    nodeHoverColor: 'node',\n    // {string}\n    defaultNodeHoverColor: '#000',\n    // {string} Indicates how to choose the hovered nodes background color.\n    //          Available values: \"node\", \"default\"\n    labelHoverBGColor: 'default',\n    // {string}\n    defaultHoverLabelBGColor: '#fff',\n    // {string} Indicates how to choose the hovered labels color.\n    //          Available values: \"node\", \"default\"\n    labelHoverColor: 'default',\n    // {string}\n    defaultLabelHoverColor: '#000',\n    // {string} Indicates how to choose the edges hover color. Available values:\n    //          \"edge\", \"default\"\n    edgeHoverColor: 'edge',\n    // {number} The size multiplicator of hovered edges.\n    edgeHoverSizeRatio: 1,\n    // {string}\n    defaultEdgeHoverColor: '#000',\n    // {boolean} Indicates if the edge extremities must be hovered when the\n    //           edge is hovered.\n    edgeHoverExtremities: false,\n    // {booleans} The different drawing modes:\n    //           false: Layered not displayed.\n    //           true: Layered displayed.\n    drawEdges: true,\n    drawNodes: true,\n    drawLabels: true,\n    drawEdgeLabels: false,\n    // {boolean} Indicates if the edges must be drawn in several frames or in\n    //           one frame, as the nodes and labels are drawn.\n    batchEdgesDrawing: false,\n    // {boolean} Indicates if the edges must be hidden during dragging and\n    //           animations.\n    hideEdgesOnMove: false,\n    // {numbers} The different batch sizes, when elements are displayed in\n    //           several frames.\n    canvasEdgesBatchSize: 500,\n    webglEdgesBatchSize: 1000,\n\n\n\n\n    /**\n     * RESCALE SETTINGS:\n     * *****************\n     */\n    // {string} Indicates of to scale the graph relatively to its container.\n    //          Available values: \"inside\", \"outside\"\n    scalingMode: 'inside',\n    // {number} The margin to keep around the graph.\n    sideMargin: 0,\n    // {number} Determine the size of the smallest and the biggest node / edges\n    //          on the screen. This mapping makes easier to display the graph,\n    //          avoiding too big nodes that take half of the screen, or too\n    //          small ones that are not readable. If the two parameters are\n    //          equals, then the minimal display size will be 0. And if they\n    //          are both equal to 0, then there is no mapping, and the radius\n    //          of the nodes will be their size.\n    minEdgeSize: 0.5,\n    maxEdgeSize: 1,\n    minNodeSize: 1,\n    maxNodeSize: 8,\n\n\n\n\n    /**\n     * CAPTORS SETTINGS:\n     * *****************\n     */\n    // {boolean}\n    touchEnabled: true,\n    // {boolean}\n    mouseEnabled: true,\n    // {boolean}\n    mouseWheelEnabled: true,\n    // {boolean}\n    doubleClickEnabled: true,\n    // {boolean} Defines whether the custom events such as \"clickNode\" can be\n    //           used.\n    eventsEnabled: true,\n    // {number} Defines by how much multiplicating the zooming level when the\n    //          user zooms with the mouse-wheel.\n    zoomingRatio: 1.7,\n    // {number} Defines by how much multiplicating the zooming level when the\n    //          user zooms by double clicking.\n    doubleClickZoomingRatio: 2.2,\n    // {number} The minimum zooming level.\n    zoomMin: 0.0625,\n    // {number} The maximum zooming level.\n    zoomMax: 2,\n    // {number} The duration of animations following a mouse scrolling.\n    mouseZoomDuration: 200,\n    // {number} The duration of animations following a mouse double click.\n    doubleClickZoomDuration: 200,\n    // {number} The duration of animations following a mouse dropping.\n    mouseInertiaDuration: 200,\n    // {number} The inertia power (mouse captor).\n    mouseInertiaRatio: 3,\n    // {number} The duration of animations following a touch dropping.\n    touchInertiaDuration: 200,\n    // {number} The inertia power (touch captor).\n    touchInertiaRatio: 3,\n    // {number} The maximum time between two clicks to make it a double click.\n    doubleClickTimeout: 300,\n    // {number} The maximum time between two taps to make it a double tap.\n    doubleTapTimeout: 300,\n    // {number} The maximum time of dragging to trigger intertia.\n    dragTimeout: 200,\n\n\n\n\n    /**\n     * GLOBAL SETTINGS:\n     * ****************\n     */\n    // {boolean} Determines whether the instance has to refresh itself\n    //           automatically when a \"resize\" event is dispatched from the\n    //           window object.\n    autoResize: true,\n    // {boolean} Determines whether the \"rescale\" middleware has to be called\n    //           automatically for each camera on refresh.\n    autoRescale: true,\n    // {boolean} If set to false, the camera method \"goTo\" will basically do\n    //           nothing.\n    enableCamera: true,\n    // {boolean} If set to false, the nodes cannot be hovered.\n    enableHovering: true,\n    // {boolean} If set to true, the edges can be hovered.\n    enableEdgeHovering: false,\n    // {number} The size of the area around the edges to activate hovering.\n    edgeHoverPrecision: 5,\n    // {boolean} If set to true, the rescale middleware will ignore node sizes\n    //           to determine the graphs boundings.\n    rescaleIgnoreSize: false,\n    // {boolean} Determines if the core has to try to catch errors on\n    //           rendering.\n    skipErrors: false,\n\n\n\n\n    /**\n     * CAMERA SETTINGS:\n     * ****************\n     */\n    // {number} The power degrees applied to the nodes/edges size relatively to\n    //          the zooming level. Basically:\n    //           > onScreenR = Math.pow(zoom, nodesPowRatio) * R\n    //           > onScreenT = Math.pow(zoom, edgesPowRatio) * T\n    nodesPowRatio: 0.5,\n    edgesPowRatio: 0.5,\n\n\n\n\n    /**\n     * ANIMATIONS SETTINGS:\n     * ********************\n     */\n    // {number} The default animation time.\n    animationsTime: 200\n  };\n\n  // Export the previously designed settings:\n  sigma.settings = sigma.utils.extend(sigma.settings || {}, settings);\n}).call(this);\n\n;(function() {\n  'use strict';\n\n  /**\n   * Dispatcher constructor.\n   *\n   * @return {dispatcher} The new dispatcher instance.\n   */\n  var dispatcher = function() {\n    Object.defineProperty(this, '_handlers', {\n      value: {}\n    });\n  };\n\n\n\n\n  /**\n   * Will execute the handler everytime that the indicated event (or the\n   * indicated events) will be triggered.\n   *\n   * @param  {string}           events  The name of the event (or the events\n   *                                    separated by spaces).\n   * @param  {function(Object)} handler The handler to bind.\n   * @return {dispatcher}               Returns the instance itself.\n   */\n  dispatcher.prototype.bind = function(events, handler) {\n    var i,\n        l,\n        event,\n        eArray;\n\n    if (\n      arguments.length === 1 &&\n      typeof arguments[0] === 'object'\n    )\n      for (events in arguments[0])\n        this.bind(events, arguments[0][events]);\n    else if (\n      arguments.length === 2 &&\n      typeof arguments[1] === 'function'\n    ) {\n      eArray = typeof events === 'string' ? events.split(' ') : events;\n\n      for (i = 0, l = eArray.length; i !== l; i += 1) {\n        event = eArray[i];\n\n        // Check that event is not '':\n        if (!event)\n          continue;\n\n        if (!this._handlers[event])\n          this._handlers[event] = [];\n\n        // Using an object instead of directly the handler will make possible\n        // later to add flags\n        this._handlers[event].push({\n          handler: handler\n        });\n      }\n    } else\n      throw 'bind: Wrong arguments.';\n\n    return this;\n  };\n\n  /**\n   * Removes the handler from a specified event (or specified events).\n   *\n   * @param  {?string}           events  The name of the event (or the events\n   *                                     separated by spaces). If undefined,\n   *                                     then all handlers are removed.\n   * @param  {?function(object)} handler The handler to unbind. If undefined,\n   *                                     each handler bound to the event or the\n   *                                     events will be removed.\n   * @return {dispatcher}                Returns the instance itself.\n   */\n  dispatcher.prototype.unbind = function(events, handler) {\n    var i,\n        n,\n        j,\n        m,\n        k,\n        a,\n        event,\n        eArray = typeof events === 'string' ? events.split(' ') : events;\n\n    if (!arguments.length) {\n      for (k in this._handlers)\n        delete this._handlers[k];\n      return this;\n    }\n\n    if (handler) {\n      for (i = 0, n = eArray.length; i !== n; i += 1) {\n        event = eArray[i];\n        if (this._handlers[event]) {\n          a = [];\n          for (j = 0, m = this._handlers[event].length; j !== m; j += 1)\n            if (this._handlers[event][j].handler !== handler)\n              a.push(this._handlers[event][j]);\n\n          this._handlers[event] = a;\n        }\n\n        if (this._handlers[event] && this._handlers[event].length === 0)\n          delete this._handlers[event];\n      }\n    } else\n      for (i = 0, n = eArray.length; i !== n; i += 1)\n        delete this._handlers[eArray[i]];\n\n    return this;\n  };\n\n  /**\n   * Executes each handler bound to the event\n   *\n   * @param  {string}     events The name of the event (or the events separated\n   *                             by spaces).\n   * @param  {?object}    data   The content of the event (optional).\n   * @return {dispatcher}        Returns the instance itself.\n   */\n  dispatcher.prototype.dispatchEvent = function(events, data) {\n    var i,\n        n,\n        j,\n        m,\n        a,\n        event,\n        eventName,\n        self = this,\n        eArray = typeof events === 'string' ? events.split(' ') : events;\n\n    data = data === undefined ? {} : data;\n\n    for (i = 0, n = eArray.length; i !== n; i += 1) {\n      eventName = eArray[i];\n\n      if (this._handlers[eventName]) {\n        event = self.getEvent(eventName, data);\n        a = [];\n\n        for (j = 0, m = this._handlers[eventName].length; j !== m; j += 1) {\n          this._handlers[eventName][j].handler(event);\n          if (!this._handlers[eventName][j].one)\n            a.push(this._handlers[eventName][j]);\n        }\n\n        this._handlers[eventName] = a;\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Return an event object.\n   *\n   * @param  {string}  events The name of the event.\n   * @param  {?object} data   The content of the event (optional).\n   * @return {object}         Returns the instance itself.\n   */\n  dispatcher.prototype.getEvent = function(event, data) {\n    return {\n      type: event,\n      data: data || {},\n      target: this\n    };\n  };\n\n  /**\n   * A useful function to deal with inheritance. It will make the target\n   * inherit the prototype of the class dispatcher as well as its constructor.\n   *\n   * @param {object} target The target.\n   */\n  dispatcher.extend = function(target, args) {\n    var k;\n\n    for (k in dispatcher.prototype)\n      if (dispatcher.prototype.hasOwnProperty(k))\n        target[k] = dispatcher.prototype[k];\n\n    dispatcher.apply(target, args);\n  };\n\n\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof this.sigma !== 'undefined') {\n    this.sigma.classes = this.sigma.classes || {};\n    this.sigma.classes.dispatcher = dispatcher;\n  } else if (true) {\n    if ( true && module.exports)\n      exports = module.exports = dispatcher;\n    exports.dispatcher = dispatcher;\n  } else\n    {}\n}).call(this);\n\n;(function() {\n  'use strict';\n\n  /**\n   * This utils aims to facilitate the manipulation of each instance setting.\n   * Using a function instead of an object brings two main advantages: First,\n   * it will be easier in the future to catch settings updates through a\n   * function than an object. Second, giving it a full object will \"merge\" it\n   * to the settings object properly, keeping us to have to always add a loop.\n   *\n   * @return {configurable} The \"settings\" function.\n   */\n  var configurable = function() {\n    var i,\n        l,\n        data = {},\n        datas = Array.prototype.slice.call(arguments, 0);\n\n    /**\n     * The method to use to set or get any property of this instance.\n     *\n     * @param  {string|object}    a1 If it is a string and if a2 is undefined,\n     *                               then it will return the corresponding\n     *                               property. If it is a string and if a2 is\n     *                               set, then it will set a2 as the property\n     *                               corresponding to a1, and return this. If\n     *                               it is an object, then each pair string +\n     *                               object(or any other type) will be set as a\n     *                               property.\n     * @param  {*?}               a2 The new property corresponding to a1 if a1\n     *                               is a string.\n     * @return {*|configurable}      Returns itself or the corresponding\n     *                               property.\n     *\n     * Polymorphism:\n     * *************\n     * Here are some basic use examples:\n     *\n     *  > settings = new configurable();\n     *  > settings('mySetting', 42);\n     *  > settings('mySetting'); // Logs: 42\n     *  > settings('mySetting', 123);\n     *  > settings('mySetting'); // Logs: 123\n     *  > settings({mySetting: 456});\n     *  > settings('mySetting'); // Logs: 456\n     *\n     * Also, it is possible to use the function as a fallback:\n     *  > settings({mySetting: 'abc'}, 'mySetting');  // Logs: 'abc'\n     *  > settings({hisSetting: 'abc'}, 'mySetting'); // Logs: 456\n     */\n    var settings = function(a1, a2) {\n      var o,\n          i,\n          l,\n          k;\n\n      if (arguments.length === 1 && typeof a1 === 'string') {\n        if (data[a1] !== undefined)\n          return data[a1];\n        for (i = 0, l = datas.length; i < l; i++)\n          if (datas[i][a1] !== undefined)\n            return datas[i][a1];\n        return undefined;\n      } else if (typeof a1 === 'object' && typeof a2 === 'string') {\n        return (a1 || {})[a2] !== undefined ? a1[a2] : settings(a2);\n      } else {\n        o = (typeof a1 === 'object' && a2 === undefined) ? a1 : {};\n\n        if (typeof a1 === 'string')\n          o[a1] = a2;\n\n        for (i = 0, k = Object.keys(o), l = k.length; i < l; i++)\n          data[k[i]] = o[k[i]];\n\n        return this;\n      }\n    };\n\n    /**\n     * This method returns a new configurable function, with new objects\n     *\n     * @param  {object*}  Any number of objects to search in.\n     * @return {function} Returns the function. Check its documentation to know\n     *                    more about how it works.\n     */\n    settings.embedObjects = function() {\n      var args = datas.concat(\n        data\n      ).concat(\n        Array.prototype.splice.call(arguments, 0)\n      );\n\n      return configurable.apply({}, args);\n    };\n\n    // Initialize\n    for (i = 0, l = arguments.length; i < l; i++)\n      settings(arguments[i]);\n\n    return settings;\n  };\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof this.sigma !== 'undefined') {\n    this.sigma.classes = this.sigma.classes || {};\n    this.sigma.classes.configurable = configurable;\n  } else if (true) {\n    if ( true && module.exports)\n      exports = module.exports = configurable;\n    exports.configurable = configurable;\n  } else\n    {}\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  var _methods = Object.create(null),\n      _indexes = Object.create(null),\n      _initBindings = Object.create(null),\n      _methodBindings = Object.create(null),\n      _methodBeforeBindings = Object.create(null),\n      _defaultSettings = {\n        immutable: true,\n        clone: true\n      },\n      _defaultSettingsFunction = function(key) {\n        return _defaultSettings[key];\n      };\n\n  /**\n   * The graph constructor. It initializes the data and the indexes, and binds\n   * the custom indexes and methods to its own scope.\n   *\n   * Recognized parameters:\n   * **********************\n   * Here is the exhaustive list of every accepted parameters in the settings\n   * object:\n   *\n   *   {boolean} clone     Indicates if the data have to be cloned in methods\n   *                       to add nodes or edges.\n   *   {boolean} immutable Indicates if nodes \"id\" values and edges \"id\",\n   *                       \"source\" and \"target\" values must be set as\n   *                       immutable.\n   *\n   * @param  {?configurable} settings Eventually a settings function.\n   * @return {graph}                  The new graph instance.\n   */\n  var graph = function(settings) {\n    var k,\n        fn,\n        data;\n\n    /**\n     * DATA:\n     * *****\n     * Every data that is callable from graph methods are stored in this \"data\"\n     * object. This object will be served as context for all these methods,\n     * and it is possible to add other type of data in it.\n     */\n    data = {\n      /**\n       * SETTINGS FUNCTION:\n       * ******************\n       */\n      settings: settings || _defaultSettingsFunction,\n\n      /**\n       * MAIN DATA:\n       * **********\n       */\n      nodesArray: [],\n      edgesArray: [],\n\n      /**\n       * GLOBAL INDEXES:\n       * ***************\n       * These indexes just index data by ids.\n       */\n      nodesIndex: Object.create(null),\n      edgesIndex: Object.create(null),\n\n      /**\n       * LOCAL INDEXES:\n       * **************\n       * These indexes refer from node to nodes. Each key is an id, and each\n       * value is the array of the ids of related nodes.\n       */\n      inNeighborsIndex: Object.create(null),\n      outNeighborsIndex: Object.create(null),\n      allNeighborsIndex: Object.create(null),\n\n      inNeighborsCount: Object.create(null),\n      outNeighborsCount: Object.create(null),\n      allNeighborsCount: Object.create(null)\n    };\n\n    // Execute bindings:\n    for (k in _initBindings)\n      _initBindings[k].call(data);\n\n    // Add methods to both the scope and the data objects:\n    for (k in _methods) {\n      fn = __bindGraphMethod(k, data, _methods[k]);\n      this[k] = fn;\n      data[k] = fn;\n    }\n  };\n\n\n\n\n  /**\n   * A custom tool to bind methods such that function that are bound to it will\n   * be executed anytime the method is called.\n   *\n   * @param  {string}   methodName The name of the method to bind.\n   * @param  {object}   scope      The scope where the method must be executed.\n   * @param  {function} fn         The method itself.\n   * @return {function}            The new method.\n   */\n  function __bindGraphMethod(methodName, scope, fn) {\n    var result = function() {\n      var k,\n          res;\n\n      // Execute \"before\" bound functions:\n      for (k in _methodBeforeBindings[methodName])\n        _methodBeforeBindings[methodName][k].apply(scope, arguments);\n\n      // Apply the method:\n      res = fn.apply(scope, arguments);\n\n      // Execute bound functions:\n      for (k in _methodBindings[methodName])\n        _methodBindings[methodName][k].apply(scope, arguments);\n\n      // Return res:\n      return res;\n    };\n\n    return result;\n  }\n\n  /**\n   * This custom tool function removes every pair key/value from an hash. The\n   * goal is to avoid creating a new object while some other references are\n   * still hanging in some scopes...\n   *\n   * @param  {object} obj The object to empty.\n   * @return {object}     The empty object.\n   */\n  function __emptyObject(obj) {\n    var k;\n\n    for (k in obj)\n      if (!('hasOwnProperty' in obj) || obj.hasOwnProperty(k))\n        delete obj[k];\n\n    return obj;\n  }\n\n\n\n\n  /**\n   * This global method adds a method that will be bound to the futurly created\n   * graph instances.\n   *\n   * Since these methods will be bound to their scope when the instances are\n   * created, it does not use the prototype. Because of that, methods have to\n   * be added before instances are created to make them available.\n   *\n   * Here is an example:\n   *\n   *  > graph.addMethod('getNodesCount', function() {\n   *  >   return this.nodesArray.length;\n   *  > });\n   *  >\n   *  > var myGraph = new graph();\n   *  > console.log(myGraph.getNodesCount()); // outputs 0\n   *\n   * @param  {string}   methodName The name of the method.\n   * @param  {function} fn         The method itself.\n   * @return {object}              The global graph constructor.\n   */\n  graph.addMethod = function(methodName, fn) {\n    if (\n      typeof methodName !== 'string' ||\n      typeof fn !== 'function' ||\n      arguments.length !== 2\n    )\n      throw 'addMethod: Wrong arguments.';\n\n    if (_methods[methodName] || graph[methodName])\n      throw 'The method \"' + methodName + '\" already exists.';\n\n    _methods[methodName] = fn;\n    _methodBindings[methodName] = Object.create(null);\n    _methodBeforeBindings[methodName] = Object.create(null);\n\n    return this;\n  };\n\n  /**\n   * This global method returns true if the method has already been added, and\n   * false else.\n   *\n   * Here are some examples:\n   *\n   *  > graph.hasMethod('addNode'); // returns true\n   *  > graph.hasMethod('hasMethod'); // returns true\n   *  > graph.hasMethod('unexistingMethod'); // returns false\n   *\n   * @param  {string}  methodName The name of the method.\n   * @return {boolean}            The result.\n   */\n  graph.hasMethod = function(methodName) {\n    return !!(_methods[methodName] || graph[methodName]);\n  };\n\n  /**\n   * This global methods attaches a function to a method. Anytime the specified\n   * method is called, the attached function is called right after, with the\n   * same arguments and in the same scope. The attached function is called\n   * right before if the last argument is true, unless the method is the graph\n   * constructor.\n   *\n   * To attach a function to the graph constructor, use 'constructor' as the\n   * method name (first argument).\n   *\n   * The main idea is to have a clean way to keep custom indexes up to date,\n   * for instance:\n   *\n   *  > var timesAddNodeCalled = 0;\n   *  > graph.attach('addNode', 'timesAddNodeCalledInc', function() {\n   *  >   timesAddNodeCalled++;\n   *  > });\n   *  >\n   *  > var myGraph = new graph();\n   *  > console.log(timesAddNodeCalled); // outputs 0\n   *  >\n   *  > myGraph.addNode({ id: '1' }).addNode({ id: '2' });\n   *  > console.log(timesAddNodeCalled); // outputs 2\n   *\n   * The idea for calling a function before is to provide pre-processors, for\n   * instance:\n   *\n   *  > var colorPalette = { Person: '#C3CBE1', Place: '#9BDEBD' };\n   *  > graph.attach('addNode', 'applyNodeColorPalette', function(n) {\n   *  >   n.color = colorPalette[n.category];\n   *  > }, true);\n   *  >\n   *  > var myGraph = new graph();\n   *  > myGraph.addNode({ id: 'n0', category: 'Person' });\n   *  > console.log(myGraph.nodes('n0').color); // outputs '#C3CBE1'\n   *\n   * @param  {string}   methodName The name of the related method or\n   *                               \"constructor\".\n   * @param  {string}   key        The key to identify the function to attach.\n   * @param  {function} fn         The function to bind.\n   * @param  {boolean}  before     If true the function is called right before.\n   * @return {object}              The global graph constructor.\n   */\n  graph.attach = function(methodName, key, fn, before) {\n    if (\n      typeof methodName !== 'string' ||\n      typeof key !== 'string' ||\n      typeof fn !== 'function' ||\n      arguments.length < 3 ||\n      arguments.length > 4\n    )\n      throw 'attach: Wrong arguments.';\n\n    var bindings;\n\n    if (methodName === 'constructor')\n      bindings = _initBindings;\n    else {\n      if (before) {\n        if (!_methodBeforeBindings[methodName])\n        throw 'The method \"' + methodName + '\" does not exist.';\n\n        bindings = _methodBeforeBindings[methodName];\n      }\n      else {\n        if (!_methodBindings[methodName])\n          throw 'The method \"' + methodName + '\" does not exist.';\n\n        bindings = _methodBindings[methodName];\n      }\n    }\n\n    if (bindings[key])\n      throw 'A function \"' + key + '\" is already attached ' +\n            'to the method \"' + methodName + '\".';\n\n    bindings[key] = fn;\n\n    return this;\n  };\n\n  /**\n   * Alias of attach(methodName, key, fn, true).\n   */\n  graph.attachBefore = function(methodName, key, fn) {\n    return this.attach(methodName, key, fn, true);\n  };\n\n  /**\n   * This methods is just an helper to deal with custom indexes. It takes as\n   * arguments the name of the index and an object containing all the different\n   * functions to bind to the methods.\n   *\n   * Here is a basic example, that creates an index to keep the number of nodes\n   * in the current graph. It also adds a method to provide a getter on that\n   * new index:\n   *\n   *  > sigma.classes.graph.addIndex('nodesCount', {\n   *  >   constructor: function() {\n   *  >     this.nodesCount = 0;\n   *  >   },\n   *  >   addNode: function() {\n   *  >     this.nodesCount++;\n   *  >   },\n   *  >   dropNode: function() {\n   *  >     this.nodesCount--;\n   *  >   }\n   *  > });\n   *  >\n   *  > sigma.classes.graph.addMethod('getNodesCount', function() {\n   *  >   return this.nodesCount;\n   *  > });\n   *  >\n   *  > var myGraph = new sigma.classes.graph();\n   *  > console.log(myGraph.getNodesCount()); // outputs 0\n   *  >\n   *  > myGraph.addNode({ id: '1' }).addNode({ id: '2' });\n   *  > console.log(myGraph.getNodesCount()); // outputs 2\n   *\n   * @param  {string} name     The name of the index.\n   * @param  {object} bindings The object containing the functions to bind.\n   * @return {object}          The global graph constructor.\n   */\n  graph.addIndex = function(name, bindings) {\n    if (\n      typeof name !== 'string' ||\n      Object(bindings) !== bindings ||\n      arguments.length !== 2\n    )\n      throw 'addIndex: Wrong arguments.';\n\n    if (_indexes[name])\n      throw 'The index \"' + name + '\" already exists.';\n\n    var k;\n\n    // Store the bindings:\n    _indexes[name] = bindings;\n\n    // Attach the bindings:\n    for (k in bindings)\n      if (typeof bindings[k] !== 'function')\n        throw 'The bindings must be functions.';\n      else\n        graph.attach(k, name, bindings[k]);\n\n    return this;\n  };\n\n\n\n\n  /**\n   * This method adds a node to the graph. The node must be an object, with a\n   * string under the key \"id\". Except for this, it is possible to add any\n   * other attribute, that will be preserved all along the manipulations.\n   *\n   * If the graph option \"clone\" has a truthy value, the node will be cloned\n   * when added to the graph. Also, if the graph option \"immutable\" has a\n   * truthy value, its id will be defined as immutable.\n   *\n   * @param  {object} node The node to add.\n   * @return {object}      The graph instance.\n   */\n  graph.addMethod('addNode', function(node) {\n    // Check that the node is an object and has an id:\n    if (Object(node) !== node || arguments.length !== 1)\n      throw 'addNode: Wrong arguments.';\n\n    if (typeof node.id !== 'string' && typeof node.id !== 'number')\n      throw 'The node must have a string or number id.';\n\n    if (this.nodesIndex[node.id])\n      throw 'The node \"' + node.id + '\" already exists.';\n\n    var k,\n        id = node.id,\n        validNode = Object.create(null);\n\n    // Check the \"clone\" option:\n    if (this.settings('clone')) {\n      for (k in node)\n        if (k !== 'id')\n          validNode[k] = node[k];\n    } else\n      validNode = node;\n\n    // Check the \"immutable\" option:\n    if (this.settings('immutable'))\n      Object.defineProperty(validNode, 'id', {\n        value: id,\n        enumerable: true\n      });\n    else\n      validNode.id = id;\n\n    // Add empty containers for edges indexes:\n    this.inNeighborsIndex[id] = Object.create(null);\n    this.outNeighborsIndex[id] = Object.create(null);\n    this.allNeighborsIndex[id] = Object.create(null);\n\n    this.inNeighborsCount[id] = 0;\n    this.outNeighborsCount[id] = 0;\n    this.allNeighborsCount[id] = 0;\n\n    // Add the node to indexes:\n    this.nodesArray.push(validNode);\n    this.nodesIndex[validNode.id] = validNode;\n\n    // Return the current instance:\n    return this;\n  });\n\n  /**\n   * This method adds an edge to the graph. The edge must be an object, with a\n   * string under the key \"id\", and strings under the keys \"source\" and\n   * \"target\" that design existing nodes. Except for this, it is possible to\n   * add any other attribute, that will be preserved all along the\n   * manipulations.\n   *\n   * If the graph option \"clone\" has a truthy value, the edge will be cloned\n   * when added to the graph. Also, if the graph option \"immutable\" has a\n   * truthy value, its id, source and target will be defined as immutable.\n   *\n   * @param  {object} edge The edge to add.\n   * @return {object}      The graph instance.\n   */\n  graph.addMethod('addEdge', function(edge) {\n    // Check that the edge is an object and has an id:\n    if (Object(edge) !== edge || arguments.length !== 1)\n      throw 'addEdge: Wrong arguments.';\n\n    if (typeof edge.id !== 'string' && typeof edge.id !== 'number')\n      throw 'The edge must have a string or number id.';\n\n    if ((typeof edge.source !== 'string' && typeof edge.source !== 'number') ||\n        !this.nodesIndex[edge.source])\n      throw 'The edge source must have an existing node id.';\n\n    if ((typeof edge.target !== 'string' && typeof edge.target !== 'number') ||\n        !this.nodesIndex[edge.target])\n      throw 'The edge target must have an existing node id.';\n\n    if (this.edgesIndex[edge.id])\n      throw 'The edge \"' + edge.id + '\" already exists.';\n\n    var k,\n        validEdge = Object.create(null);\n\n    // Check the \"clone\" option:\n    if (this.settings('clone')) {\n      for (k in edge)\n        if (k !== 'id' && k !== 'source' && k !== 'target')\n          validEdge[k] = edge[k];\n    } else\n      validEdge = edge;\n\n    // Check the \"immutable\" option:\n    if (this.settings('immutable')) {\n      Object.defineProperty(validEdge, 'id', {\n        value: edge.id,\n        enumerable: true\n      });\n\n      Object.defineProperty(validEdge, 'source', {\n        value: edge.source,\n        enumerable: true\n      });\n\n      Object.defineProperty(validEdge, 'target', {\n        value: edge.target,\n        enumerable: true\n      });\n    } else {\n      validEdge.id = edge.id;\n      validEdge.source = edge.source;\n      validEdge.target = edge.target;\n    }\n\n    // Add the edge to indexes:\n    this.edgesArray.push(validEdge);\n    this.edgesIndex[validEdge.id] = validEdge;\n\n    if (!this.inNeighborsIndex[validEdge.target][validEdge.source])\n      this.inNeighborsIndex[validEdge.target][validEdge.source] =\n        Object.create(null);\n    this.inNeighborsIndex[validEdge.target][validEdge.source][validEdge.id] =\n      validEdge;\n\n    if (!this.outNeighborsIndex[validEdge.source][validEdge.target])\n      this.outNeighborsIndex[validEdge.source][validEdge.target] =\n        Object.create(null);\n    this.outNeighborsIndex[validEdge.source][validEdge.target][validEdge.id] =\n      validEdge;\n\n    if (!this.allNeighborsIndex[validEdge.source][validEdge.target])\n      this.allNeighborsIndex[validEdge.source][validEdge.target] =\n        Object.create(null);\n    this.allNeighborsIndex[validEdge.source][validEdge.target][validEdge.id] =\n      validEdge;\n\n    if (validEdge.target !== validEdge.source) {\n      if (!this.allNeighborsIndex[validEdge.target][validEdge.source])\n        this.allNeighborsIndex[validEdge.target][validEdge.source] =\n          Object.create(null);\n      this.allNeighborsIndex[validEdge.target][validEdge.source][validEdge.id] =\n        validEdge;\n    }\n\n    // Keep counts up to date:\n    this.inNeighborsCount[validEdge.target]++;\n    this.outNeighborsCount[validEdge.source]++;\n    this.allNeighborsCount[validEdge.target]++;\n    this.allNeighborsCount[validEdge.source]++;\n\n    return this;\n  });\n\n  /**\n   * This method drops a node from the graph. It also removes each edge that is\n   * bound to it, through the dropEdge method. An error is thrown if the node\n   * does not exist.\n   *\n   * @param  {string} id The node id.\n   * @return {object}    The graph instance.\n   */\n  graph.addMethod('dropNode', function(id) {\n    // Check that the arguments are valid:\n    if ((typeof id !== 'string' && typeof id !== 'number') ||\n        arguments.length !== 1)\n      throw 'dropNode: Wrong arguments.';\n\n    if (!this.nodesIndex[id])\n      throw 'The node \"' + id + '\" does not exist.';\n\n    var i, k, l;\n\n    // Remove the node from indexes:\n    delete this.nodesIndex[id];\n    for (i = 0, l = this.nodesArray.length; i < l; i++)\n      if (this.nodesArray[i].id === id) {\n        this.nodesArray.splice(i, 1);\n        break;\n      }\n\n    // Remove related edges:\n    for (i = this.edgesArray.length - 1; i >= 0; i--)\n      if (this.edgesArray[i].source === id || this.edgesArray[i].target === id)\n        this.dropEdge(this.edgesArray[i].id);\n\n    // Remove related edge indexes:\n    delete this.inNeighborsIndex[id];\n    delete this.outNeighborsIndex[id];\n    delete this.allNeighborsIndex[id];\n\n    delete this.inNeighborsCount[id];\n    delete this.outNeighborsCount[id];\n    delete this.allNeighborsCount[id];\n\n    for (k in this.nodesIndex) {\n      delete this.inNeighborsIndex[k][id];\n      delete this.outNeighborsIndex[k][id];\n      delete this.allNeighborsIndex[k][id];\n    }\n\n    return this;\n  });\n\n  /**\n   * This method drops an edge from the graph. An error is thrown if the edge\n   * does not exist.\n   *\n   * @param  {string} id The edge id.\n   * @return {object}    The graph instance.\n   */\n  graph.addMethod('dropEdge', function(id) {\n    // Check that the arguments are valid:\n    if ((typeof id !== 'string' && typeof id !== 'number') ||\n        arguments.length !== 1)\n      throw 'dropEdge: Wrong arguments.';\n\n    if (!this.edgesIndex[id])\n      throw 'The edge \"' + id + '\" does not exist.';\n\n    var i, l, edge;\n\n    // Remove the edge from indexes:\n    edge = this.edgesIndex[id];\n    delete this.edgesIndex[id];\n    for (i = 0, l = this.edgesArray.length; i < l; i++)\n      if (this.edgesArray[i].id === id) {\n        this.edgesArray.splice(i, 1);\n        break;\n      }\n\n    delete this.inNeighborsIndex[edge.target][edge.source][edge.id];\n    if (!Object.keys(this.inNeighborsIndex[edge.target][edge.source]).length)\n      delete this.inNeighborsIndex[edge.target][edge.source];\n\n    delete this.outNeighborsIndex[edge.source][edge.target][edge.id];\n    if (!Object.keys(this.outNeighborsIndex[edge.source][edge.target]).length)\n      delete this.outNeighborsIndex[edge.source][edge.target];\n\n    delete this.allNeighborsIndex[edge.source][edge.target][edge.id];\n    if (!Object.keys(this.allNeighborsIndex[edge.source][edge.target]).length)\n      delete this.allNeighborsIndex[edge.source][edge.target];\n\n    if (edge.target !== edge.source) {\n      delete this.allNeighborsIndex[edge.target][edge.source][edge.id];\n      if (!Object.keys(this.allNeighborsIndex[edge.target][edge.source]).length)\n        delete this.allNeighborsIndex[edge.target][edge.source];\n    }\n\n    this.inNeighborsCount[edge.target]--;\n    this.outNeighborsCount[edge.source]--;\n    this.allNeighborsCount[edge.source]--;\n    this.allNeighborsCount[edge.target]--;\n\n    return this;\n  });\n\n  /**\n   * This method destroys the current instance. It basically empties each index\n   * and methods attached to the graph.\n   */\n  graph.addMethod('kill', function() {\n    // Delete arrays:\n    this.nodesArray.length = 0;\n    this.edgesArray.length = 0;\n    delete this.nodesArray;\n    delete this.edgesArray;\n\n    // Delete indexes:\n    delete this.nodesIndex;\n    delete this.edgesIndex;\n    delete this.inNeighborsIndex;\n    delete this.outNeighborsIndex;\n    delete this.allNeighborsIndex;\n    delete this.inNeighborsCount;\n    delete this.outNeighborsCount;\n    delete this.allNeighborsCount;\n  });\n\n  /**\n   * This method empties the nodes and edges arrays, as well as the different\n   * indexes.\n   *\n   * @return {object} The graph instance.\n   */\n  graph.addMethod('clear', function() {\n    this.nodesArray.length = 0;\n    this.edgesArray.length = 0;\n\n    // Due to GC issues, I prefer not to create new object. These objects are\n    // only available from the methods and attached functions, but still, it is\n    // better to prevent ghost references to unrelevant data...\n    __emptyObject(this.nodesIndex);\n    __emptyObject(this.edgesIndex);\n    __emptyObject(this.nodesIndex);\n    __emptyObject(this.inNeighborsIndex);\n    __emptyObject(this.outNeighborsIndex);\n    __emptyObject(this.allNeighborsIndex);\n    __emptyObject(this.inNeighborsCount);\n    __emptyObject(this.outNeighborsCount);\n    __emptyObject(this.allNeighborsCount);\n\n    return this;\n  });\n\n  /**\n   * This method reads an object and adds the nodes and edges, through the\n   * proper methods \"addNode\" and \"addEdge\".\n   *\n   * Here is an example:\n   *\n   *  > var myGraph = new graph();\n   *  > myGraph.read({\n   *  >   nodes: [\n   *  >     { id: 'n0' },\n   *  >     { id: 'n1' }\n   *  >   ],\n   *  >   edges: [\n   *  >     {\n   *  >       id: 'e0',\n   *  >       source: 'n0',\n   *  >       target: 'n1'\n   *  >     }\n   *  >   ]\n   *  > });\n   *  >\n   *  > console.log(\n   *  >   myGraph.nodes().length,\n   *  >   myGraph.edges().length\n   *  > ); // outputs 2 1\n   *\n   * @param  {object} g The graph object.\n   * @return {object}   The graph instance.\n   */\n  graph.addMethod('read', function(g) {\n    var i,\n        a,\n        l;\n\n    a = g.nodes || [];\n    for (i = 0, l = a.length; i < l; i++)\n      this.addNode(a[i]);\n\n    a = g.edges || [];\n    for (i = 0, l = a.length; i < l; i++)\n      this.addEdge(a[i]);\n\n    return this;\n  });\n\n  /**\n   * This methods returns one or several nodes, depending on how it is called.\n   *\n   * To get the array of nodes, call \"nodes\" without argument. To get a\n   * specific node, call it with the id of the node. The get multiple node,\n   * call it with an array of ids, and it will return the array of nodes, in\n   * the same order.\n   *\n   * @param  {?(string|array)} v Eventually one id, an array of ids.\n   * @return {object|array}      The related node or array of nodes.\n   */\n  graph.addMethod('nodes', function(v) {\n    // Clone the array of nodes and return it:\n    if (!arguments.length)\n      return this.nodesArray.slice(0);\n\n    // Return the related node:\n    if (arguments.length === 1 &&\n        (typeof v === 'string' || typeof v === 'number'))\n      return this.nodesIndex[v];\n\n    // Return an array of the related node:\n    if (\n      arguments.length === 1 &&\n      Object.prototype.toString.call(v) === '[object Array]'\n    ) {\n      var i,\n          l,\n          a = [];\n\n      for (i = 0, l = v.length; i < l; i++)\n        if (typeof v[i] === 'string' || typeof v[i] === 'number')\n          a.push(this.nodesIndex[v[i]]);\n        else\n          throw 'nodes: Wrong arguments.';\n\n      return a;\n    }\n\n    throw 'nodes: Wrong arguments.';\n  });\n\n  /**\n   * This methods returns the degree of one or several nodes, depending on how\n   * it is called. It is also possible to get incoming or outcoming degrees\n   * instead by specifying 'in' or 'out' as a second argument.\n   *\n   * @param  {string|array} v     One id, an array of ids.\n   * @param  {?string}      which Which degree is required. Values are 'in',\n   *                              'out', and by default the normal degree.\n   * @return {number|array}       The related degree or array of degrees.\n   */\n  graph.addMethod('degree', function(v, which) {\n    // Check which degree is required:\n    which = {\n      'in': this.inNeighborsCount,\n      'out': this.outNeighborsCount\n    }[which || ''] || this.allNeighborsCount;\n\n    // Return the related node:\n    if (typeof v === 'string' || typeof v === 'number')\n      return which[v];\n\n    // Return an array of the related node:\n    if (Object.prototype.toString.call(v) === '[object Array]') {\n      var i,\n          l,\n          a = [];\n\n      for (i = 0, l = v.length; i < l; i++)\n        if (typeof v[i] === 'string' || typeof v[i] === 'number')\n          a.push(which[v[i]]);\n        else\n          throw 'degree: Wrong arguments.';\n\n      return a;\n    }\n\n    throw 'degree: Wrong arguments.';\n  });\n\n  /**\n   * This methods returns one or several edges, depending on how it is called.\n   *\n   * To get the array of edges, call \"edges\" without argument. To get a\n   * specific edge, call it with the id of the edge. The get multiple edge,\n   * call it with an array of ids, and it will return the array of edges, in\n   * the same order.\n   *\n   * @param  {?(string|array)} v Eventually one id, an array of ids.\n   * @return {object|array}      The related edge or array of edges.\n   */\n  graph.addMethod('edges', function(v) {\n    // Clone the array of edges and return it:\n    if (!arguments.length)\n      return this.edgesArray.slice(0);\n\n    // Return the related edge:\n    if (arguments.length === 1 &&\n        (typeof v === 'string' || typeof v === 'number'))\n      return this.edgesIndex[v];\n\n    // Return an array of the related edge:\n    if (\n      arguments.length === 1 &&\n      Object.prototype.toString.call(v) === '[object Array]'\n    ) {\n      var i,\n          l,\n          a = [];\n\n      for (i = 0, l = v.length; i < l; i++)\n        if (typeof v[i] === 'string' || typeof v[i] === 'number')\n          a.push(this.edgesIndex[v[i]]);\n        else\n          throw 'edges: Wrong arguments.';\n\n      return a;\n    }\n\n    throw 'edges: Wrong arguments.';\n  });\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof sigma !== 'undefined') {\n    sigma.classes = sigma.classes || Object.create(null);\n    sigma.classes.graph = graph;\n  } else if (true) {\n    if ( true && module.exports)\n      exports = module.exports = graph;\n    exports.graph = graph;\n  } else\n    {}\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  sigma.utils.pkg('sigma.classes');\n\n  /**\n   * The camera constructor. It just initializes its attributes and methods.\n   *\n   * @param  {string}       id       The id.\n   * @param  {sigma.classes.graph}  graph    The graph.\n   * @param  {configurable} settings The settings function.\n   * @param  {?object}      options  Eventually some overriding options.\n   * @return {camera}                Returns the fresh new camera instance.\n   */\n  sigma.classes.camera = function(id, graph, settings, options) {\n    sigma.classes.dispatcher.extend(this);\n\n    Object.defineProperty(this, 'graph', {\n      value: graph\n    });\n    Object.defineProperty(this, 'id', {\n      value: id\n    });\n    Object.defineProperty(this, 'readPrefix', {\n      value: 'read_cam' + id + ':'\n    });\n    Object.defineProperty(this, 'prefix', {\n      value: 'cam' + id + ':'\n    });\n\n    this.x = 0;\n    this.y = 0;\n    this.ratio = 1;\n    this.angle = 0;\n    this.isAnimated = false;\n    this.settings = (typeof options === 'object' && options) ?\n      settings.embedObject(options) :\n      settings;\n  };\n\n  /**\n   * Updates the camera position.\n   *\n   * @param  {object} coordinates The new coordinates object.\n   * @return {camera}             Returns the camera.\n   */\n  sigma.classes.camera.prototype.goTo = function(coordinates) {\n    if (!this.settings('enableCamera'))\n      return this;\n\n    var i,\n        l,\n        c = coordinates || {},\n        keys = ['x', 'y', 'ratio', 'angle'];\n\n    for (i = 0, l = keys.length; i < l; i++)\n      if (c[keys[i]] !== undefined) {\n        if (typeof c[keys[i]] === 'number' && !isNaN(c[keys[i]]))\n          this[keys[i]] = c[keys[i]];\n        else\n          throw 'Value for \"' + keys[i] + '\" is not a number.';\n      }\n\n    this.dispatchEvent('coordinatesUpdated');\n    return this;\n  };\n\n  /**\n   * This method takes a graph and computes for each node and edges its\n   * coordinates relatively to the center of the camera. Basically, it will\n   * compute the coordinates that will be used by the graphic renderers.\n   *\n   * Since it should be possible to use different cameras and different\n   * renderers, it is possible to specify a prefix to put before the new\n   * coordinates (to get something like \"node.camera1_x\")\n   *\n   * @param  {?string} read    The prefix of the coordinates to read.\n   * @param  {?string} write   The prefix of the coordinates to write.\n   * @param  {?object} options Eventually an object of options. Those can be:\n   *                           - A restricted nodes array.\n   *                           - A restricted edges array.\n   *                           - A width.\n   *                           - A height.\n   * @return {camera}        Returns the camera.\n   */\n  sigma.classes.camera.prototype.applyView = function(read, write, options) {\n    options = options || {};\n    write = write !== undefined ? write : this.prefix;\n    read = read !== undefined ? read : this.readPrefix;\n\n    var nodes = options.nodes || this.graph.nodes(),\n        edges = options.edges || this.graph.edges();\n\n    var i,\n        l,\n        node,\n        relCos = Math.cos(this.angle) / this.ratio,\n        relSin = Math.sin(this.angle) / this.ratio,\n        nodeRatio = Math.pow(this.ratio, this.settings('nodesPowRatio')),\n        edgeRatio = Math.pow(this.ratio, this.settings('edgesPowRatio')),\n        xOffset = (options.width || 0) / 2 - this.x * relCos - this.y * relSin,\n        yOffset = (options.height || 0) / 2 - this.y * relCos + this.x * relSin;\n\n    for (i = 0, l = nodes.length; i < l; i++) {\n      node = nodes[i];\n      node[write + 'x'] =\n        (node[read + 'x'] || 0) * relCos +\n        (node[read + 'y'] || 0) * relSin +\n        xOffset;\n      node[write + 'y'] =\n        (node[read + 'y'] || 0) * relCos -\n        (node[read + 'x'] || 0) * relSin +\n        yOffset;\n      node[write + 'size'] =\n        (node[read + 'size'] || 0) /\n        nodeRatio;\n    }\n\n    for (i = 0, l = edges.length; i < l; i++) {\n      edges[i][write + 'size'] =\n        (edges[i][read + 'size'] || 0) /\n        edgeRatio;\n    }\n\n    return this;\n  };\n\n  /**\n   * This function converts the coordinates of a point from the frame of the\n   * camera to the frame of the graph.\n   *\n   * @param  {number} x The X coordinate of the point in the frame of the\n   *                    camera.\n   * @param  {number} y The Y coordinate of the point in the frame of the\n   *                    camera.\n   * @return {object}   The point coordinates in the frame of the graph.\n   */\n  sigma.classes.camera.prototype.graphPosition = function(x, y, vector) {\n    var X = 0,\n        Y = 0,\n        cos = Math.cos(this.angle),\n        sin = Math.sin(this.angle);\n\n    // Revert the origin differential vector:\n    if (!vector) {\n      X = - (this.x * cos + this.y * sin) / this.ratio;\n      Y = - (this.y * cos - this.x * sin) / this.ratio;\n    }\n\n    return {\n      x: (x * cos + y * sin) / this.ratio + X,\n      y: (y * cos - x * sin) / this.ratio + Y\n    };\n  };\n\n  /**\n   * This function converts the coordinates of a point from the frame of the\n   * graph to the frame of the camera.\n   *\n   * @param  {number} x The X coordinate of the point in the frame of the\n   *                    graph.\n   * @param  {number} y The Y coordinate of the point in the frame of the\n   *                    graph.\n   * @return {object}   The point coordinates in the frame of the camera.\n   */\n  sigma.classes.camera.prototype.cameraPosition = function(x, y, vector) {\n    var X = 0,\n        Y = 0,\n        cos = Math.cos(this.angle),\n        sin = Math.sin(this.angle);\n\n    // Revert the origin differential vector:\n    if (!vector) {\n      X = - (this.x * cos + this.y * sin) / this.ratio;\n      Y = - (this.y * cos - this.x * sin) / this.ratio;\n    }\n\n    return {\n      x: ((x - X) * cos - (y - Y) * sin) * this.ratio,\n      y: ((y - Y) * cos + (x - X) * sin) * this.ratio\n    };\n  };\n\n  /**\n   * This method returns the transformation matrix of the camera. This is\n   * especially useful to apply the camera view directly in shaders, in case of\n   * WebGL rendering.\n   *\n   * @return {array} The transformation matrix.\n   */\n  sigma.classes.camera.prototype.getMatrix = function() {\n    var scale = sigma.utils.matrices.scale(1 / this.ratio),\n        rotation = sigma.utils.matrices.rotation(this.angle),\n        translation = sigma.utils.matrices.translation(-this.x, -this.y),\n        matrix = sigma.utils.matrices.multiply(\n          translation,\n          sigma.utils.matrices.multiply(\n            rotation,\n            scale\n          )\n        );\n\n    return matrix;\n  };\n\n  /**\n   * Taking a width and a height as parameters, this method returns the\n   * coordinates of the rectangle representing the camera on screen, in the\n   * graph's referentiel.\n   *\n   * To keep displaying labels of nodes going out of the screen, the method\n   * keeps a margin around the screen in the returned rectangle.\n   *\n   * @param  {number} width  The width of the screen.\n   * @param  {number} height The height of the screen.\n   * @return {object}        The rectangle as x1, y1, x2 and y2, representing\n   *                         two opposite points.\n   */\n  sigma.classes.camera.prototype.getRectangle = function(width, height) {\n    var widthVect = this.cameraPosition(width, 0, true),\n        heightVect = this.cameraPosition(0, height, true),\n        centerVect = this.cameraPosition(width / 2, height / 2, true),\n        marginX = this.cameraPosition(width / 4, 0, true).x,\n        marginY = this.cameraPosition(0, height / 4, true).y;\n\n    return {\n      x1: this.x - centerVect.x - marginX,\n      y1: this.y - centerVect.y - marginY,\n      x2: this.x - centerVect.x + marginX + widthVect.x,\n      y2: this.y - centerVect.y - marginY + widthVect.y,\n      height: Math.sqrt(\n        Math.pow(heightVect.x, 2) +\n        Math.pow(heightVect.y + 2 * marginY, 2)\n      )\n    };\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  /**\n   * Sigma Quadtree Module\n   * =====================\n   *\n   * Author: Guillaume Plique (Yomguithereal)\n   * Version: 0.2\n   */\n\n\n\n  /**\n   * Quad Geometric Operations\n   * -------------------------\n   *\n   * A useful batch of geometric operations used by the quadtree.\n   */\n\n  var _geom = {\n\n    /**\n     * Transforms a graph node with x, y and size into an\n     * axis-aligned square.\n     *\n     * @param  {object} A graph node with at least a point (x, y) and a size.\n     * @return {object} A square: two points (x1, y1), (x2, y2) and height.\n     */\n    pointToSquare: function(n) {\n      return {\n        x1: n.x - n.size,\n        y1: n.y - n.size,\n        x2: n.x + n.size,\n        y2: n.y - n.size,\n        height: n.size * 2\n      };\n    },\n\n    /**\n     * Checks whether a rectangle is axis-aligned.\n     *\n     * @param  {object}  A rectangle defined by two points\n     *                   (x1, y1) and (x2, y2).\n     * @return {boolean} True if the rectangle is axis-aligned.\n     */\n    isAxisAligned: function(r) {\n      return r.x1 === r.x2 || r.y1 === r.y2;\n    },\n\n    /**\n     * Compute top points of an axis-aligned rectangle. This is useful in\n     * cases when the rectangle has been rotated (left, right or bottom up) and\n     * later operations need to know the top points.\n     *\n     * @param  {object} An axis-aligned rectangle defined by two points\n     *                  (x1, y1), (x2, y2) and height.\n     * @return {object} A rectangle: two points (x1, y1), (x2, y2) and height.\n     */\n    axisAlignedTopPoints: function(r) {\n\n      // Basic\n      if (r.y1 === r.y2 && r.x1 < r.x2)\n        return r;\n\n      // Rotated to right\n      if (r.x1 === r.x2 && r.y2 > r.y1)\n        return {\n          x1: r.x1 - r.height, y1: r.y1,\n          x2: r.x1, y2: r.y1,\n          height: r.height\n        };\n\n      // Rotated to left\n      if (r.x1 === r.x2 && r.y2 < r.y1)\n        return {\n          x1: r.x1, y1: r.y2,\n          x2: r.x2 + r.height, y2: r.y2,\n          height: r.height\n        };\n\n      // Bottom's up\n      return {\n        x1: r.x2, y1: r.y1 - r.height,\n        x2: r.x1, y2: r.y1 - r.height,\n        height: r.height\n      };\n    },\n\n    /**\n     * Get coordinates of a rectangle's lower left corner from its top points.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @return {object} Coordinates of the corner (x, y).\n     */\n    lowerLeftCoor: function(r) {\n      var width = (\n        Math.sqrt(\n          Math.pow(r.x2 - r.x1, 2) +\n          Math.pow(r.y2 - r.y1, 2)\n        )\n      );\n\n      return {\n        x: r.x1 - (r.y2 - r.y1) * r.height / width,\n        y: r.y1 + (r.x2 - r.x1) * r.height / width\n      };\n    },\n\n    /**\n     * Get coordinates of a rectangle's lower right corner from its top points\n     * and its lower left corner.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @param  {object} A corner's coordinates (x, y).\n     * @return {object} Coordinates of the corner (x, y).\n     */\n    lowerRightCoor: function(r, llc) {\n      return {\n        x: llc.x - r.x1 + r.x2,\n        y: llc.y - r.y1 + r.y2\n      };\n    },\n\n    /**\n     * Get the coordinates of all the corners of a rectangle from its top point.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @return {array}  An array of the four corners' coordinates (x, y).\n     */\n    rectangleCorners: function(r) {\n      var llc = this.lowerLeftCoor(r),\n          lrc = this.lowerRightCoor(r, llc);\n\n      return [\n        {x: r.x1, y: r.y1},\n        {x: r.x2, y: r.y2},\n        {x: llc.x, y: llc.y},\n        {x: lrc.x, y: lrc.y}\n      ];\n    },\n\n    /**\n     * Split a square defined by its boundaries into four.\n     *\n     * @param  {object} Boundaries of the square (x, y, width, height).\n     * @return {array}  An array containing the four new squares, themselves\n     *                  defined by an array of their four corners (x, y).\n     */\n    splitSquare: function(b) {\n      return [\n        [\n          {x: b.x, y: b.y},\n          {x: b.x + b.width / 2, y: b.y},\n          {x: b.x, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2}\n        ],\n        [\n          {x: b.x + b.width / 2, y: b.y},\n          {x: b.x + b.width, y: b.y},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x + b.width, y: b.y + b.height / 2}\n        ],\n        [\n          {x: b.x, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x, y: b.y + b.height},\n          {x: b.x + b.width / 2, y: b.y + b.height}\n        ],\n        [\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x + b.width, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height},\n          {x: b.x + b.width, y: b.y + b.height}\n        ]\n      ];\n    },\n\n    /**\n     * Compute the four axis between corners of rectangle A and corners of\n     * rectangle B. This is needed later to check an eventual collision.\n     *\n     * @param  {array} An array of rectangle A's four corners (x, y).\n     * @param  {array} An array of rectangle B's four corners (x, y).\n     * @return {array} An array of four axis defined by their coordinates (x,y).\n     */\n    axis: function(c1, c2) {\n      return [\n        {x: c1[1].x - c1[0].x, y: c1[1].y - c1[0].y},\n        {x: c1[1].x - c1[3].x, y: c1[1].y - c1[3].y},\n        {x: c2[0].x - c2[2].x, y: c2[0].y - c2[2].y},\n        {x: c2[0].x - c2[1].x, y: c2[0].y - c2[1].y}\n      ];\n    },\n\n    /**\n     * Project a rectangle's corner on an axis.\n     *\n     * @param  {object} Coordinates of a corner (x, y).\n     * @param  {object} Coordinates of an axis (x, y).\n     * @return {object} The projection defined by coordinates (x, y).\n     */\n    projection: function(c, a) {\n      var l = (\n        (c.x * a.x + c.y * a.y) /\n        (Math.pow(a.x, 2) + Math.pow(a.y, 2))\n      );\n\n      return {\n        x: l * a.x,\n        y: l * a.y\n      };\n    },\n\n    /**\n     * Check whether two rectangles collide on one particular axis.\n     *\n     * @param  {object}   An axis' coordinates (x, y).\n     * @param  {array}    Rectangle A's corners.\n     * @param  {array}    Rectangle B's corners.\n     * @return {boolean}  True if the rectangles collide on the axis.\n     */\n    axisCollision: function(a, c1, c2) {\n      var sc1 = [],\n          sc2 = [];\n\n      for (var ci = 0; ci < 4; ci++) {\n        var p1 = this.projection(c1[ci], a),\n            p2 = this.projection(c2[ci], a);\n\n        sc1.push(p1.x * a.x + p1.y * a.y);\n        sc2.push(p2.x * a.x + p2.y * a.y);\n      }\n\n      var maxc1 = Math.max.apply(Math, sc1),\n          maxc2 = Math.max.apply(Math, sc2),\n          minc1 = Math.min.apply(Math, sc1),\n          minc2 = Math.min.apply(Math, sc2);\n\n      return (minc2 <= maxc1 && maxc2 >= minc1);\n    },\n\n    /**\n     * Check whether two rectangles collide on each one of their four axis. If\n     * all axis collide, then the two rectangles do collide on the plane.\n     *\n     * @param  {array}    Rectangle A's corners.\n     * @param  {array}    Rectangle B's corners.\n     * @return {boolean}  True if the rectangles collide.\n     */\n    collision: function(c1, c2) {\n      var axis = this.axis(c1, c2),\n          col = true;\n\n      for (var i = 0; i < 4; i++)\n        col = col && this.axisCollision(axis[i], c1, c2);\n\n      return col;\n    }\n  };\n\n\n  /**\n   * Quad Functions\n   * ------------\n   *\n   * The Quadtree functions themselves.\n   * For each of those functions, we consider that in a splitted quad, the\n   * index of each node is the following:\n   * 0: top left\n   * 1: top right\n   * 2: bottom left\n   * 3: bottom right\n   *\n   * Moreover, the hereafter quad's philosophy is to consider that if an element\n   * collides with more than one nodes, this element belongs to each of the\n   * nodes it collides with where other would let it lie on a higher node.\n   */\n\n  /**\n   * Get the index of the node containing the point in the quad\n   *\n   * @param  {object}  point      A point defined by coordinates (x, y).\n   * @param  {object}  quadBounds Boundaries of the quad (x, y, width, heigth).\n   * @return {integer}            The index of the node containing the point.\n   */\n  function _quadIndex(point, quadBounds) {\n    var xmp = quadBounds.x + quadBounds.width / 2,\n        ymp = quadBounds.y + quadBounds.height / 2,\n        top = (point.y < ymp),\n        left = (point.x < xmp);\n\n    if (top) {\n      if (left)\n        return 0;\n      else\n        return 1;\n    }\n    else {\n      if (left)\n        return 2;\n      else\n        return 3;\n    }\n  }\n\n  /**\n   * Get a list of indexes of nodes containing an axis-aligned rectangle\n   *\n   * @param  {object}  rectangle   A rectangle defined by two points (x1, y1),\n   *                               (x2, y2) and height.\n   * @param  {array}   quadCorners An array of the quad nodes' corners.\n   * @return {array}               An array of indexes containing one to\n   *                               four integers.\n   */\n  function _quadIndexes(rectangle, quadCorners) {\n    var indexes = [];\n\n    // Iterating through quads\n    for (var i = 0; i < 4; i++)\n      if ((rectangle.x2 >= quadCorners[i][0].x) &&\n          (rectangle.x1 <= quadCorners[i][1].x) &&\n          (rectangle.y1 + rectangle.height >= quadCorners[i][0].y) &&\n          (rectangle.y1 <= quadCorners[i][2].y))\n        indexes.push(i);\n\n    return indexes;\n  }\n\n  /**\n   * Get a list of indexes of nodes containing a non-axis-aligned rectangle\n   *\n   * @param  {array}  corners      An array containing each corner of the\n   *                               rectangle defined by its coordinates (x, y).\n   * @param  {array}  quadCorners  An array of the quad nodes' corners.\n   * @return {array}               An array of indexes containing one to\n   *                               four integers.\n   */\n  function _quadCollision(corners, quadCorners) {\n    var indexes = [];\n\n    // Iterating through quads\n    for (var i = 0; i < 4; i++)\n      if (_geom.collision(corners, quadCorners[i]))\n        indexes.push(i);\n\n    return indexes;\n  }\n\n  /**\n   * Subdivide a quad by creating a node at a precise index. The function does\n   * not generate all four nodes not to potentially create unused nodes.\n   *\n   * @param  {integer}  index The index of the node to create.\n   * @param  {object}   quad  The quad object to subdivide.\n   * @return {object}         A new quad representing the node created.\n   */\n  function _quadSubdivide(index, quad) {\n    var next = quad.level + 1,\n        subw = Math.round(quad.bounds.width / 2),\n        subh = Math.round(quad.bounds.height / 2),\n        qx = Math.round(quad.bounds.x),\n        qy = Math.round(quad.bounds.y),\n        x,\n        y;\n\n    switch (index) {\n      case 0:\n        x = qx;\n        y = qy;\n        break;\n      case 1:\n        x = qx + subw;\n        y = qy;\n        break;\n      case 2:\n        x = qx;\n        y = qy + subh;\n        break;\n      case 3:\n        x = qx + subw;\n        y = qy + subh;\n        break;\n    }\n\n    return _quadTree(\n      {x: x, y: y, width: subw, height: subh},\n      next,\n      quad.maxElements,\n      quad.maxLevel\n    );\n  }\n\n  /**\n   * Recursively insert an element into the quadtree. Only points\n   * with size, i.e. axis-aligned squares, may be inserted with this\n   * method.\n   *\n   * @param  {object}  el         The element to insert in the quadtree.\n   * @param  {object}  sizedPoint A sized point defined by two top points\n   *                              (x1, y1), (x2, y2) and height.\n   * @param  {object}  quad       The quad in which to insert the element.\n   * @return {undefined}          The function does not return anything.\n   */\n  function _quadInsert(el, sizedPoint, quad) {\n    if (quad.level < quad.maxLevel) {\n\n      // Searching appropriate quads\n      var indexes = _quadIndexes(sizedPoint, quad.corners);\n\n      // Iterating\n      for (var i = 0, l = indexes.length; i < l; i++) {\n\n        // Subdividing if necessary\n        if (quad.nodes[indexes[i]] === undefined)\n          quad.nodes[indexes[i]] = _quadSubdivide(indexes[i], quad);\n\n        // Recursion\n        _quadInsert(el, sizedPoint, quad.nodes[indexes[i]]);\n      }\n    }\n    else {\n\n      // Pushing the element in a leaf node\n      quad.elements.push(el);\n    }\n  }\n\n  /**\n   * Recursively retrieve every elements held by the node containing the\n   * searched point.\n   *\n   * @param  {object}  point The searched point (x, y).\n   * @param  {object}  quad  The searched quad.\n   * @return {array}         An array of elements contained in the relevant\n   *                         node.\n   */\n  function _quadRetrievePoint(point, quad) {\n    if (quad.level < quad.maxLevel) {\n      var index = _quadIndex(point, quad.bounds);\n\n      // If node does not exist we return an empty list\n      if (quad.nodes[index] !== undefined) {\n        return _quadRetrievePoint(point, quad.nodes[index]);\n      }\n      else {\n        return [];\n      }\n    }\n    else {\n      return quad.elements;\n    }\n  }\n\n  /**\n   * Recursively retrieve every elements contained within an rectangular area\n   * that may or may not be axis-aligned.\n   *\n   * @param  {object|array} rectData       The searched area defined either by\n   *                                       an array of four corners (x, y) in\n   *                                       the case of a non-axis-aligned\n   *                                       rectangle or an object with two top\n   *                                       points (x1, y1), (x2, y2) and height.\n   * @param  {object}       quad           The searched quad.\n   * @param  {function}     collisionFunc  The collision function used to search\n   *                                       for node indexes.\n   * @param  {array?}       els            The retrieved elements.\n   * @return {array}                       An array of elements contained in the\n   *                                       area.\n   */\n  function _quadRetrieveArea(rectData, quad, collisionFunc, els) {\n    els = els || {};\n\n    if (quad.level < quad.maxLevel) {\n      var indexes = collisionFunc(rectData, quad.corners);\n\n      for (var i = 0, l = indexes.length; i < l; i++)\n        if (quad.nodes[indexes[i]] !== undefined)\n          _quadRetrieveArea(\n            rectData,\n            quad.nodes[indexes[i]],\n            collisionFunc,\n            els\n          );\n    } else\n      for (var j = 0, m = quad.elements.length; j < m; j++)\n        if (els[quad.elements[j].id] === undefined)\n          els[quad.elements[j].id] = quad.elements[j];\n\n    return els;\n  }\n\n  /**\n   * Creates the quadtree object itself.\n   *\n   * @param  {object}   bounds       The boundaries of the quad defined by an\n   *                                 origin (x, y), width and heigth.\n   * @param  {integer}  level        The level of the quad in the tree.\n   * @param  {integer}  maxElements  The max number of element in a leaf node.\n   * @param  {integer}  maxLevel     The max recursion level of the tree.\n   * @return {object}                The quadtree object.\n   */\n  function _quadTree(bounds, level, maxElements, maxLevel) {\n    return {\n      level: level || 0,\n      bounds: bounds,\n      corners: _geom.splitSquare(bounds),\n      maxElements: maxElements || 20,\n      maxLevel: maxLevel || 4,\n      elements: [],\n      nodes: []\n    };\n  }\n\n\n  /**\n   * Sigma Quad Constructor\n   * ----------------------\n   *\n   * The quad API as exposed to sigma.\n   */\n\n  /**\n   * The quad core that will become the sigma interface with the quadtree.\n   *\n   * property {object} _tree  Property holding the quadtree object.\n   * property {object} _geom  Exposition of the _geom namespace for testing.\n   * property {object} _cache Cache for the area method.\n   */\n  var quad = function() {\n    this._geom = _geom;\n    this._tree = null;\n    this._cache = {\n      query: false,\n      result: false\n    };\n  };\n\n  /**\n   * Index a graph by inserting its nodes into the quadtree.\n   *\n   * @param  {array}  nodes   An array of nodes to index.\n   * @param  {object} params  An object of parameters with at least the quad\n   *                          bounds.\n   * @return {object}         The quadtree object.\n   *\n   * Parameters:\n   * ----------\n   * bounds:      {object}   boundaries of the quad defined by its origin (x, y)\n   *                         width and heigth.\n   * prefix:      {string?}  a prefix for node geometric attributes.\n   * maxElements: {integer?} the max number of elements in a leaf node.\n   * maxLevel:    {integer?} the max recursion level of the tree.\n   */\n  quad.prototype.index = function(nodes, params) {\n\n    // Enforcing presence of boundaries\n    if (!params.bounds)\n      throw 'sigma.classes.quad.index: bounds information not given.';\n\n    // Prefix\n    var prefix = params.prefix || '';\n\n    // Building the tree\n    this._tree = _quadTree(\n      params.bounds,\n      0,\n      params.maxElements,\n      params.maxLevel\n    );\n\n    // Inserting graph nodes into the tree\n    for (var i = 0, l = nodes.length; i < l; i++) {\n\n      // Inserting node\n      _quadInsert(\n        nodes[i],\n        _geom.pointToSquare({\n          x: nodes[i][prefix + 'x'],\n          y: nodes[i][prefix + 'y'],\n          size: nodes[i][prefix + 'size']\n        }),\n        this._tree\n      );\n    }\n\n    // Reset cache:\n    this._cache = {\n      query: false,\n      result: false\n    };\n\n    // remove?\n    return this._tree;\n  };\n\n  /**\n   * Retrieve every graph nodes held by the quadtree node containing the\n   * searched point.\n   *\n   * @param  {number} x of the point.\n   * @param  {number} y of the point.\n   * @return {array}  An array of nodes retrieved.\n   */\n  quad.prototype.point = function(x, y) {\n    return this._tree ?\n      _quadRetrievePoint({x: x, y: y}, this._tree) || [] :\n      [];\n  };\n\n  /**\n   * Retrieve every graph nodes within a rectangular area. The methods keep the\n   * last area queried in cache for optimization reason and will act differently\n   * for the same reason if the area is axis-aligned or not.\n   *\n   * @param  {object} A rectangle defined by two top points (x1, y1), (x2, y2)\n   *                  and height.\n   * @return {array}  An array of nodes retrieved.\n   */\n  quad.prototype.area = function(rect) {\n    var serialized = JSON.stringify(rect),\n        collisionFunc,\n        rectData;\n\n    // Returning cache?\n    if (this._cache.query === serialized)\n      return this._cache.result;\n\n    // Axis aligned ?\n    if (_geom.isAxisAligned(rect)) {\n      collisionFunc = _quadIndexes;\n      rectData = _geom.axisAlignedTopPoints(rect);\n    }\n    else {\n      collisionFunc = _quadCollision;\n      rectData = _geom.rectangleCorners(rect);\n    }\n\n    // Retrieving nodes\n    var nodes = this._tree ?\n      _quadRetrieveArea(\n        rectData,\n        this._tree,\n        collisionFunc\n      ) :\n      [];\n\n    // Object to array\n    var nodesArray = [];\n    for (var i in nodes)\n      nodesArray.push(nodes[i]);\n\n    // Caching\n    this._cache.query = serialized;\n    this._cache.result = nodesArray;\n\n    return nodesArray;\n  };\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof this.sigma !== 'undefined') {\n    this.sigma.classes = this.sigma.classes || {};\n    this.sigma.classes.quad = quad;\n  } else if (true) {\n    if ( true && module.exports)\n      exports = module.exports = quad;\n    exports.quad = quad;\n  } else\n    {}\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  /**\n   * Sigma Quadtree Module for edges\n   * ===============================\n   *\n   * Author: Sébastien Heymann,\n   *   from the quad of Guillaume Plique (Yomguithereal)\n   * Version: 0.2\n   */\n\n\n\n  /**\n   * Quad Geometric Operations\n   * -------------------------\n   *\n   * A useful batch of geometric operations used by the quadtree.\n   */\n\n  var _geom = {\n\n    /**\n     * Transforms a graph node with x, y and size into an\n     * axis-aligned square.\n     *\n     * @param  {object} A graph node with at least a point (x, y) and a size.\n     * @return {object} A square: two points (x1, y1), (x2, y2) and height.\n     */\n    pointToSquare: function(n) {\n      return {\n        x1: n.x - n.size,\n        y1: n.y - n.size,\n        x2: n.x + n.size,\n        y2: n.y - n.size,\n        height: n.size * 2\n      };\n    },\n\n    /**\n     * Transforms a graph edge with x1, y1, x2, y2 and size into an\n     * axis-aligned square.\n     *\n     * @param  {object} A graph edge with at least two points\n     *                  (x1, y1), (x2, y2) and a size.\n     * @return {object} A square: two points (x1, y1), (x2, y2) and height.\n     */\n    lineToSquare: function(e) {\n      if (e.y1 < e.y2) {\n        // (e.x1, e.y1) on top\n        if (e.x1 < e.x2) {\n          // (e.x1, e.y1) on left\n          return {\n            x1: e.x1 - e.size,\n            y1: e.y1 - e.size,\n            x2: e.x2 + e.size,\n            y2: e.y1 - e.size,\n            height: e.y2 - e.y1 + e.size * 2\n          };\n        }\n        // (e.x1, e.y1) on right\n        return {\n          x1: e.x2 - e.size,\n          y1: e.y1 - e.size,\n          x2: e.x1 + e.size,\n          y2: e.y1 - e.size,\n          height: e.y2 - e.y1 + e.size * 2\n        };\n      }\n\n      // (e.x2, e.y2) on top\n      if (e.x1 < e.x2) {\n        // (e.x1, e.y1) on left\n        return {\n          x1: e.x1 - e.size,\n          y1: e.y2 - e.size,\n          x2: e.x2 + e.size,\n          y2: e.y2 - e.size,\n          height: e.y1 - e.y2 + e.size * 2\n        };\n      }\n      // (e.x2, e.y2) on right\n      return {\n        x1: e.x2 - e.size,\n        y1: e.y2 - e.size,\n        x2: e.x1 + e.size,\n        y2: e.y2 - e.size,\n        height: e.y1 - e.y2 + e.size * 2\n      };\n    },\n\n    /**\n     * Transforms a graph edge of type 'curve' with x1, y1, x2, y2,\n     * control point and size into an axis-aligned square.\n     *\n     * @param  {object} e  A graph edge with at least two points\n     *                     (x1, y1), (x2, y2) and a size.\n     * @param  {object} cp A control point (x,y).\n     * @return {object}    A square: two points (x1, y1), (x2, y2) and height.\n     */\n    quadraticCurveToSquare: function(e, cp) {\n      var pt = sigma.utils.getPointOnQuadraticCurve(\n        0.5,\n        e.x1,\n        e.y1,\n        e.x2,\n        e.y2,\n        cp.x,\n        cp.y\n      );\n\n      // Bounding box of the two points and the point at the middle of the\n      // curve:\n      var minX = Math.min(e.x1, e.x2, pt.x),\n          maxX = Math.max(e.x1, e.x2, pt.x),\n          minY = Math.min(e.y1, e.y2, pt.y),\n          maxY = Math.max(e.y1, e.y2, pt.y);\n\n      return {\n        x1: minX - e.size,\n        y1: minY - e.size,\n        x2: maxX + e.size,\n        y2: minY - e.size,\n        height: maxY - minY + e.size * 2\n      };\n    },\n\n    /**\n     * Transforms a graph self loop into an axis-aligned square.\n     *\n     * @param  {object} n A graph node with a point (x, y) and a size.\n     * @return {object}   A square: two points (x1, y1), (x2, y2) and height.\n     */\n    selfLoopToSquare: function(n) {\n      // Fitting to the curve is too costly, we compute a larger bounding box\n      // using the control points:\n      var cp = sigma.utils.getSelfLoopControlPoints(n.x, n.y, n.size);\n\n      // Bounding box of the point and the two control points:\n      var minX = Math.min(n.x, cp.x1, cp.x2),\n          maxX = Math.max(n.x, cp.x1, cp.x2),\n          minY = Math.min(n.y, cp.y1, cp.y2),\n          maxY = Math.max(n.y, cp.y1, cp.y2);\n\n      return {\n        x1: minX - n.size,\n        y1: minY - n.size,\n        x2: maxX + n.size,\n        y2: minY - n.size,\n        height: maxY - minY + n.size * 2\n      };\n    },\n\n    /**\n     * Checks whether a rectangle is axis-aligned.\n     *\n     * @param  {object}  A rectangle defined by two points\n     *                   (x1, y1) and (x2, y2).\n     * @return {boolean} True if the rectangle is axis-aligned.\n     */\n    isAxisAligned: function(r) {\n      return r.x1 === r.x2 || r.y1 === r.y2;\n    },\n\n    /**\n     * Compute top points of an axis-aligned rectangle. This is useful in\n     * cases when the rectangle has been rotated (left, right or bottom up) and\n     * later operations need to know the top points.\n     *\n     * @param  {object} An axis-aligned rectangle defined by two points\n     *                  (x1, y1), (x2, y2) and height.\n     * @return {object} A rectangle: two points (x1, y1), (x2, y2) and height.\n     */\n    axisAlignedTopPoints: function(r) {\n\n      // Basic\n      if (r.y1 === r.y2 && r.x1 < r.x2)\n        return r;\n\n      // Rotated to right\n      if (r.x1 === r.x2 && r.y2 > r.y1)\n        return {\n          x1: r.x1 - r.height, y1: r.y1,\n          x2: r.x1, y2: r.y1,\n          height: r.height\n        };\n\n      // Rotated to left\n      if (r.x1 === r.x2 && r.y2 < r.y1)\n        return {\n          x1: r.x1, y1: r.y2,\n          x2: r.x2 + r.height, y2: r.y2,\n          height: r.height\n        };\n\n      // Bottom's up\n      return {\n        x1: r.x2, y1: r.y1 - r.height,\n        x2: r.x1, y2: r.y1 - r.height,\n        height: r.height\n      };\n    },\n\n    /**\n     * Get coordinates of a rectangle's lower left corner from its top points.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @return {object} Coordinates of the corner (x, y).\n     */\n    lowerLeftCoor: function(r) {\n      var width = (\n        Math.sqrt(\n          Math.pow(r.x2 - r.x1, 2) +\n          Math.pow(r.y2 - r.y1, 2)\n        )\n      );\n\n      return {\n        x: r.x1 - (r.y2 - r.y1) * r.height / width,\n        y: r.y1 + (r.x2 - r.x1) * r.height / width\n      };\n    },\n\n    /**\n     * Get coordinates of a rectangle's lower right corner from its top points\n     * and its lower left corner.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @param  {object} A corner's coordinates (x, y).\n     * @return {object} Coordinates of the corner (x, y).\n     */\n    lowerRightCoor: function(r, llc) {\n      return {\n        x: llc.x - r.x1 + r.x2,\n        y: llc.y - r.y1 + r.y2\n      };\n    },\n\n    /**\n     * Get the coordinates of all the corners of a rectangle from its top point.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @return {array}  An array of the four corners' coordinates (x, y).\n     */\n    rectangleCorners: function(r) {\n      var llc = this.lowerLeftCoor(r),\n          lrc = this.lowerRightCoor(r, llc);\n\n      return [\n        {x: r.x1, y: r.y1},\n        {x: r.x2, y: r.y2},\n        {x: llc.x, y: llc.y},\n        {x: lrc.x, y: lrc.y}\n      ];\n    },\n\n    /**\n     * Split a square defined by its boundaries into four.\n     *\n     * @param  {object} Boundaries of the square (x, y, width, height).\n     * @return {array}  An array containing the four new squares, themselves\n     *                  defined by an array of their four corners (x, y).\n     */\n    splitSquare: function(b) {\n      return [\n        [\n          {x: b.x, y: b.y},\n          {x: b.x + b.width / 2, y: b.y},\n          {x: b.x, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2}\n        ],\n        [\n          {x: b.x + b.width / 2, y: b.y},\n          {x: b.x + b.width, y: b.y},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x + b.width, y: b.y + b.height / 2}\n        ],\n        [\n          {x: b.x, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x, y: b.y + b.height},\n          {x: b.x + b.width / 2, y: b.y + b.height}\n        ],\n        [\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x + b.width, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height},\n          {x: b.x + b.width, y: b.y + b.height}\n        ]\n      ];\n    },\n\n    /**\n     * Compute the four axis between corners of rectangle A and corners of\n     * rectangle B. This is needed later to check an eventual collision.\n     *\n     * @param  {array} An array of rectangle A's four corners (x, y).\n     * @param  {array} An array of rectangle B's four corners (x, y).\n     * @return {array} An array of four axis defined by their coordinates (x,y).\n     */\n    axis: function(c1, c2) {\n      return [\n        {x: c1[1].x - c1[0].x, y: c1[1].y - c1[0].y},\n        {x: c1[1].x - c1[3].x, y: c1[1].y - c1[3].y},\n        {x: c2[0].x - c2[2].x, y: c2[0].y - c2[2].y},\n        {x: c2[0].x - c2[1].x, y: c2[0].y - c2[1].y}\n      ];\n    },\n\n    /**\n     * Project a rectangle's corner on an axis.\n     *\n     * @param  {object} Coordinates of a corner (x, y).\n     * @param  {object} Coordinates of an axis (x, y).\n     * @return {object} The projection defined by coordinates (x, y).\n     */\n    projection: function(c, a) {\n      var l = (\n        (c.x * a.x + c.y * a.y) /\n        (Math.pow(a.x, 2) + Math.pow(a.y, 2))\n      );\n\n      return {\n        x: l * a.x,\n        y: l * a.y\n      };\n    },\n\n    /**\n     * Check whether two rectangles collide on one particular axis.\n     *\n     * @param  {object}   An axis' coordinates (x, y).\n     * @param  {array}    Rectangle A's corners.\n     * @param  {array}    Rectangle B's corners.\n     * @return {boolean}  True if the rectangles collide on the axis.\n     */\n    axisCollision: function(a, c1, c2) {\n      var sc1 = [],\n          sc2 = [];\n\n      for (var ci = 0; ci < 4; ci++) {\n        var p1 = this.projection(c1[ci], a),\n            p2 = this.projection(c2[ci], a);\n\n        sc1.push(p1.x * a.x + p1.y * a.y);\n        sc2.push(p2.x * a.x + p2.y * a.y);\n      }\n\n      var maxc1 = Math.max.apply(Math, sc1),\n          maxc2 = Math.max.apply(Math, sc2),\n          minc1 = Math.min.apply(Math, sc1),\n          minc2 = Math.min.apply(Math, sc2);\n\n      return (minc2 <= maxc1 && maxc2 >= minc1);\n    },\n\n    /**\n     * Check whether two rectangles collide on each one of their four axis. If\n     * all axis collide, then the two rectangles do collide on the plane.\n     *\n     * @param  {array}    Rectangle A's corners.\n     * @param  {array}    Rectangle B's corners.\n     * @return {boolean}  True if the rectangles collide.\n     */\n    collision: function(c1, c2) {\n      var axis = this.axis(c1, c2),\n          col = true;\n\n      for (var i = 0; i < 4; i++)\n        col = col && this.axisCollision(axis[i], c1, c2);\n\n      return col;\n    }\n  };\n\n\n  /**\n   * Quad Functions\n   * ------------\n   *\n   * The Quadtree functions themselves.\n   * For each of those functions, we consider that in a splitted quad, the\n   * index of each node is the following:\n   * 0: top left\n   * 1: top right\n   * 2: bottom left\n   * 3: bottom right\n   *\n   * Moreover, the hereafter quad's philosophy is to consider that if an element\n   * collides with more than one nodes, this element belongs to each of the\n   * nodes it collides with where other would let it lie on a higher node.\n   */\n\n  /**\n   * Get the index of the node containing the point in the quad\n   *\n   * @param  {object}  point      A point defined by coordinates (x, y).\n   * @param  {object}  quadBounds Boundaries of the quad (x, y, width, heigth).\n   * @return {integer}            The index of the node containing the point.\n   */\n  function _quadIndex(point, quadBounds) {\n    var xmp = quadBounds.x + quadBounds.width / 2,\n        ymp = quadBounds.y + quadBounds.height / 2,\n        top = (point.y < ymp),\n        left = (point.x < xmp);\n\n    if (top) {\n      if (left)\n        return 0;\n      else\n        return 1;\n    }\n    else {\n      if (left)\n        return 2;\n      else\n        return 3;\n    }\n  }\n\n  /**\n   * Get a list of indexes of nodes containing an axis-aligned rectangle\n   *\n   * @param  {object}  rectangle   A rectangle defined by two points (x1, y1),\n   *                               (x2, y2) and height.\n   * @param  {array}   quadCorners An array of the quad nodes' corners.\n   * @return {array}               An array of indexes containing one to\n   *                               four integers.\n   */\n  function _quadIndexes(rectangle, quadCorners) {\n    var indexes = [];\n\n    // Iterating through quads\n    for (var i = 0; i < 4; i++)\n      if ((rectangle.x2 >= quadCorners[i][0].x) &&\n          (rectangle.x1 <= quadCorners[i][1].x) &&\n          (rectangle.y1 + rectangle.height >= quadCorners[i][0].y) &&\n          (rectangle.y1 <= quadCorners[i][2].y))\n        indexes.push(i);\n\n    return indexes;\n  }\n\n  /**\n   * Get a list of indexes of nodes containing a non-axis-aligned rectangle\n   *\n   * @param  {array}  corners      An array containing each corner of the\n   *                               rectangle defined by its coordinates (x, y).\n   * @param  {array}  quadCorners  An array of the quad nodes' corners.\n   * @return {array}               An array of indexes containing one to\n   *                               four integers.\n   */\n  function _quadCollision(corners, quadCorners) {\n    var indexes = [];\n\n    // Iterating through quads\n    for (var i = 0; i < 4; i++)\n      if (_geom.collision(corners, quadCorners[i]))\n        indexes.push(i);\n\n    return indexes;\n  }\n\n  /**\n   * Subdivide a quad by creating a node at a precise index. The function does\n   * not generate all four nodes not to potentially create unused nodes.\n   *\n   * @param  {integer}  index The index of the node to create.\n   * @param  {object}   quad  The quad object to subdivide.\n   * @return {object}         A new quad representing the node created.\n   */\n  function _quadSubdivide(index, quad) {\n    var next = quad.level + 1,\n        subw = Math.round(quad.bounds.width / 2),\n        subh = Math.round(quad.bounds.height / 2),\n        qx = Math.round(quad.bounds.x),\n        qy = Math.round(quad.bounds.y),\n        x,\n        y;\n\n    switch (index) {\n      case 0:\n        x = qx;\n        y = qy;\n        break;\n      case 1:\n        x = qx + subw;\n        y = qy;\n        break;\n      case 2:\n        x = qx;\n        y = qy + subh;\n        break;\n      case 3:\n        x = qx + subw;\n        y = qy + subh;\n        break;\n    }\n\n    return _quadTree(\n      {x: x, y: y, width: subw, height: subh},\n      next,\n      quad.maxElements,\n      quad.maxLevel\n    );\n  }\n\n  /**\n   * Recursively insert an element into the quadtree. Only points\n   * with size, i.e. axis-aligned squares, may be inserted with this\n   * method.\n   *\n   * @param  {object}  el         The element to insert in the quadtree.\n   * @param  {object}  sizedPoint A sized point defined by two top points\n   *                              (x1, y1), (x2, y2) and height.\n   * @param  {object}  quad       The quad in which to insert the element.\n   * @return {undefined}          The function does not return anything.\n   */\n  function _quadInsert(el, sizedPoint, quad) {\n    if (quad.level < quad.maxLevel) {\n\n      // Searching appropriate quads\n      var indexes = _quadIndexes(sizedPoint, quad.corners);\n\n      // Iterating\n      for (var i = 0, l = indexes.length; i < l; i++) {\n\n        // Subdividing if necessary\n        if (quad.nodes[indexes[i]] === undefined)\n          quad.nodes[indexes[i]] = _quadSubdivide(indexes[i], quad);\n\n        // Recursion\n        _quadInsert(el, sizedPoint, quad.nodes[indexes[i]]);\n      }\n    }\n    else {\n\n      // Pushing the element in a leaf node\n      quad.elements.push(el);\n    }\n  }\n\n  /**\n   * Recursively retrieve every elements held by the node containing the\n   * searched point.\n   *\n   * @param  {object}  point The searched point (x, y).\n   * @param  {object}  quad  The searched quad.\n   * @return {array}         An array of elements contained in the relevant\n   *                         node.\n   */\n  function _quadRetrievePoint(point, quad) {\n    if (quad.level < quad.maxLevel) {\n      var index = _quadIndex(point, quad.bounds);\n\n      // If node does not exist we return an empty list\n      if (quad.nodes[index] !== undefined) {\n        return _quadRetrievePoint(point, quad.nodes[index]);\n      }\n      else {\n        return [];\n      }\n    }\n    else {\n      return quad.elements;\n    }\n  }\n\n  /**\n   * Recursively retrieve every elements contained within an rectangular area\n   * that may or may not be axis-aligned.\n   *\n   * @param  {object|array} rectData       The searched area defined either by\n   *                                       an array of four corners (x, y) in\n   *                                       the case of a non-axis-aligned\n   *                                       rectangle or an object with two top\n   *                                       points (x1, y1), (x2, y2) and height.\n   * @param  {object}       quad           The searched quad.\n   * @param  {function}     collisionFunc  The collision function used to search\n   *                                       for node indexes.\n   * @param  {array?}       els            The retrieved elements.\n   * @return {array}                       An array of elements contained in the\n   *                                       area.\n   */\n  function _quadRetrieveArea(rectData, quad, collisionFunc, els) {\n    els = els || {};\n\n    if (quad.level < quad.maxLevel) {\n      var indexes = collisionFunc(rectData, quad.corners);\n\n      for (var i = 0, l = indexes.length; i < l; i++)\n        if (quad.nodes[indexes[i]] !== undefined)\n          _quadRetrieveArea(\n            rectData,\n            quad.nodes[indexes[i]],\n            collisionFunc,\n            els\n          );\n    } else\n      for (var j = 0, m = quad.elements.length; j < m; j++)\n        if (els[quad.elements[j].id] === undefined)\n          els[quad.elements[j].id] = quad.elements[j];\n\n    return els;\n  }\n\n  /**\n   * Creates the quadtree object itself.\n   *\n   * @param  {object}   bounds       The boundaries of the quad defined by an\n   *                                 origin (x, y), width and heigth.\n   * @param  {integer}  level        The level of the quad in the tree.\n   * @param  {integer}  maxElements  The max number of element in a leaf node.\n   * @param  {integer}  maxLevel     The max recursion level of the tree.\n   * @return {object}                The quadtree object.\n   */\n  function _quadTree(bounds, level, maxElements, maxLevel) {\n    return {\n      level: level || 0,\n      bounds: bounds,\n      corners: _geom.splitSquare(bounds),\n      maxElements: maxElements || 40,\n      maxLevel: maxLevel || 8,\n      elements: [],\n      nodes: []\n    };\n  }\n\n\n  /**\n   * Sigma Quad Constructor\n   * ----------------------\n   *\n   * The edgequad API as exposed to sigma.\n   */\n\n  /**\n   * The edgequad core that will become the sigma interface with the quadtree.\n   *\n   * property {object} _tree     Property holding the quadtree object.\n   * property {object} _geom     Exposition of the _geom namespace for testing.\n   * property {object} _cache    Cache for the area method.\n   * property {boolean} _enabled Can index and retreive elements.\n   */\n  var edgequad = function() {\n    this._geom = _geom;\n    this._tree = null;\n    this._cache = {\n      query: false,\n      result: false\n    };\n    this._enabled = true;\n  };\n\n  /**\n   * Index a graph by inserting its edges into the quadtree.\n   *\n   * @param  {object} graph   A graph instance.\n   * @param  {object} params  An object of parameters with at least the quad\n   *                          bounds.\n   * @return {object}         The quadtree object.\n   *\n   * Parameters:\n   * ----------\n   * bounds:      {object}   boundaries of the quad defined by its origin (x, y)\n   *                         width and heigth.\n   * prefix:      {string?}  a prefix for edge geometric attributes.\n   * maxElements: {integer?} the max number of elements in a leaf node.\n   * maxLevel:    {integer?} the max recursion level of the tree.\n   */\n  edgequad.prototype.index = function(graph, params) {\n    if (!this._enabled)\n      return this._tree;\n\n    // Enforcing presence of boundaries\n    if (!params.bounds)\n      throw 'sigma.classes.edgequad.index: bounds information not given.';\n\n    // Prefix\n    var prefix = params.prefix || '',\n        cp,\n        source,\n        target,\n        n,\n        e;\n\n    // Building the tree\n    this._tree = _quadTree(\n      params.bounds,\n      0,\n      params.maxElements,\n      params.maxLevel\n    );\n\n    var edges = graph.edges();\n\n    // Inserting graph edges into the tree\n    for (var i = 0, l = edges.length; i < l; i++) {\n      source = graph.nodes(edges[i].source);\n      target = graph.nodes(edges[i].target);\n      e = {\n        x1: source[prefix + 'x'],\n        y1: source[prefix + 'y'],\n        x2: target[prefix + 'x'],\n        y2: target[prefix + 'y'],\n        size: edges[i][prefix + 'size'] || 0\n      };\n\n      // Inserting edge\n      if (edges[i].type === 'curve' || edges[i].type === 'curvedArrow') {\n        if (source.id === target.id) {\n          n = {\n            x: source[prefix + 'x'],\n            y: source[prefix + 'y'],\n            size: source[prefix + 'size'] || 0\n          };\n          _quadInsert(\n            edges[i],\n            _geom.selfLoopToSquare(n),\n            this._tree);\n        }\n        else {\n          cp = sigma.utils.getQuadraticControlPoint(e.x1, e.y1, e.x2, e.y2);\n          _quadInsert(\n            edges[i],\n            _geom.quadraticCurveToSquare(e, cp),\n            this._tree);\n        }\n      }\n      else {\n        _quadInsert(\n          edges[i],\n          _geom.lineToSquare(e),\n          this._tree);\n      }\n    }\n\n    // Reset cache:\n    this._cache = {\n      query: false,\n      result: false\n    };\n\n    // remove?\n    return this._tree;\n  };\n\n  /**\n   * Retrieve every graph edges held by the quadtree node containing the\n   * searched point.\n   *\n   * @param  {number} x of the point.\n   * @param  {number} y of the point.\n   * @return {array}  An array of edges retrieved.\n   */\n  edgequad.prototype.point = function(x, y) {\n    if (!this._enabled)\n      return [];\n\n    return this._tree ?\n      _quadRetrievePoint({x: x, y: y}, this._tree) || [] :\n      [];\n  };\n\n  /**\n   * Retrieve every graph edges within a rectangular area. The methods keep the\n   * last area queried in cache for optimization reason and will act differently\n   * for the same reason if the area is axis-aligned or not.\n   *\n   * @param  {object} A rectangle defined by two top points (x1, y1), (x2, y2)\n   *                  and height.\n   * @return {array}  An array of edges retrieved.\n   */\n  edgequad.prototype.area = function(rect) {\n    if (!this._enabled)\n      return [];\n\n    var serialized = JSON.stringify(rect),\n        collisionFunc,\n        rectData;\n\n    // Returning cache?\n    if (this._cache.query === serialized)\n      return this._cache.result;\n\n    // Axis aligned ?\n    if (_geom.isAxisAligned(rect)) {\n      collisionFunc = _quadIndexes;\n      rectData = _geom.axisAlignedTopPoints(rect);\n    }\n    else {\n      collisionFunc = _quadCollision;\n      rectData = _geom.rectangleCorners(rect);\n    }\n\n    // Retrieving edges\n    var edges = this._tree ?\n      _quadRetrieveArea(\n        rectData,\n        this._tree,\n        collisionFunc\n      ) :\n      [];\n\n    // Object to array\n    var edgesArray = [];\n    for (var i in edges)\n      edgesArray.push(edges[i]);\n\n    // Caching\n    this._cache.query = serialized;\n    this._cache.result = edgesArray;\n\n    return edgesArray;\n  };\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof this.sigma !== 'undefined') {\n    this.sigma.classes = this.sigma.classes || {};\n    this.sigma.classes.edgequad = edgequad;\n  } else if (true) {\n    if ( true && module.exports)\n      exports = module.exports = edgequad;\n    exports.edgequad = edgequad;\n  } else\n    {}\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.captors');\n\n  /**\n   * The user inputs default captor. It deals with mouse events, keyboards\n   * events and touch events.\n   *\n   * @param  {DOMElement}   target   The DOM element where the listeners will be\n   *                                 bound.\n   * @param  {camera}       camera   The camera related to the target.\n   * @param  {configurable} settings The settings function.\n   * @return {sigma.captor}          The fresh new captor instance.\n   */\n  sigma.captors.mouse = function(target, camera, settings) {\n    var _self = this,\n        _target = target,\n        _camera = camera,\n        _settings = settings,\n\n        // CAMERA MANAGEMENT:\n        // ******************\n        // The camera position when the user starts dragging:\n        _startCameraX,\n        _startCameraY,\n        _startCameraAngle,\n\n        // The latest stage position:\n        _lastCameraX,\n        _lastCameraY,\n        _lastCameraAngle,\n        _lastCameraRatio,\n\n        // MOUSE MANAGEMENT:\n        // *****************\n        // The mouse position when the user starts dragging:\n        _startMouseX,\n        _startMouseY,\n\n        _isMouseDown,\n        _isMoving,\n        _hasDragged,\n        _downStartTime,\n        _movingTimeoutId;\n\n    sigma.classes.dispatcher.extend(this);\n\n    sigma.utils.doubleClick(_target, 'click', _doubleClickHandler);\n    _target.addEventListener('DOMMouseScroll', _wheelHandler, false);\n    _target.addEventListener('mousewheel', _wheelHandler, false);\n    _target.addEventListener('mousemove', _moveHandler, false);\n    _target.addEventListener('mousedown', _downHandler, false);\n    _target.addEventListener('click', _clickHandler, false);\n    _target.addEventListener('mouseout', _outHandler, false);\n    document.addEventListener('mouseup', _upHandler, false);\n\n\n\n\n    /**\n     * This method unbinds every handlers that makes the captor work.\n     */\n    this.kill = function() {\n      sigma.utils.unbindDoubleClick(_target, 'click');\n      _target.removeEventListener('DOMMouseScroll', _wheelHandler);\n      _target.removeEventListener('mousewheel', _wheelHandler);\n      _target.removeEventListener('mousemove', _moveHandler);\n      _target.removeEventListener('mousedown', _downHandler);\n      _target.removeEventListener('click', _clickHandler);\n      _target.removeEventListener('mouseout', _outHandler);\n      document.removeEventListener('mouseup', _upHandler);\n    };\n\n\n\n\n    // MOUSE EVENTS:\n    // *************\n\n    /**\n     * The handler listening to the 'move' mouse event. It will effectively\n     * drag the graph.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _moveHandler(e) {\n      var x,\n          y,\n          pos;\n\n      // Dispatch event:\n      if (_settings('mouseEnabled')) {\n        _self.dispatchEvent('mousemove',\n          sigma.utils.mouseCoords(e));\n\n        if (_isMouseDown) {\n          _isMoving = true;\n          _hasDragged = true;\n\n          if (_movingTimeoutId)\n            clearTimeout(_movingTimeoutId);\n\n          _movingTimeoutId = setTimeout(function() {\n            _isMoving = false;\n          }, _settings('dragTimeout'));\n\n          sigma.misc.animation.killAll(_camera);\n\n          _camera.isMoving = true;\n          pos = _camera.cameraPosition(\n            sigma.utils.getX(e) - _startMouseX,\n            sigma.utils.getY(e) - _startMouseY,\n            true\n          );\n\n          x = _startCameraX - pos.x;\n          y = _startCameraY - pos.y;\n\n          if (x !== _camera.x || y !== _camera.y) {\n            _lastCameraX = _camera.x;\n            _lastCameraY = _camera.y;\n\n            _camera.goTo({\n              x: x,\n              y: y\n            });\n          }\n\n          if (e.preventDefault)\n            e.preventDefault();\n          else\n            e.returnValue = false;\n\n          e.stopPropagation();\n          return false;\n        }\n      }\n    }\n\n    /**\n     * The handler listening to the 'up' mouse event. It will stop dragging the\n     * graph.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _upHandler(e) {\n      if (_settings('mouseEnabled') && _isMouseDown) {\n        _isMouseDown = false;\n        if (_movingTimeoutId)\n          clearTimeout(_movingTimeoutId);\n\n        _camera.isMoving = false;\n\n        var x = sigma.utils.getX(e),\n            y = sigma.utils.getY(e);\n\n        if (_isMoving) {\n          sigma.misc.animation.killAll(_camera);\n          sigma.misc.animation.camera(\n            _camera,\n            {\n              x: _camera.x +\n                _settings('mouseInertiaRatio') * (_camera.x - _lastCameraX),\n              y: _camera.y +\n                _settings('mouseInertiaRatio') * (_camera.y - _lastCameraY)\n            },\n            {\n              easing: 'quadraticOut',\n              duration: _settings('mouseInertiaDuration')\n            }\n          );\n        } else if (\n          _startMouseX !== x ||\n          _startMouseY !== y\n        )\n          _camera.goTo({\n            x: _camera.x,\n            y: _camera.y\n          });\n\n        _self.dispatchEvent('mouseup',\n          sigma.utils.mouseCoords(e));\n\n        // Update _isMoving flag:\n        _isMoving = false;\n      }\n    }\n\n    /**\n     * The handler listening to the 'down' mouse event. It will start observing\n     * the mouse position for dragging the graph.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _downHandler(e) {\n      if (_settings('mouseEnabled')) {\n        _startCameraX = _camera.x;\n        _startCameraY = _camera.y;\n\n        _lastCameraX = _camera.x;\n        _lastCameraY = _camera.y;\n\n        _startMouseX = sigma.utils.getX(e);\n        _startMouseY = sigma.utils.getY(e);\n\n        _hasDragged = false;\n        _downStartTime = (new Date()).getTime();\n\n        switch (e.which) {\n          case 2:\n            // Middle mouse button pressed\n            // Do nothing.\n            break;\n          case 3:\n            // Right mouse button pressed\n            _self.dispatchEvent('rightclick',\n              sigma.utils.mouseCoords(e, _startMouseX, _startMouseY));\n            break;\n          // case 1:\n          default:\n            // Left mouse button pressed\n            _isMouseDown = true;\n\n            _self.dispatchEvent('mousedown',\n              sigma.utils.mouseCoords(e, _startMouseX, _startMouseY));\n        }\n      }\n    }\n\n    /**\n     * The handler listening to the 'out' mouse event. It will just redispatch\n     * the event.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _outHandler(e) {\n      if (_settings('mouseEnabled'))\n        _self.dispatchEvent('mouseout');\n    }\n\n    /**\n     * The handler listening to the 'click' mouse event. It will redispatch the\n     * click event, but with normalized X and Y coordinates.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _clickHandler(e) {\n      if (_settings('mouseEnabled')) {\n        var event = sigma.utils.mouseCoords(e);\n        event.isDragging =\n          (((new Date()).getTime() - _downStartTime) > 100) && _hasDragged;\n        _self.dispatchEvent('click', event);\n      }\n\n      if (e.preventDefault)\n        e.preventDefault();\n      else\n        e.returnValue = false;\n\n      e.stopPropagation();\n      return false;\n    }\n\n    /**\n     * The handler listening to the double click custom event. It will\n     * basically zoom into the graph.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _doubleClickHandler(e) {\n      var pos,\n          ratio,\n          animation;\n\n      if (_settings('mouseEnabled')) {\n        ratio = 1 / _settings('doubleClickZoomingRatio');\n\n        _self.dispatchEvent('doubleclick',\n            sigma.utils.mouseCoords(e, _startMouseX, _startMouseY));\n\n        if (_settings('doubleClickEnabled')) {\n          pos = _camera.cameraPosition(\n            sigma.utils.getX(e) - sigma.utils.getCenter(e).x,\n            sigma.utils.getY(e) - sigma.utils.getCenter(e).y,\n            true\n          );\n\n          animation = {\n            duration: _settings('doubleClickZoomDuration')\n          };\n\n          sigma.utils.zoomTo(_camera, pos.x, pos.y, ratio, animation);\n        }\n\n        if (e.preventDefault)\n          e.preventDefault();\n        else\n          e.returnValue = false;\n\n        e.stopPropagation();\n        return false;\n      }\n    }\n\n    /**\n     * The handler listening to the 'wheel' mouse event. It will basically zoom\n     * in or not into the graph.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _wheelHandler(e) {\n      var pos,\n          ratio,\n          animation,\n          wheelDelta = sigma.utils.getDelta(e);\n\n      if (_settings('mouseEnabled') && _settings('mouseWheelEnabled') && wheelDelta !== 0) {\n        ratio = wheelDelta > 0 ?\n          1 / _settings('zoomingRatio') :\n          _settings('zoomingRatio');\n\n        pos = _camera.cameraPosition(\n          sigma.utils.getX(e) - sigma.utils.getCenter(e).x,\n          sigma.utils.getY(e) - sigma.utils.getCenter(e).y,\n          true\n        );\n\n        animation = {\n          duration: _settings('mouseZoomDuration')\n        };\n\n        sigma.utils.zoomTo(_camera, pos.x, pos.y, ratio, animation);\n\n        if (e.preventDefault)\n          e.preventDefault();\n        else\n          e.returnValue = false;\n\n        e.stopPropagation();\n        return false;\n      }\n    }\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.captors');\n\n  /**\n   * The user inputs default captor. It deals with mouse events, keyboards\n   * events and touch events.\n   *\n   * @param  {DOMElement}   target   The DOM element where the listeners will be\n   *                                 bound.\n   * @param  {camera}       camera   The camera related to the target.\n   * @param  {configurable} settings The settings function.\n   * @return {sigma.captor}          The fresh new captor instance.\n   */\n  sigma.captors.touch = function(target, camera, settings) {\n    var _self = this,\n        _target = target,\n        _camera = camera,\n        _settings = settings,\n\n        // CAMERA MANAGEMENT:\n        // ******************\n        // The camera position when the user starts dragging:\n        _startCameraX,\n        _startCameraY,\n        _startCameraAngle,\n        _startCameraRatio,\n\n        // The latest stage position:\n        _lastCameraX,\n        _lastCameraY,\n        _lastCameraAngle,\n        _lastCameraRatio,\n\n        // TOUCH MANAGEMENT:\n        // *****************\n        // Touches that are down:\n        _downTouches = [],\n\n        _startTouchX0,\n        _startTouchY0,\n        _startTouchX1,\n        _startTouchY1,\n        _startTouchAngle,\n        _startTouchDistance,\n\n        _touchMode,\n\n        _isMoving,\n        _doubleTap,\n        _movingTimeoutId;\n\n    sigma.classes.dispatcher.extend(this);\n\n    sigma.utils.doubleClick(_target, 'touchstart', _doubleTapHandler);\n    _target.addEventListener('touchstart', _handleStart, false);\n    _target.addEventListener('touchend', _handleLeave, false);\n    _target.addEventListener('touchcancel', _handleLeave, false);\n    _target.addEventListener('touchleave', _handleLeave, false);\n    _target.addEventListener('touchmove', _handleMove, false);\n\n    function position(e) {\n      var offset = sigma.utils.getOffset(_target);\n\n      return {\n        x: e.pageX - offset.left,\n        y: e.pageY - offset.top\n      };\n    }\n\n    /**\n     * This method unbinds every handlers that makes the captor work.\n     */\n    this.kill = function() {\n      sigma.utils.unbindDoubleClick(_target, 'touchstart');\n      _target.addEventListener('touchstart', _handleStart);\n      _target.addEventListener('touchend', _handleLeave);\n      _target.addEventListener('touchcancel', _handleLeave);\n      _target.addEventListener('touchleave', _handleLeave);\n      _target.addEventListener('touchmove', _handleMove);\n    };\n\n    // TOUCH EVENTS:\n    // *************\n    /**\n     * The handler listening to the 'touchstart' event. It will set the touch\n     * mode (\"_touchMode\") and start observing the user touch moves.\n     *\n     * @param {event} e A touch event.\n     */\n    function _handleStart(e) {\n      if (_settings('touchEnabled')) {\n        var x0,\n            x1,\n            y0,\n            y1,\n            pos0,\n            pos1;\n\n        _downTouches = e.touches;\n\n        switch (_downTouches.length) {\n          case 1:\n            _camera.isMoving = true;\n            _touchMode = 1;\n\n            _startCameraX = _camera.x;\n            _startCameraY = _camera.y;\n\n            _lastCameraX = _camera.x;\n            _lastCameraY = _camera.y;\n\n            pos0 = position(_downTouches[0]);\n            _startTouchX0 = pos0.x;\n            _startTouchY0 = pos0.y;\n\n            break;\n          case 2:\n            _camera.isMoving = true;\n            _touchMode = 2;\n\n            pos0 = position(_downTouches[0]);\n            pos1 = position(_downTouches[1]);\n            x0 = pos0.x;\n            y0 = pos0.y;\n            x1 = pos1.x;\n            y1 = pos1.y;\n\n            _lastCameraX = _camera.x;\n            _lastCameraY = _camera.y;\n\n            _startCameraAngle = _camera.angle;\n            _startCameraRatio = _camera.ratio;\n\n            _startCameraX = _camera.x;\n            _startCameraY = _camera.y;\n\n            _startTouchX0 = x0;\n            _startTouchY0 = y0;\n            _startTouchX1 = x1;\n            _startTouchY1 = y1;\n\n            _startTouchAngle = Math.atan2(\n              _startTouchY1 - _startTouchY0,\n              _startTouchX1 - _startTouchX0\n            );\n            _startTouchDistance = Math.sqrt(\n              (_startTouchY1 - _startTouchY0) *\n                (_startTouchY1 - _startTouchY0) +\n              (_startTouchX1 - _startTouchX0) *\n                (_startTouchX1 - _startTouchX0)\n            );\n\n            e.preventDefault();\n            return false;\n        }\n      }\n    }\n\n    /**\n     * The handler listening to the 'touchend', 'touchcancel' and 'touchleave'\n     * event. It will update the touch mode if there are still at least one\n     * finger, and stop dragging else.\n     *\n     * @param {event} e A touch event.\n     */\n    function _handleLeave(e) {\n      if (_settings('touchEnabled')) {\n        _downTouches = e.touches;\n        var inertiaRatio = _settings('touchInertiaRatio');\n\n        if (_movingTimeoutId) {\n          _isMoving = false;\n          clearTimeout(_movingTimeoutId);\n        }\n\n        switch (_touchMode) {\n          case 2:\n            if (e.touches.length === 1) {\n              _handleStart(e);\n\n              e.preventDefault();\n              break;\n            }\n            /* falls through */\n          case 1:\n            _camera.isMoving = false;\n            _self.dispatchEvent('stopDrag');\n\n            if (_isMoving) {\n              _doubleTap = false;\n              sigma.misc.animation.camera(\n                _camera,\n                {\n                  x: _camera.x +\n                    inertiaRatio * (_camera.x - _lastCameraX),\n                  y: _camera.y +\n                    inertiaRatio * (_camera.y - _lastCameraY)\n                },\n                {\n                  easing: 'quadraticOut',\n                  duration: _settings('touchInertiaDuration')\n                }\n              );\n            }\n\n            _isMoving = false;\n            _touchMode = 0;\n            break;\n        }\n      }\n    }\n\n    /**\n     * The handler listening to the 'touchmove' event. It will effectively drag\n     * the graph, and eventually zooms and turn it if the user is using two\n     * fingers.\n     *\n     * @param {event} e A touch event.\n     */\n    function _handleMove(e) {\n      if (!_doubleTap && _settings('touchEnabled')) {\n        var x0,\n            x1,\n            y0,\n            y1,\n            cos,\n            sin,\n            end,\n            pos0,\n            pos1,\n            diff,\n            start,\n            dAngle,\n            dRatio,\n            newStageX,\n            newStageY,\n            newStageRatio,\n            newStageAngle;\n\n        _downTouches = e.touches;\n        _isMoving = true;\n\n        if (_movingTimeoutId)\n          clearTimeout(_movingTimeoutId);\n\n        _movingTimeoutId = setTimeout(function() {\n          _isMoving = false;\n        }, _settings('dragTimeout'));\n\n        switch (_touchMode) {\n          case 1:\n            pos0 = position(_downTouches[0]);\n            x0 = pos0.x;\n            y0 = pos0.y;\n\n            diff = _camera.cameraPosition(\n              x0 - _startTouchX0,\n              y0 - _startTouchY0,\n              true\n            );\n\n            newStageX = _startCameraX - diff.x;\n            newStageY = _startCameraY - diff.y;\n\n            if (newStageX !== _camera.x || newStageY !== _camera.y) {\n              _lastCameraX = _camera.x;\n              _lastCameraY = _camera.y;\n\n              _camera.goTo({\n                x: newStageX,\n                y: newStageY\n              });\n\n              _self.dispatchEvent('mousemove',\n                sigma.utils.mouseCoords(e, pos0.x, pos0.y));\n\n              _self.dispatchEvent('drag');\n            }\n            break;\n          case 2:\n            pos0 = position(_downTouches[0]);\n            pos1 = position(_downTouches[1]);\n            x0 = pos0.x;\n            y0 = pos0.y;\n            x1 = pos1.x;\n            y1 = pos1.y;\n\n            start = _camera.cameraPosition(\n              (_startTouchX0 + _startTouchX1) / 2 -\n                sigma.utils.getCenter(e).x,\n              (_startTouchY0 + _startTouchY1) / 2 -\n                sigma.utils.getCenter(e).y,\n              true\n            );\n            end = _camera.cameraPosition(\n              (x0 + x1) / 2 - sigma.utils.getCenter(e).x,\n              (y0 + y1) / 2 - sigma.utils.getCenter(e).y,\n              true\n            );\n\n            dAngle = Math.atan2(y1 - y0, x1 - x0) - _startTouchAngle;\n            dRatio = Math.sqrt(\n              (y1 - y0) * (y1 - y0) + (x1 - x0) * (x1 - x0)\n            ) / _startTouchDistance;\n\n            // Translation:\n            x0 = start.x;\n            y0 = start.y;\n\n            // Homothetic transformation:\n            newStageRatio = _startCameraRatio / dRatio;\n            x0 = x0 * dRatio;\n            y0 = y0 * dRatio;\n\n            // Rotation:\n            newStageAngle = _startCameraAngle - dAngle;\n            cos = Math.cos(-dAngle);\n            sin = Math.sin(-dAngle);\n            x1 = x0 * cos + y0 * sin;\n            y1 = y0 * cos - x0 * sin;\n            x0 = x1;\n            y0 = y1;\n\n            // Finalize:\n            newStageX = x0 - end.x + _startCameraX;\n            newStageY = y0 - end.y + _startCameraY;\n\n            if (\n              newStageRatio !== _camera.ratio ||\n              newStageAngle !== _camera.angle ||\n              newStageX !== _camera.x ||\n              newStageY !== _camera.y\n            ) {\n              _lastCameraX = _camera.x;\n              _lastCameraY = _camera.y;\n              _lastCameraAngle = _camera.angle;\n              _lastCameraRatio = _camera.ratio;\n\n              _camera.goTo({\n                x: newStageX,\n                y: newStageY,\n                angle: newStageAngle,\n                ratio: newStageRatio\n              });\n\n              _self.dispatchEvent('drag');\n            }\n\n            break;\n        }\n\n        e.preventDefault();\n        return false;\n      }\n    }\n\n    /**\n     * The handler listening to the double tap custom event. It will\n     * basically zoom into the graph.\n     *\n     * @param {event} e A touch event.\n     */\n    function _doubleTapHandler(e) {\n      var pos,\n          ratio,\n          animation;\n\n      if (e.touches && e.touches.length === 1 && _settings('touchEnabled')) {\n        _doubleTap = true;\n\n        ratio = 1 / _settings('doubleClickZoomingRatio');\n\n        pos = position(e.touches[0]);\n        _self.dispatchEvent('doubleclick',\n          sigma.utils.mouseCoords(e, pos.x, pos.y));\n\n        if (_settings('doubleClickEnabled')) {\n          pos = _camera.cameraPosition(\n            pos.x - sigma.utils.getCenter(e).x,\n            pos.y - sigma.utils.getCenter(e).y,\n            true\n          );\n\n          animation = {\n            duration: _settings('doubleClickZoomDuration'),\n            onComplete: function() {\n              _doubleTap = false;\n            }\n          };\n\n          sigma.utils.zoomTo(_camera, pos.x, pos.y, ratio, animation);\n        }\n\n        if (e.preventDefault)\n          e.preventDefault();\n        else\n          e.returnValue = false;\n\n        e.stopPropagation();\n        return false;\n      }\n    }\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  if (typeof conrad === 'undefined')\n    throw 'conrad is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.renderers');\n\n  /**\n   * This function is the constructor of the canvas sigma's renderer.\n   *\n   * @param  {sigma.classes.graph}            graph    The graph to render.\n   * @param  {sigma.classes.camera}           camera   The camera.\n   * @param  {configurable}           settings The sigma instance settings\n   *                                           function.\n   * @param  {object}                 object   The options object.\n   * @return {sigma.renderers.canvas}          The renderer instance.\n   */\n  sigma.renderers.canvas = function(graph, camera, settings, options) {\n    if (typeof options !== 'object')\n      throw 'sigma.renderers.canvas: Wrong arguments.';\n\n    if (!(options.container instanceof HTMLElement))\n      throw 'Container not found.';\n\n    var k,\n        i,\n        l,\n        a,\n        fn,\n        self = this;\n\n    sigma.classes.dispatcher.extend(this);\n\n    // Initialize main attributes:\n    Object.defineProperty(this, 'conradId', {\n      value: sigma.utils.id()\n    });\n    this.graph = graph;\n    this.camera = camera;\n    this.contexts = {};\n    this.domElements = {};\n    this.options = options;\n    this.container = this.options.container;\n    this.settings = (\n        typeof options.settings === 'object' &&\n        options.settings\n      ) ?\n        settings.embedObjects(options.settings) :\n        settings;\n\n    // Node indexes:\n    this.nodesOnScreen = [];\n    this.edgesOnScreen = [];\n\n    // Conrad related attributes:\n    this.jobs = {};\n\n    // Find the prefix:\n    this.options.prefix = 'renderer' + this.conradId + ':';\n\n    // Initialize the DOM elements:\n    if (\n      !this.settings('batchEdgesDrawing')\n    ) {\n      this.initDOM('canvas', 'scene');\n      this.contexts.edges = this.contexts.scene;\n      this.contexts.nodes = this.contexts.scene;\n      this.contexts.labels = this.contexts.scene;\n    } else {\n      this.initDOM('canvas', 'edges');\n      this.initDOM('canvas', 'scene');\n      this.contexts.nodes = this.contexts.scene;\n      this.contexts.labels = this.contexts.scene;\n    }\n\n    this.initDOM('canvas', 'mouse');\n    this.contexts.hover = this.contexts.mouse;\n\n    // Initialize captors:\n    this.captors = [];\n    a = this.options.captors || [sigma.captors.mouse, sigma.captors.touch];\n    for (i = 0, l = a.length; i < l; i++) {\n      fn = typeof a[i] === 'function' ? a[i] : sigma.captors[a[i]];\n      this.captors.push(\n        new fn(\n          this.domElements.mouse,\n          this.camera,\n          this.settings\n        )\n      );\n    }\n\n    // Deal with sigma events:\n    sigma.misc.bindEvents.call(this, this.options.prefix);\n    sigma.misc.drawHovers.call(this, this.options.prefix);\n\n    this.resize(false);\n  };\n\n\n\n\n  /**\n   * This method renders the graph on the canvases.\n   *\n   * @param  {?object}                options Eventually an object of options.\n   * @return {sigma.renderers.canvas}         Returns the instance itself.\n   */\n  sigma.renderers.canvas.prototype.render = function(options) {\n    options = options || {};\n\n    var a,\n        i,\n        k,\n        l,\n        o,\n        id,\n        end,\n        job,\n        start,\n        edges,\n        renderers,\n        rendererType,\n        batchSize,\n        tempGCO,\n        index = {},\n        graph = this.graph,\n        nodes = this.graph.nodes,\n        prefix = this.options.prefix || '',\n        drawEdges = this.settings(options, 'drawEdges'),\n        drawNodes = this.settings(options, 'drawNodes'),\n        drawLabels = this.settings(options, 'drawLabels'),\n        drawEdgeLabels = this.settings(options, 'drawEdgeLabels'),\n        embedSettings = this.settings.embedObjects(options, {\n          prefix: this.options.prefix\n        });\n\n    // Call the resize function:\n    this.resize(false);\n\n    // Check the 'hideEdgesOnMove' setting:\n    if (this.settings(options, 'hideEdgesOnMove'))\n      if (this.camera.isAnimated || this.camera.isMoving)\n        drawEdges = false;\n\n    // Apply the camera's view:\n    this.camera.applyView(\n      undefined,\n      this.options.prefix,\n      {\n        width: this.width,\n        height: this.height\n      }\n    );\n\n    // Clear canvases:\n    this.clear();\n\n    // Kill running jobs:\n    for (k in this.jobs)\n      if (conrad.hasJob(k))\n        conrad.killJob(k);\n\n    // Find which nodes are on screen:\n    this.edgesOnScreen = [];\n    this.nodesOnScreen = this.camera.quadtree.area(\n      this.camera.getRectangle(this.width, this.height)\n    );\n\n    for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++)\n      index[a[i].id] = a[i];\n\n    // Draw edges:\n    // - If settings('batchEdgesDrawing') is true, the edges are displayed per\n    //   batches. If not, they are drawn in one frame.\n    if (drawEdges) {\n      // First, let's identify which edges to draw. To do this, we just keep\n      // every edges that have at least one extremity displayed according to\n      // the quadtree and the \"hidden\" attribute. We also do not keep hidden\n      // edges.\n      for (a = graph.edges(), i = 0, l = a.length; i < l; i++) {\n        o = a[i];\n        if (\n          (index[o.source] || index[o.target]) &&\n          (!o.hidden && !nodes(o.source).hidden && !nodes(o.target).hidden)\n        )\n          this.edgesOnScreen.push(o);\n      }\n\n      // If the \"batchEdgesDrawing\" settings is true, edges are batched:\n      if (this.settings(options, 'batchEdgesDrawing')) {\n        id = 'edges_' + this.conradId;\n        batchSize = embedSettings('canvasEdgesBatchSize');\n\n        edges = this.edgesOnScreen;\n        l = edges.length;\n\n        start = 0;\n        end = Math.min(edges.length, start + batchSize);\n\n        job = function() {\n          tempGCO = this.contexts.edges.globalCompositeOperation;\n          this.contexts.edges.globalCompositeOperation = 'destination-over';\n\n          renderers = sigma.canvas.edges;\n          for (i = start; i < end; i++) {\n            o = edges[i];\n            (renderers[\n              o.type || this.settings(options, 'defaultEdgeType')\n            ] || renderers.def)(\n              o,\n              graph.nodes(o.source),\n              graph.nodes(o.target),\n              this.contexts.edges,\n              embedSettings\n            );\n          }\n\n          // Draw edge labels:\n          if (drawEdgeLabels) {\n            renderers = sigma.canvas.edges.labels;\n            for (i = start; i < end; i++) {\n              o = edges[i];\n              if (!o.hidden)\n                (renderers[\n                  o.type || this.settings(options, 'defaultEdgeType')\n                ] || renderers.def)(\n                  o,\n                  graph.nodes(o.source),\n                  graph.nodes(o.target),\n                  this.contexts.labels,\n                  embedSettings\n                );\n            }\n          }\n\n          // Restore original globalCompositeOperation:\n          this.contexts.edges.globalCompositeOperation = tempGCO;\n\n          // Catch job's end:\n          if (end === edges.length) {\n            delete this.jobs[id];\n            return false;\n          }\n\n          start = end + 1;\n          end = Math.min(edges.length, start + batchSize);\n          return true;\n        };\n\n        this.jobs[id] = job;\n        conrad.addJob(id, job.bind(this));\n\n      // If not, they are drawn in one frame:\n      } else {\n        renderers = sigma.canvas.edges;\n        for (a = this.edgesOnScreen, i = 0, l = a.length; i < l; i++) {\n          o = a[i];\n          (renderers[\n            o.type || this.settings(options, 'defaultEdgeType')\n          ] || renderers.def)(\n            o,\n            graph.nodes(o.source),\n            graph.nodes(o.target),\n            this.contexts.edges,\n            embedSettings\n          );\n        }\n\n        // Draw edge labels:\n        // - No batching\n        if (drawEdgeLabels) {\n          renderers = sigma.canvas.edges.labels;\n          for (a = this.edgesOnScreen, i = 0, l = a.length; i < l; i++)\n            if (!a[i].hidden)\n              (renderers[\n                a[i].type || this.settings(options, 'defaultEdgeType')\n              ] || renderers.def)(\n                a[i],\n                graph.nodes(a[i].source),\n                graph.nodes(a[i].target),\n                this.contexts.labels,\n                embedSettings\n              );\n        }\n      }\n    }\n\n    // Draw nodes:\n    // - No batching\n    if (drawNodes) {\n      renderers = sigma.canvas.nodes;\n      for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++)\n        if (!a[i].hidden)\n          (renderers[\n            a[i].type || this.settings(options, 'defaultNodeType')\n          ] || renderers.def)(\n            a[i],\n            this.contexts.nodes,\n            embedSettings\n          );\n    }\n\n    // Draw labels:\n    // - No batching\n    if (drawLabels) {\n      renderers = sigma.canvas.labels;\n      for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++)\n        if (!a[i].hidden)\n          (renderers[\n            a[i].type || this.settings(options, 'defaultNodeType')\n          ] || renderers.def)(\n            a[i],\n            this.contexts.labels,\n            embedSettings\n          );\n    }\n\n    this.dispatchEvent('render');\n\n    return this;\n  };\n\n  /**\n   * This method creates a DOM element of the specified type, switches its\n   * position to \"absolute\", references it to the domElements attribute, and\n   * finally appends it to the container.\n   *\n   * @param  {string} tag The label tag.\n   * @param  {string} id  The id of the element (to store it in \"domElements\").\n   */\n  sigma.renderers.canvas.prototype.initDOM = function(tag, id) {\n    var dom = document.createElement(tag);\n\n    dom.style.position = 'absolute';\n    dom.setAttribute('class', 'sigma-' + id);\n\n    this.domElements[id] = dom;\n    this.container.appendChild(dom);\n\n    if (tag.toLowerCase() === 'canvas')\n      this.contexts[id] = dom.getContext('2d');\n  };\n\n  /**\n   * This method resizes each DOM elements in the container and stores the new\n   * dimensions. Then, it renders the graph.\n   *\n   * @param  {?number}                width  The new width of the container.\n   * @param  {?number}                height The new height of the container.\n   * @return {sigma.renderers.canvas}        Returns the instance itself.\n   */\n  sigma.renderers.canvas.prototype.resize = function(w, h) {\n    var k,\n        oldWidth = this.width,\n        oldHeight = this.height,\n        pixelRatio = sigma.utils.getPixelRatio();\n\n    if (w !== undefined && h !== undefined) {\n      this.width = w;\n      this.height = h;\n    } else {\n      this.width = this.container.offsetWidth;\n      this.height = this.container.offsetHeight;\n\n      w = this.width;\n      h = this.height;\n    }\n\n    if (oldWidth !== this.width || oldHeight !== this.height) {\n      for (k in this.domElements) {\n        this.domElements[k].style.width = w + 'px';\n        this.domElements[k].style.height = h + 'px';\n\n        if (this.domElements[k].tagName.toLowerCase() === 'canvas') {\n          this.domElements[k].setAttribute('width', (w * pixelRatio) + 'px');\n          this.domElements[k].setAttribute('height', (h * pixelRatio) + 'px');\n\n          if (pixelRatio !== 1)\n            this.contexts[k].scale(pixelRatio, pixelRatio);\n        }\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * This method clears each canvas.\n   *\n   * @return {sigma.renderers.canvas} Returns the instance itself.\n   */\n  sigma.renderers.canvas.prototype.clear = function() {\n    for (var k in this.contexts) {\n      this.contexts[k].clearRect(0, 0, this.width, this.height);\n    }\n\n    return this;\n  };\n\n  /**\n   * This method kills contexts and other attributes.\n   */\n  sigma.renderers.canvas.prototype.kill = function() {\n    var k,\n        captor;\n\n    // Kill captors:\n    while ((captor = this.captors.pop()))\n      captor.kill();\n    delete this.captors;\n\n    // Kill contexts:\n    for (k in this.domElements) {\n      this.domElements[k].parentNode.removeChild(this.domElements[k]);\n      delete this.domElements[k];\n      delete this.contexts[k];\n    }\n    delete this.domElements;\n    delete this.contexts;\n  };\n\n\n\n\n  /**\n   * The labels, nodes and edges renderers are stored in the three following\n   * objects. When an element is drawn, its type will be checked and if a\n   * renderer with the same name exists, it will be used. If not found, the\n   * default renderer will be used instead.\n   *\n   * They are stored in different files, in the \"./canvas\" folder.\n   */\n  sigma.utils.pkg('sigma.canvas.nodes');\n  sigma.utils.pkg('sigma.canvas.edges');\n  sigma.utils.pkg('sigma.canvas.labels');\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.renderers');\n\n  /**\n   * This function is the constructor of the canvas sigma's renderer.\n   *\n   * @param  {sigma.classes.graph}            graph    The graph to render.\n   * @param  {sigma.classes.camera}           camera   The camera.\n   * @param  {configurable}           settings The sigma instance settings\n   *                                           function.\n   * @param  {object}                 object   The options object.\n   * @return {sigma.renderers.canvas}          The renderer instance.\n   */\n  sigma.renderers.webgl = function(graph, camera, settings, options) {\n    if (typeof options !== 'object')\n      throw 'sigma.renderers.webgl: Wrong arguments.';\n\n    if (!(options.container instanceof HTMLElement))\n      throw 'Container not found.';\n\n    var k,\n        i,\n        l,\n        a,\n        fn,\n        _self = this;\n\n    sigma.classes.dispatcher.extend(this);\n\n    // Conrad related attributes:\n    this.jobs = {};\n\n    Object.defineProperty(this, 'conradId', {\n      value: sigma.utils.id()\n    });\n\n    // Initialize main attributes:\n    this.graph = graph;\n    this.camera = camera;\n    this.contexts = {};\n    this.domElements = {};\n    this.options = options;\n    this.container = this.options.container;\n    this.settings = (\n        typeof options.settings === 'object' &&\n        options.settings\n      ) ?\n        settings.embedObjects(options.settings) :\n        settings;\n\n    // Find the prefix:\n    this.options.prefix = this.camera.readPrefix;\n\n    // Initialize programs hash\n    Object.defineProperty(this, 'nodePrograms', {\n      value: {}\n    });\n    Object.defineProperty(this, 'edgePrograms', {\n      value: {}\n    });\n    Object.defineProperty(this, 'nodeFloatArrays', {\n      value: {}\n    });\n    Object.defineProperty(this, 'edgeFloatArrays', {\n      value: {}\n    });\n    Object.defineProperty(this, 'edgeIndicesArrays', {\n      value: {}\n    });\n\n    // Initialize the DOM elements:\n    if (this.settings(options, 'batchEdgesDrawing')) {\n      this.initDOM('canvas', 'edges', true);\n      this.initDOM('canvas', 'nodes', true);\n    } else {\n      this.initDOM('canvas', 'scene', true);\n      this.contexts.nodes = this.contexts.scene;\n      this.contexts.edges = this.contexts.scene;\n    }\n\n    this.initDOM('canvas', 'labels');\n    this.initDOM('canvas', 'mouse');\n    this.contexts.hover = this.contexts.mouse;\n\n    // Initialize captors:\n    this.captors = [];\n    a = this.options.captors || [sigma.captors.mouse, sigma.captors.touch];\n    for (i = 0, l = a.length; i < l; i++) {\n      fn = typeof a[i] === 'function' ? a[i] : sigma.captors[a[i]];\n      this.captors.push(\n        new fn(\n          this.domElements.mouse,\n          this.camera,\n          this.settings\n        )\n      );\n    }\n\n    // Deal with sigma events:\n    sigma.misc.bindEvents.call(this, this.camera.prefix);\n    sigma.misc.drawHovers.call(this, this.camera.prefix);\n\n    this.resize();\n  };\n\n\n\n\n  /**\n   * This method will generate the nodes and edges float arrays. This step is\n   * separated from the \"render\" method, because to keep WebGL efficient, since\n   * all the camera and middlewares are modelised as matrices and they do not\n   * require the float arrays to be regenerated.\n   *\n   * Basically, when the user moves the camera or applies some specific linear\n   * transformations, this process step will be skipped, and the \"render\"\n   * method will efficiently refresh the rendering.\n   *\n   * And when the user modifies the graph colors or positions (applying a new\n   * layout or filtering the colors, for instance), this \"process\" step will be\n   * required to regenerate the float arrays.\n   *\n   * @return {sigma.renderers.webgl} Returns the instance itself.\n   */\n  sigma.renderers.webgl.prototype.process = function() {\n    var a,\n        i,\n        l,\n        k,\n        type,\n        renderer,\n        graph = this.graph,\n        options = sigma.utils.extend(options, this.options),\n        defaultEdgeType = this.settings(options, 'defaultEdgeType'),\n        defaultNodeType = this.settings(options, 'defaultNodeType');\n\n    // Empty float arrays:\n    for (k in this.nodeFloatArrays)\n      delete this.nodeFloatArrays[k];\n\n    for (k in this.edgeFloatArrays)\n      delete this.edgeFloatArrays[k];\n\n    for (k in this.edgeIndicesArrays)\n      delete this.edgeIndicesArrays[k];\n\n    // Sort edges and nodes per types:\n    for (a = graph.edges(), i = 0, l = a.length; i < l; i++) {\n      type = a[i].type || defaultEdgeType;\n      k = (type && sigma.webgl.edges[type]) ? type : 'def';\n\n      if (!this.edgeFloatArrays[k])\n        this.edgeFloatArrays[k] = {\n          edges: []\n        };\n\n      this.edgeFloatArrays[k].edges.push(a[i]);\n    }\n\n    for (a = graph.nodes(), i = 0, l = a.length; i < l; i++) {\n      type = a[i].type || defaultNodeType;\n      k = (type && sigma.webgl.nodes[type]) ? type : 'def';\n\n      if (!this.nodeFloatArrays[k])\n        this.nodeFloatArrays[k] = {\n          nodes: []\n        };\n\n      this.nodeFloatArrays[k].nodes.push(a[i]);\n    }\n\n    // Push edges:\n    for (k in this.edgeFloatArrays) {\n      renderer = sigma.webgl.edges[k];\n      a = this.edgeFloatArrays[k].edges;\n\n      // Creating the necessary arrays\n      this.edgeFloatArrays[k].array = new Float32Array(\n        a.length * renderer.POINTS * renderer.ATTRIBUTES\n      );\n\n      for (i = 0, l = a.length; i < l; i++) {\n\n        // Just check that the edge and both its extremities are visible:\n        if (\n          !a[i].hidden &&\n          !graph.nodes(a[i].source).hidden &&\n          !graph.nodes(a[i].target).hidden\n        )\n          renderer.addEdge(\n            a[i],\n            graph.nodes(a[i].source),\n            graph.nodes(a[i].target),\n            this.edgeFloatArrays[k].array,\n            i * renderer.POINTS * renderer.ATTRIBUTES,\n            options.prefix,\n            this.settings\n          );\n      }\n\n      if (typeof renderer.computeIndices === 'function')\n        this.edgeIndicesArrays[k] = renderer.computeIndices(\n          this.edgeFloatArrays[k].array\n        );\n    }\n\n    // Push nodes:\n    for (k in this.nodeFloatArrays) {\n      renderer = sigma.webgl.nodes[k];\n      a = this.nodeFloatArrays[k].nodes;\n\n      // Creating the necessary arrays\n      this.nodeFloatArrays[k].array = new Float32Array(\n        a.length * renderer.POINTS * renderer.ATTRIBUTES\n      );\n\n      for (i = 0, l = a.length; i < l; i++) {\n        if (!this.nodeFloatArrays[k].array)\n          this.nodeFloatArrays[k].array = new Float32Array(\n            a.length * renderer.POINTS * renderer.ATTRIBUTES\n          );\n\n        // Just check that the edge and both its extremities are visible:\n        if (\n          !a[i].hidden\n        )\n          renderer.addNode(\n            a[i],\n            this.nodeFloatArrays[k].array,\n            i * renderer.POINTS * renderer.ATTRIBUTES,\n            options.prefix,\n            this.settings\n          );\n      }\n    }\n\n    return this;\n  };\n\n\n\n\n  /**\n   * This method renders the graph. It basically calls each program (and\n   * generate them if they do not exist yet) to render nodes and edges, batched\n   * per renderer.\n   *\n   * As in the canvas renderer, it is possible to display edges, nodes and / or\n   * labels in batches, to make the whole thing way more scalable.\n   *\n   * @param  {?object}               params Eventually an object of options.\n   * @return {sigma.renderers.webgl}        Returns the instance itself.\n   */\n  sigma.renderers.webgl.prototype.render = function(params) {\n    var a,\n        i,\n        l,\n        k,\n        o,\n        program,\n        renderer,\n        self = this,\n        graph = this.graph,\n        nodesGl = this.contexts.nodes,\n        edgesGl = this.contexts.edges,\n        matrix = this.camera.getMatrix(),\n        options = sigma.utils.extend(params, this.options),\n        drawLabels = this.settings(options, 'drawLabels'),\n        drawEdges = this.settings(options, 'drawEdges'),\n        drawNodes = this.settings(options, 'drawNodes');\n\n    // Call the resize function:\n    this.resize(false);\n\n    // Check the 'hideEdgesOnMove' setting:\n    if (this.settings(options, 'hideEdgesOnMove'))\n      if (this.camera.isAnimated || this.camera.isMoving)\n        drawEdges = false;\n\n    // Clear canvases:\n    this.clear();\n\n    // Translate matrix to [width/2, height/2]:\n    matrix = sigma.utils.matrices.multiply(\n      matrix,\n      sigma.utils.matrices.translation(this.width / 2, this.height / 2)\n    );\n\n    // Kill running jobs:\n    for (k in this.jobs)\n      if (conrad.hasJob(k))\n        conrad.killJob(k);\n\n    if (drawEdges) {\n      if (this.settings(options, 'batchEdgesDrawing'))\n        (function() {\n          var a,\n              k,\n              i,\n              id,\n              job,\n              arr,\n              end,\n              start,\n              indices,\n              renderer,\n              batchSize,\n              currentProgram;\n\n          id = 'edges_' + this.conradId;\n          batchSize = this.settings(options, 'webglEdgesBatchSize');\n          a = Object.keys(this.edgeFloatArrays);\n\n          if (!a.length)\n            return;\n          i = 0;\n          renderer = sigma.webgl.edges[a[i]];\n          arr = this.edgeFloatArrays[a[i]].array;\n          indices = this.edgeIndicesArrays[a[i]];\n          start = 0;\n          end = Math.min(\n            start + batchSize * renderer.POINTS,\n            arr.length / renderer.ATTRIBUTES\n          );\n\n          job = function() {\n            // Check program:\n            if (!this.edgePrograms[a[i]])\n              this.edgePrograms[a[i]] = renderer.initProgram(edgesGl);\n\n            if (start < end) {\n              edgesGl.useProgram(this.edgePrograms[a[i]]);\n              renderer.render(\n                edgesGl,\n                this.edgePrograms[a[i]],\n                arr,\n                {\n                  settings: this.settings,\n                  matrix: matrix,\n                  width: this.width,\n                  height: this.height,\n                  ratio: this.camera.ratio,\n                  scalingRatio: this.settings(\n                    options,\n                    'webglOversamplingRatio'\n                  ),\n                  start: start,\n                  count: end - start,\n                  indicesData: indices\n                }\n              );\n            }\n\n            // Catch job's end:\n            if (\n              end >= arr.length / renderer.ATTRIBUTES &&\n              i === a.length - 1\n            ) {\n              delete this.jobs[id];\n              return false;\n            }\n\n            if (end >= arr.length / renderer.ATTRIBUTES) {\n              i++;\n              arr = this.edgeFloatArrays[a[i]].array;\n              renderer = sigma.webgl.edges[a[i]];\n              start = 0;\n              end = Math.min(\n                start + batchSize * renderer.POINTS,\n                arr.length / renderer.ATTRIBUTES\n              );\n            } else {\n              start = end;\n              end = Math.min(\n                start + batchSize * renderer.POINTS,\n                arr.length / renderer.ATTRIBUTES\n              );\n            }\n\n            return true;\n          };\n\n          this.jobs[id] = job;\n          conrad.addJob(id, job.bind(this));\n        }).call(this);\n      else {\n        for (k in this.edgeFloatArrays) {\n          renderer = sigma.webgl.edges[k];\n\n          // Check program:\n          if (!this.edgePrograms[k])\n            this.edgePrograms[k] = renderer.initProgram(edgesGl);\n\n          // Render\n          if (this.edgeFloatArrays[k]) {\n            edgesGl.useProgram(this.edgePrograms[k]);\n            renderer.render(\n              edgesGl,\n              this.edgePrograms[k],\n              this.edgeFloatArrays[k].array,\n              {\n                settings: this.settings,\n                matrix: matrix,\n                width: this.width,\n                height: this.height,\n                ratio: this.camera.ratio,\n                scalingRatio: this.settings(options, 'webglOversamplingRatio'),\n                indicesData: this.edgeIndicesArrays[k]\n              }\n            );\n          }\n        }\n      }\n    }\n\n    if (drawNodes) {\n      // Enable blending:\n      nodesGl.blendFunc(nodesGl.SRC_ALPHA, nodesGl.ONE_MINUS_SRC_ALPHA);\n      nodesGl.enable(nodesGl.BLEND);\n\n      for (k in this.nodeFloatArrays) {\n        renderer = sigma.webgl.nodes[k];\n\n        // Check program:\n        if (!this.nodePrograms[k])\n          this.nodePrograms[k] = renderer.initProgram(nodesGl);\n\n        // Render\n        if (this.nodeFloatArrays[k]) {\n          nodesGl.useProgram(this.nodePrograms[k]);\n          renderer.render(\n            nodesGl,\n            this.nodePrograms[k],\n            this.nodeFloatArrays[k].array,\n            {\n              settings: this.settings,\n              matrix: matrix,\n              width: this.width,\n              height: this.height,\n              ratio: this.camera.ratio,\n              scalingRatio: this.settings(options, 'webglOversamplingRatio')\n            }\n          );\n        }\n      }\n    }\n\n    if (drawLabels) {\n      a = this.camera.quadtree.area(\n        this.camera.getRectangle(this.width, this.height)\n      );\n\n      // Apply camera view to these nodes:\n      this.camera.applyView(\n        undefined,\n        undefined,\n        {\n          nodes: a,\n          edges: [],\n          width: this.width,\n          height: this.height\n        }\n      );\n\n      o = function(key) {\n        return self.settings({\n          prefix: self.camera.prefix\n        }, key);\n      };\n\n      for (i = 0, l = a.length; i < l; i++)\n        if (!a[i].hidden)\n          (\n            sigma.canvas.labels[\n              a[i].type ||\n              this.settings(options, 'defaultNodeType')\n            ] || sigma.canvas.labels.def\n          )(a[i], this.contexts.labels, o);\n    }\n\n    this.dispatchEvent('render');\n\n    return this;\n  };\n\n\n\n\n  /**\n   * This method creates a DOM element of the specified type, switches its\n   * position to \"absolute\", references it to the domElements attribute, and\n   * finally appends it to the container.\n   *\n   * @param  {string}   tag   The label tag.\n   * @param  {string}   id    The id of the element (to store it in\n   *                          \"domElements\").\n   * @param  {?boolean} webgl Will init the WebGL context if true.\n   */\n  sigma.renderers.webgl.prototype.initDOM = function(tag, id, webgl) {\n    var gl,\n        dom = document.createElement(tag),\n        self = this;\n\n    dom.style.position = 'absolute';\n    dom.setAttribute('class', 'sigma-' + id);\n\n    this.domElements[id] = dom;\n    this.container.appendChild(dom);\n\n    if (tag.toLowerCase() === 'canvas') {\n      this.contexts[id] = dom.getContext(webgl ? 'experimental-webgl' : '2d', {\n        preserveDrawingBuffer: true\n      });\n\n      // Adding webgl context loss listeners\n      if (webgl) {\n        dom.addEventListener('webglcontextlost', function(e) {\n          e.preventDefault();\n        }, false);\n\n        dom.addEventListener('webglcontextrestored', function(e) {\n          self.render();\n        }, false);\n      }\n    }\n  };\n\n  /**\n   * This method resizes each DOM elements in the container and stores the new\n   * dimensions. Then, it renders the graph.\n   *\n   * @param  {?number}               width  The new width of the container.\n   * @param  {?number}               height The new height of the container.\n   * @return {sigma.renderers.webgl}        Returns the instance itself.\n   */\n  sigma.renderers.webgl.prototype.resize = function(w, h) {\n    var k,\n        oldWidth = this.width,\n        oldHeight = this.height,\n        pixelRatio = sigma.utils.getPixelRatio();\n\n    if (w !== undefined && h !== undefined) {\n      this.width = w;\n      this.height = h;\n    } else {\n      this.width = this.container.offsetWidth;\n      this.height = this.container.offsetHeight;\n\n      w = this.width;\n      h = this.height;\n    }\n\n    if (oldWidth !== this.width || oldHeight !== this.height) {\n      for (k in this.domElements) {\n        this.domElements[k].style.width = w + 'px';\n        this.domElements[k].style.height = h + 'px';\n\n        if (this.domElements[k].tagName.toLowerCase() === 'canvas') {\n          // If simple 2D canvas:\n          if (this.contexts[k] && this.contexts[k].scale) {\n            this.domElements[k].setAttribute('width', (w * pixelRatio) + 'px');\n            this.domElements[k].setAttribute('height', (h * pixelRatio) + 'px');\n\n            if (pixelRatio !== 1)\n              this.contexts[k].scale(pixelRatio, pixelRatio);\n          } else {\n            this.domElements[k].setAttribute(\n              'width',\n              (w * this.settings('webglOversamplingRatio')) + 'px'\n            );\n            this.domElements[k].setAttribute(\n              'height',\n              (h * this.settings('webglOversamplingRatio')) + 'px'\n            );\n          }\n        }\n      }\n    }\n\n    // Scale:\n    for (k in this.contexts)\n      if (this.contexts[k] && this.contexts[k].viewport)\n        this.contexts[k].viewport(\n          0,\n          0,\n          this.width * this.settings('webglOversamplingRatio'),\n          this.height * this.settings('webglOversamplingRatio')\n        );\n\n    return this;\n  };\n\n  /**\n   * This method clears each canvas.\n   *\n   * @return {sigma.renderers.webgl} Returns the instance itself.\n   */\n  sigma.renderers.webgl.prototype.clear = function() {\n    this.contexts.labels.clearRect(0, 0, this.width, this.height);\n    this.contexts.nodes.clear(this.contexts.nodes.COLOR_BUFFER_BIT);\n    this.contexts.edges.clear(this.contexts.edges.COLOR_BUFFER_BIT);\n\n    return this;\n  };\n\n  /**\n   * This method kills contexts and other attributes.\n   */\n  sigma.renderers.webgl.prototype.kill = function() {\n    var k,\n        captor;\n\n    // Kill captors:\n    while ((captor = this.captors.pop()))\n      captor.kill();\n    delete this.captors;\n\n    // Kill contexts:\n    for (k in this.domElements) {\n      this.domElements[k].parentNode.removeChild(this.domElements[k]);\n      delete this.domElements[k];\n      delete this.contexts[k];\n    }\n    delete this.domElements;\n    delete this.contexts;\n  };\n\n\n\n\n  /**\n   * The object \"sigma.webgl.nodes\" contains the different WebGL node\n   * renderers. The default one draw nodes as discs. Here are the attributes\n   * any node renderer must have:\n   *\n   * {number}   POINTS      The number of points required to draw a node.\n   * {number}   ATTRIBUTES  The number of attributes needed to draw one point.\n   * {function} addNode     A function that adds a node to the data stack that\n   *                        will be given to the buffer. Here is the arguments:\n   *                        > {object}       node\n   *                        > {number}       index   The node index in the\n   *                                                 nodes array.\n   *                        > {Float32Array} data    The stack.\n   *                        > {object}       options Some options.\n   * {function} render      The function that will effectively render the nodes\n   *                        into the buffer.\n   *                        > {WebGLRenderingContext} gl\n   *                        > {WebGLProgram}          program\n   *                        > {Float32Array} data    The stack to give to the\n   *                                                 buffer.\n   *                        > {object}       params  An object containing some\n   *                                                 options, like width,\n   *                                                 height, the camera ratio.\n   * {function} initProgram The function that will initiate the program, with\n   *                        the relevant shaders and parameters. It must return\n   *                        the newly created program.\n   *\n   * Check sigma.webgl.nodes.def or sigma.webgl.nodes.fast to see how it\n   * works more precisely.\n   */\n  sigma.utils.pkg('sigma.webgl.nodes');\n\n\n\n\n  /**\n   * The object \"sigma.webgl.edges\" contains the different WebGL edge\n   * renderers. The default one draw edges as direct lines. Here are the\n   * attributes any edge renderer must have:\n   *\n   * {number}   POINTS      The number of points required to draw an edge.\n   * {number}   ATTRIBUTES  The number of attributes needed to draw one point.\n   * {function} addEdge     A function that adds an edge to the data stack that\n   *                        will be given to the buffer. Here is the arguments:\n   *                        > {object}       edge\n   *                        > {object}       source\n   *                        > {object}       target\n   *                        > {Float32Array} data    The stack.\n   *                        > {object}       options Some options.\n   * {function} render      The function that will effectively render the edges\n   *                        into the buffer.\n   *                        > {WebGLRenderingContext} gl\n   *                        > {WebGLProgram}          program\n   *                        > {Float32Array} data    The stack to give to the\n   *                                                 buffer.\n   *                        > {object}       params  An object containing some\n   *                                                 options, like width,\n   *                                                 height, the camera ratio.\n   * {function} initProgram The function that will initiate the program, with\n   *                        the relevant shaders and parameters. It must return\n   *                        the newly created program.\n   *\n   * Check sigma.webgl.edges.def or sigma.webgl.edges.fast to see how it\n   * works more precisely.\n   */\n  sigma.utils.pkg('sigma.webgl.edges');\n\n\n\n\n  /**\n   * The object \"sigma.canvas.labels\" contains the different\n   * label renderers for the WebGL renderer. Since displaying texts in WebGL is\n   * definitely painful and since there a way less labels to display than nodes\n   * or edges, the default renderer simply renders them in a canvas.\n   *\n   * A labels renderer is a simple function, taking as arguments the related\n   * node, the renderer and a settings function.\n   */\n  sigma.utils.pkg('sigma.canvas.labels');\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  if (typeof conrad === 'undefined')\n    throw 'conrad is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.renderers');\n\n  /**\n   * This function is the constructor of the svg sigma's renderer.\n   *\n   * @param  {sigma.classes.graph}            graph    The graph to render.\n   * @param  {sigma.classes.camera}           camera   The camera.\n   * @param  {configurable}           settings The sigma instance settings\n   *                                           function.\n   * @param  {object}                 object   The options object.\n   * @return {sigma.renderers.svg}             The renderer instance.\n   */\n  sigma.renderers.svg = function(graph, camera, settings, options) {\n    if (typeof options !== 'object')\n      throw 'sigma.renderers.svg: Wrong arguments.';\n\n    if (!(options.container instanceof HTMLElement))\n      throw 'Container not found.';\n\n    var i,\n        l,\n        a,\n        fn,\n        self = this;\n\n    sigma.classes.dispatcher.extend(this);\n\n    // Initialize main attributes:\n    this.graph = graph;\n    this.camera = camera;\n    this.domElements = {\n      graph: null,\n      groups: {},\n      nodes: {},\n      edges: {},\n      labels: {},\n      hovers: {}\n    };\n    this.measurementCanvas = null;\n    this.options = options;\n    this.container = this.options.container;\n    this.settings = (\n        typeof options.settings === 'object' &&\n        options.settings\n      ) ?\n        settings.embedObjects(options.settings) :\n        settings;\n\n    // Is the renderer meant to be freestyle?\n    this.settings('freeStyle', !!this.options.freeStyle);\n\n    // SVG xmlns\n    this.settings('xmlns', 'http://www.w3.org/2000/svg');\n\n    // Indexes:\n    this.nodesOnScreen = [];\n    this.edgesOnScreen = [];\n\n    // Find the prefix:\n    this.options.prefix = 'renderer' + sigma.utils.id() + ':';\n\n    // Initialize the DOM elements\n    this.initDOM('svg');\n\n    // Initialize captors:\n    this.captors = [];\n    a = this.options.captors || [sigma.captors.mouse, sigma.captors.touch];\n    for (i = 0, l = a.length; i < l; i++) {\n      fn = typeof a[i] === 'function' ? a[i] : sigma.captors[a[i]];\n      this.captors.push(\n        new fn(\n          this.domElements.graph,\n          this.camera,\n          this.settings\n        )\n      );\n    }\n\n    // Bind resize:\n    window.addEventListener('resize', function() {\n      self.resize();\n    });\n\n    // Deal with sigma events:\n    // TODO: keep an option to override the DOM events?\n    sigma.misc.bindDOMEvents.call(this, this.domElements.graph);\n    this.bindHovers(this.options.prefix);\n\n    // Resize\n    this.resize(false);\n  };\n\n  /**\n   * This method renders the graph on the svg scene.\n   *\n   * @param  {?object}                options Eventually an object of options.\n   * @return {sigma.renderers.svg}            Returns the instance itself.\n   */\n  sigma.renderers.svg.prototype.render = function(options) {\n    options = options || {};\n\n    var a,\n        i,\n        k,\n        e,\n        l,\n        o,\n        source,\n        target,\n        start,\n        edges,\n        renderers,\n        subrenderers,\n        index = {},\n        graph = this.graph,\n        nodes = this.graph.nodes,\n        prefix = this.options.prefix || '',\n        drawEdges = this.settings(options, 'drawEdges'),\n        drawNodes = this.settings(options, 'drawNodes'),\n        drawLabels = this.settings(options, 'drawLabels'),\n        embedSettings = this.settings.embedObjects(options, {\n          prefix: this.options.prefix,\n          forceLabels: this.options.forceLabels\n        });\n\n    // Check the 'hideEdgesOnMove' setting:\n    if (this.settings(options, 'hideEdgesOnMove'))\n      if (this.camera.isAnimated || this.camera.isMoving)\n        drawEdges = false;\n\n    // Apply the camera's view:\n    this.camera.applyView(\n      undefined,\n      this.options.prefix,\n      {\n        width: this.width,\n        height: this.height\n      }\n    );\n\n    // Hiding everything\n    // TODO: find a more sensible way to perform this operation\n    this.hideDOMElements(this.domElements.nodes);\n    this.hideDOMElements(this.domElements.edges);\n    this.hideDOMElements(this.domElements.labels);\n\n    // Find which nodes are on screen\n    this.edgesOnScreen = [];\n    this.nodesOnScreen = this.camera.quadtree.area(\n      this.camera.getRectangle(this.width, this.height)\n    );\n\n    // Node index\n    for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++)\n      index[a[i].id] = a[i];\n\n    // Find which edges are on screen\n    for (a = graph.edges(), i = 0, l = a.length; i < l; i++) {\n      o = a[i];\n      if (\n        (index[o.source] || index[o.target]) &&\n        (!o.hidden && !nodes(o.source).hidden && !nodes(o.target).hidden)\n      )\n        this.edgesOnScreen.push(o);\n    }\n\n    // Display nodes\n    //---------------\n    renderers = sigma.svg.nodes;\n    subrenderers = sigma.svg.labels;\n\n    //-- First we create the nodes which are not already created\n    if (drawNodes)\n      for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++) {\n        if (!a[i].hidden && !this.domElements.nodes[a[i].id]) {\n\n          // Node\n          e = (renderers[a[i].type] || renderers.def).create(\n            a[i],\n            embedSettings\n          );\n\n          this.domElements.nodes[a[i].id] = e;\n          this.domElements.groups.nodes.appendChild(e);\n\n          // Label\n          e = (subrenderers[a[i].type] || subrenderers.def).create(\n            a[i],\n            embedSettings\n          );\n\n          this.domElements.labels[a[i].id] = e;\n          this.domElements.groups.labels.appendChild(e);\n        }\n      }\n\n    //-- Second we update the nodes\n    if (drawNodes)\n      for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++) {\n\n        if (a[i].hidden)\n          continue;\n\n        // Node\n        (renderers[a[i].type] || renderers.def).update(\n          a[i],\n          this.domElements.nodes[a[i].id],\n          embedSettings\n        );\n\n        // Label\n        (subrenderers[a[i].type] || subrenderers.def).update(\n          a[i],\n          this.domElements.labels[a[i].id],\n          embedSettings\n        );\n      }\n\n    // Display edges\n    //---------------\n    renderers = sigma.svg.edges;\n\n    //-- First we create the edges which are not already created\n    if (drawEdges)\n      for (a = this.edgesOnScreen, i = 0, l = a.length; i < l; i++) {\n        if (!this.domElements.edges[a[i].id]) {\n          source = nodes(a[i].source);\n          target = nodes(a[i].target);\n\n          e = (renderers[a[i].type] || renderers.def).create(\n            a[i],\n            source,\n            target,\n            embedSettings\n          );\n\n          this.domElements.edges[a[i].id] = e;\n          this.domElements.groups.edges.appendChild(e);\n        }\n       }\n\n    //-- Second we update the edges\n    if (drawEdges)\n      for (a = this.edgesOnScreen, i = 0, l = a.length; i < l; i++) {\n        source = nodes(a[i].source);\n        target = nodes(a[i].target);\n\n        (renderers[a[i].type] || renderers.def).update(\n          a[i],\n          this.domElements.edges[a[i].id],\n          source,\n          target,\n          embedSettings\n        );\n       }\n\n    this.dispatchEvent('render');\n\n    return this;\n  };\n\n  /**\n   * This method creates a DOM element of the specified type, switches its\n   * position to \"absolute\", references it to the domElements attribute, and\n   * finally appends it to the container.\n   *\n   * @param  {string} tag The label tag.\n   * @param  {string} id  The id of the element (to store it in \"domElements\").\n   */\n  sigma.renderers.svg.prototype.initDOM = function(tag) {\n    var dom = document.createElementNS(this.settings('xmlns'), tag),\n        c = this.settings('classPrefix'),\n        g,\n        l,\n        i;\n\n    dom.style.position = 'absolute';\n    dom.setAttribute('class', c + '-svg');\n\n    // Setting SVG namespace\n    dom.setAttribute('xmlns', this.settings('xmlns'));\n    dom.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n    dom.setAttribute('version', '1.1');\n\n    // Creating the measurement canvas\n    var canvas = document.createElement('canvas');\n    canvas.setAttribute('class', c + '-measurement-canvas');\n\n    // Appending elements\n    this.domElements.graph = this.container.appendChild(dom);\n\n    // Creating groups\n    var groups = ['edges', 'nodes', 'labels', 'hovers'];\n    for (i = 0, l = groups.length; i < l; i++) {\n      g = document.createElementNS(this.settings('xmlns'), 'g');\n\n      g.setAttributeNS(null, 'id', c + '-group-' + groups[i]);\n      g.setAttributeNS(null, 'class', c + '-group');\n\n      this.domElements.groups[groups[i]] =\n        this.domElements.graph.appendChild(g);\n    }\n\n    // Appending measurement canvas\n    this.container.appendChild(canvas);\n    this.measurementCanvas = canvas.getContext('2d');\n  };\n\n  /**\n   * This method hides a batch of SVG DOM elements.\n   *\n   * @param  {array}                  elements  An array of elements to hide.\n   * @param  {object}                 renderer  The renderer to use.\n   * @return {sigma.renderers.svg}              Returns the instance itself.\n   */\n  sigma.renderers.svg.prototype.hideDOMElements = function(elements) {\n    var o,\n        i;\n\n    for (i in elements) {\n      o = elements[i];\n      sigma.svg.utils.hide(o);\n    }\n\n    return this;\n  };\n\n  /**\n   * This method binds the hover events to the renderer.\n   *\n   * @param  {string} prefix The renderer prefix.\n   */\n  // TODO: add option about whether to display hovers or not\n  sigma.renderers.svg.prototype.bindHovers = function(prefix) {\n    var renderers = sigma.svg.hovers,\n        self = this,\n        hoveredNode;\n\n    function overNode(e) {\n      var node = e.data.node,\n          embedSettings = self.settings.embedObjects({\n            prefix: prefix\n          });\n\n      if (!embedSettings('enableHovering'))\n        return;\n\n      var hover = (renderers[node.type] || renderers.def).create(\n        node,\n        self.domElements.nodes[node.id],\n        self.measurementCanvas,\n        embedSettings\n      );\n\n      self.domElements.hovers[node.id] = hover;\n\n      // Inserting the hover in the dom\n      self.domElements.groups.hovers.appendChild(hover);\n      hoveredNode = node;\n    }\n\n    function outNode(e) {\n      var node = e.data.node,\n          embedSettings = self.settings.embedObjects({\n            prefix: prefix\n          });\n\n      if (!embedSettings('enableHovering'))\n        return;\n\n      // Deleting element\n      self.domElements.groups.hovers.removeChild(\n        self.domElements.hovers[node.id]\n      );\n      hoveredNode = null;\n      delete self.domElements.hovers[node.id];\n\n      // Reinstate\n      self.domElements.groups.nodes.appendChild(\n        self.domElements.nodes[node.id]\n      );\n    }\n\n    // OPTIMIZE: perform a real update rather than a deletion\n    function update() {\n      if (!hoveredNode)\n        return;\n\n      var embedSettings = self.settings.embedObjects({\n            prefix: prefix\n          });\n\n      // Deleting element before update\n      self.domElements.groups.hovers.removeChild(\n        self.domElements.hovers[hoveredNode.id]\n      );\n      delete self.domElements.hovers[hoveredNode.id];\n\n      var hover = (renderers[hoveredNode.type] || renderers.def).create(\n        hoveredNode,\n        self.domElements.nodes[hoveredNode.id],\n        self.measurementCanvas,\n        embedSettings\n      );\n\n      self.domElements.hovers[hoveredNode.id] = hover;\n\n      // Inserting the hover in the dom\n      self.domElements.groups.hovers.appendChild(hover);\n    }\n\n    // Binding events\n    this.bind('overNode', overNode);\n    this.bind('outNode', outNode);\n\n    // Update on render\n    this.bind('render', update);\n  };\n\n  /**\n   * This method resizes each DOM elements in the container and stores the new\n   * dimensions. Then, it renders the graph.\n   *\n   * @param  {?number}                width  The new width of the container.\n   * @param  {?number}                height The new height of the container.\n   * @return {sigma.renderers.svg}           Returns the instance itself.\n   */\n  sigma.renderers.svg.prototype.resize = function(w, h) {\n    var oldWidth = this.width,\n        oldHeight = this.height,\n        pixelRatio = 1;\n\n    if (w !== undefined && h !== undefined) {\n      this.width = w;\n      this.height = h;\n    } else {\n      this.width = this.container.offsetWidth;\n      this.height = this.container.offsetHeight;\n\n      w = this.width;\n      h = this.height;\n    }\n\n    if (oldWidth !== this.width || oldHeight !== this.height) {\n      this.domElements.graph.style.width = w + 'px';\n      this.domElements.graph.style.height = h + 'px';\n\n      if (this.domElements.graph.tagName.toLowerCase() === 'svg') {\n        this.domElements.graph.setAttribute('width', (w * pixelRatio));\n        this.domElements.graph.setAttribute('height', (h * pixelRatio));\n      }\n    }\n\n    return this;\n  };\n\n\n  /**\n   * The labels, nodes and edges renderers are stored in the three following\n   * objects. When an element is drawn, its type will be checked and if a\n   * renderer with the same name exists, it will be used. If not found, the\n   * default renderer will be used instead.\n   *\n   * They are stored in different files, in the \"./svg\" folder.\n   */\n  sigma.utils.pkg('sigma.svg.nodes');\n  sigma.utils.pkg('sigma.svg.edges');\n  sigma.utils.pkg('sigma.svg.labels');\n}).call(this);\n\n;(function(global) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.renderers');\n\n  // Check if WebGL is enabled:\n  var canvas,\n      webgl = !!global.WebGLRenderingContext;\n  if (webgl) {\n    canvas = document.createElement('canvas');\n    try {\n      webgl = !!(\n        canvas.getContext('webgl') ||\n        canvas.getContext('experimental-webgl')\n      );\n    } catch (e) {\n      webgl = false;\n    }\n  }\n\n  // Copy the good renderer:\n  sigma.renderers.def = webgl ?\n    sigma.renderers.webgl :\n    sigma.renderers.canvas;\n})(this);\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.webgl.nodes');\n\n  /**\n   * This node renderer will display nodes as discs, shaped in triangles with\n   * the gl.TRIANGLES display mode. So, to be more precise, to draw one node,\n   * it will store three times the center of node, with the color and the size,\n   * and an angle indicating which \"corner\" of the triangle to draw.\n   *\n   * The fragment shader does not deal with anti-aliasing, so make sure that\n   * you deal with it somewhere else in the code (by default, the WebGL\n   * renderer will oversample the rendering through the webglOversamplingRatio\n   * value).\n   */\n  sigma.webgl.nodes.def = {\n    POINTS: 3,\n    ATTRIBUTES: 5,\n    addNode: function(node, data, i, prefix, settings) {\n      var color = sigma.utils.floatColor(\n        node.color || settings('defaultNodeColor')\n      );\n\n      data[i++] = node[prefix + 'x'];\n      data[i++] = node[prefix + 'y'];\n      data[i++] = node[prefix + 'size'];\n      data[i++] = color;\n      data[i++] = 0;\n\n      data[i++] = node[prefix + 'x'];\n      data[i++] = node[prefix + 'y'];\n      data[i++] = node[prefix + 'size'];\n      data[i++] = color;\n      data[i++] = 2 * Math.PI / 3;\n\n      data[i++] = node[prefix + 'x'];\n      data[i++] = node[prefix + 'y'];\n      data[i++] = node[prefix + 'size'];\n      data[i++] = color;\n      data[i++] = 4 * Math.PI / 3;\n    },\n    render: function(gl, program, data, params) {\n      var buffer;\n\n      // Define attributes:\n      var positionLocation =\n            gl.getAttribLocation(program, 'a_position'),\n          sizeLocation =\n            gl.getAttribLocation(program, 'a_size'),\n          colorLocation =\n            gl.getAttribLocation(program, 'a_color'),\n          angleLocation =\n            gl.getAttribLocation(program, 'a_angle'),\n          resolutionLocation =\n            gl.getUniformLocation(program, 'u_resolution'),\n          matrixLocation =\n            gl.getUniformLocation(program, 'u_matrix'),\n          ratioLocation =\n            gl.getUniformLocation(program, 'u_ratio'),\n          scaleLocation =\n            gl.getUniformLocation(program, 'u_scale');\n\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n\n      gl.uniform2f(resolutionLocation, params.width, params.height);\n      gl.uniform1f(\n        ratioLocation,\n        1 / Math.pow(params.ratio, params.settings('nodesPowRatio'))\n      );\n      gl.uniform1f(scaleLocation, params.scalingRatio);\n      gl.uniformMatrix3fv(matrixLocation, false, params.matrix);\n\n      gl.enableVertexAttribArray(positionLocation);\n      gl.enableVertexAttribArray(sizeLocation);\n      gl.enableVertexAttribArray(colorLocation);\n      gl.enableVertexAttribArray(angleLocation);\n\n      gl.vertexAttribPointer(\n        positionLocation,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        0\n      );\n      gl.vertexAttribPointer(\n        sizeLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        8\n      );\n      gl.vertexAttribPointer(\n        colorLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        12\n      );\n      gl.vertexAttribPointer(\n        angleLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        16\n      );\n\n      gl.drawArrays(\n        gl.TRIANGLES,\n        params.start || 0,\n        params.count || (data.length / this.ATTRIBUTES)\n      );\n    },\n    initProgram: function(gl) {\n      var vertexShader,\n          fragmentShader,\n          program;\n\n      vertexShader = sigma.utils.loadShader(\n        gl,\n        [\n          'attribute vec2 a_position;',\n          'attribute float a_size;',\n          'attribute float a_color;',\n          'attribute float a_angle;',\n\n          'uniform vec2 u_resolution;',\n          'uniform float u_ratio;',\n          'uniform float u_scale;',\n          'uniform mat3 u_matrix;',\n\n          'varying vec4 color;',\n          'varying vec2 center;',\n          'varying float radius;',\n\n          'void main() {',\n            // Multiply the point size twice:\n            'radius = a_size * u_ratio;',\n\n            // Scale from [[-1 1] [-1 1]] to the container:\n            'vec2 position = (u_matrix * vec3(a_position, 1)).xy;',\n            // 'center = (position / u_resolution * 2.0 - 1.0) * vec2(1, -1);',\n            'center = position * u_scale;',\n            'center = vec2(center.x, u_scale * u_resolution.y - center.y);',\n\n            'position = position +',\n              '2.0 * radius * vec2(cos(a_angle), sin(a_angle));',\n            'position = (position / u_resolution * 2.0 - 1.0) * vec2(1, -1);',\n\n            'radius = radius * u_scale;',\n\n            'gl_Position = vec4(position, 0, 1);',\n\n            // Extract the color:\n            'float c = a_color;',\n            'color.b = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.g = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.r = mod(c, 256.0); c = floor(c / 256.0); color /= 255.0;',\n            'color.a = 1.0;',\n          '}'\n        ].join('\\n'),\n        gl.VERTEX_SHADER\n      );\n\n      fragmentShader = sigma.utils.loadShader(\n        gl,\n        [\n          'precision mediump float;',\n\n          'varying vec4 color;',\n          'varying vec2 center;',\n          'varying float radius;',\n\n          'void main(void) {',\n            'vec4 color0 = vec4(0.0, 0.0, 0.0, 0.0);',\n\n            'vec2 m = gl_FragCoord.xy - center;',\n            'float diff = radius - sqrt(m.x * m.x + m.y * m.y);',\n\n            // Here is how we draw a disc instead of a square:\n            'if (diff > 0.0)',\n              'gl_FragColor = color;',\n            'else',\n              'gl_FragColor = color0;',\n          '}'\n        ].join('\\n'),\n        gl.FRAGMENT_SHADER\n      );\n\n      program = sigma.utils.loadProgram(gl, [vertexShader, fragmentShader]);\n\n      return program;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.webgl.nodes');\n\n  /**\n   * This node renderer will display nodes in the fastest way: Nodes are basic\n   * squares, drawn through the gl.POINTS drawing method. The size of the nodes\n   * are represented with the \"gl_PointSize\" value in the vertex shader.\n   *\n   * It is the fastest node renderer here since the buffer just takes one line\n   * to draw each node (with attributes \"x\", \"y\", \"size\" and \"color\").\n   *\n   * Nevertheless, this method has some problems, especially due to some issues\n   * with the gl.POINTS:\n   *  - First, if the center of a node is outside the scene, the point will not\n   *    be drawn, even if it should be partly on screen.\n   *  - I tried applying a fragment shader similar to the one in the default\n   *    node renderer to display them as discs, but it did not work fine on\n   *    some computers settings, filling the discs with weird gradients not\n   *    depending on the actual color.\n   */\n  sigma.webgl.nodes.fast = {\n    POINTS: 1,\n    ATTRIBUTES: 4,\n    addNode: function(node, data, i, prefix, settings) {\n      data[i++] = node[prefix + 'x'];\n      data[i++] = node[prefix + 'y'];\n      data[i++] = node[prefix + 'size'];\n      data[i++] = sigma.utils.floatColor(\n        node.color || settings('defaultNodeColor')\n      );\n    },\n    render: function(gl, program, data, params) {\n      var buffer;\n\n      // Define attributes:\n      var positionLocation =\n            gl.getAttribLocation(program, 'a_position'),\n          sizeLocation =\n            gl.getAttribLocation(program, 'a_size'),\n          colorLocation =\n            gl.getAttribLocation(program, 'a_color'),\n          resolutionLocation =\n            gl.getUniformLocation(program, 'u_resolution'),\n          matrixLocation =\n            gl.getUniformLocation(program, 'u_matrix'),\n          ratioLocation =\n            gl.getUniformLocation(program, 'u_ratio'),\n          scaleLocation =\n            gl.getUniformLocation(program, 'u_scale');\n\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n\n      gl.uniform2f(resolutionLocation, params.width, params.height);\n      gl.uniform1f(\n        ratioLocation,\n        1 / Math.pow(params.ratio, params.settings('nodesPowRatio'))\n      );\n      gl.uniform1f(scaleLocation, params.scalingRatio);\n      gl.uniformMatrix3fv(matrixLocation, false, params.matrix);\n\n      gl.enableVertexAttribArray(positionLocation);\n      gl.enableVertexAttribArray(sizeLocation);\n      gl.enableVertexAttribArray(colorLocation);\n\n      gl.vertexAttribPointer(\n        positionLocation,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        0\n      );\n      gl.vertexAttribPointer(\n        sizeLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        8\n      );\n      gl.vertexAttribPointer(\n        colorLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        12\n      );\n\n      gl.drawArrays(\n        gl.POINTS,\n        params.start || 0,\n        params.count || (data.length / this.ATTRIBUTES)\n      );\n    },\n    initProgram: function(gl) {\n      var vertexShader,\n          fragmentShader,\n          program;\n\n      vertexShader = sigma.utils.loadShader(\n        gl,\n        [\n          'attribute vec2 a_position;',\n          'attribute float a_size;',\n          'attribute float a_color;',\n\n          'uniform vec2 u_resolution;',\n          'uniform float u_ratio;',\n          'uniform float u_scale;',\n          'uniform mat3 u_matrix;',\n\n          'varying vec4 color;',\n\n          'void main() {',\n            // Scale from [[-1 1] [-1 1]] to the container:\n            'gl_Position = vec4(',\n              '((u_matrix * vec3(a_position, 1)).xy /',\n                'u_resolution * 2.0 - 1.0) * vec2(1, -1),',\n              '0,',\n              '1',\n            ');',\n\n            // Multiply the point size twice:\n            //  - x SCALING_RATIO to correct the canvas scaling\n            //  - x 2 to correct the formulae\n            'gl_PointSize = a_size * u_ratio * u_scale * 2.0;',\n\n            // Extract the color:\n            'float c = a_color;',\n            'color.b = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.g = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.r = mod(c, 256.0); c = floor(c / 256.0); color /= 255.0;',\n            'color.a = 1.0;',\n          '}'\n        ].join('\\n'),\n        gl.VERTEX_SHADER\n      );\n\n      fragmentShader = sigma.utils.loadShader(\n        gl,\n        [\n          'precision mediump float;',\n\n          'varying vec4 color;',\n\n          'void main(void) {',\n            'float border = 0.01;',\n            'float radius = 0.5;',\n\n            'vec4 color0 = vec4(0.0, 0.0, 0.0, 0.0);',\n            'vec2 m = gl_PointCoord - vec2(0.5, 0.5);',\n            'float dist = radius - sqrt(m.x * m.x + m.y * m.y);',\n\n            'float t = 0.0;',\n            'if (dist > border)',\n              't = 1.0;',\n            'else if (dist > 0.0)',\n              't = dist / border;',\n\n            'gl_FragColor = mix(color0, color, t);',\n          '}'\n        ].join('\\n'),\n        gl.FRAGMENT_SHADER\n      );\n\n      program = sigma.utils.loadProgram(gl, [vertexShader, fragmentShader]);\n\n      return program;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.webgl.edges');\n\n  /**\n   * This edge renderer will display edges as lines going from the source node\n   * to the target node. To deal with edge thicknesses, the lines are made of\n   * two triangles forming rectangles, with the gl.TRIANGLES drawing mode.\n   *\n   * It is expensive, since drawing a single edge requires 6 points, each\n   * having 7 attributes (source position, target position, thickness, color\n   * and a flag indicating which vertice of the rectangle it is).\n   */\n  sigma.webgl.edges.def = {\n    POINTS: 6,\n    ATTRIBUTES: 7,\n    addEdge: function(edge, source, target, data, i, prefix, settings) {\n      var w = (edge[prefix + 'size'] || 1) / 2,\n          x1 = source[prefix + 'x'],\n          y1 = source[prefix + 'y'],\n          x2 = target[prefix + 'x'],\n          y2 = target[prefix + 'y'],\n          color = edge.color;\n\n      if (!color)\n        switch (settings('edgeColor')) {\n          case 'source':\n            color = source.color || settings('defaultNodeColor');\n            break;\n          case 'target':\n            color = target.color || settings('defaultNodeColor');\n            break;\n          default:\n            color = settings('defaultEdgeColor');\n            break;\n        }\n\n      // Normalize color:\n      color = sigma.utils.floatColor(color);\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = 1.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = 1.0;\n      data[i++] = color;\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = 0.0;\n      data[i++] = color;\n    },\n    render: function(gl, program, data, params) {\n      var buffer;\n\n      // Define attributes:\n      var colorLocation =\n            gl.getAttribLocation(program, 'a_color'),\n          positionLocation1 =\n            gl.getAttribLocation(program, 'a_position1'),\n          positionLocation2 =\n            gl.getAttribLocation(program, 'a_position2'),\n          thicknessLocation =\n            gl.getAttribLocation(program, 'a_thickness'),\n          minusLocation =\n            gl.getAttribLocation(program, 'a_minus'),\n          resolutionLocation =\n            gl.getUniformLocation(program, 'u_resolution'),\n          matrixLocation =\n            gl.getUniformLocation(program, 'u_matrix'),\n          matrixHalfPiLocation =\n            gl.getUniformLocation(program, 'u_matrixHalfPi'),\n          matrixHalfPiMinusLocation =\n            gl.getUniformLocation(program, 'u_matrixHalfPiMinus'),\n          ratioLocation =\n            gl.getUniformLocation(program, 'u_ratio'),\n          scaleLocation =\n            gl.getUniformLocation(program, 'u_scale');\n\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\n      gl.uniform2f(resolutionLocation, params.width, params.height);\n      gl.uniform1f(\n        ratioLocation,\n        params.ratio / Math.pow(params.ratio, params.settings('edgesPowRatio'))\n      );\n      gl.uniform1f(scaleLocation, params.scalingRatio);\n      gl.uniformMatrix3fv(matrixLocation, false, params.matrix);\n      gl.uniformMatrix2fv(\n        matrixHalfPiLocation,\n        false,\n        sigma.utils.matrices.rotation(Math.PI / 2, true)\n      );\n      gl.uniformMatrix2fv(\n        matrixHalfPiMinusLocation,\n        false,\n        sigma.utils.matrices.rotation(-Math.PI / 2, true)\n      );\n\n      gl.enableVertexAttribArray(colorLocation);\n      gl.enableVertexAttribArray(positionLocation1);\n      gl.enableVertexAttribArray(positionLocation2);\n      gl.enableVertexAttribArray(thicknessLocation);\n      gl.enableVertexAttribArray(minusLocation);\n\n      gl.vertexAttribPointer(positionLocation1,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        0\n      );\n      gl.vertexAttribPointer(positionLocation2,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        8\n      );\n      gl.vertexAttribPointer(thicknessLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        16\n      );\n      gl.vertexAttribPointer(minusLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        20\n      );\n      gl.vertexAttribPointer(colorLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        24\n      );\n\n      gl.drawArrays(\n        gl.TRIANGLES,\n        params.start || 0,\n        params.count || (data.length / this.ATTRIBUTES)\n      );\n    },\n    initProgram: function(gl) {\n      var vertexShader,\n          fragmentShader,\n          program;\n\n      vertexShader = sigma.utils.loadShader(\n        gl,\n        [\n          'attribute vec2 a_position1;',\n          'attribute vec2 a_position2;',\n          'attribute float a_thickness;',\n          'attribute float a_minus;',\n          'attribute float a_color;',\n\n          'uniform vec2 u_resolution;',\n          'uniform float u_ratio;',\n          'uniform float u_scale;',\n          'uniform mat3 u_matrix;',\n          'uniform mat2 u_matrixHalfPi;',\n          'uniform mat2 u_matrixHalfPiMinus;',\n\n          'varying vec4 color;',\n\n          'void main() {',\n            // Find the good point:\n            'vec2 position = a_thickness * u_ratio *',\n              'normalize(a_position2 - a_position1);',\n\n            'mat2 matrix = a_minus * u_matrixHalfPiMinus +',\n              '(1.0 - a_minus) * u_matrixHalfPi;',\n\n            'position = matrix * position + a_position1;',\n\n            // Scale from [[-1 1] [-1 1]] to the container:\n            'gl_Position = vec4(',\n              '((u_matrix * vec3(position, 1)).xy /',\n                'u_resolution * 2.0 - 1.0) * vec2(1, -1),',\n              '0,',\n              '1',\n            ');',\n\n            // Extract the color:\n            'float c = a_color;',\n            'color.b = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.g = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.r = mod(c, 256.0); c = floor(c / 256.0); color /= 255.0;',\n            'color.a = 1.0;',\n          '}'\n        ].join('\\n'),\n        gl.VERTEX_SHADER\n      );\n\n      fragmentShader = sigma.utils.loadShader(\n        gl,\n        [\n          'precision mediump float;',\n\n          'varying vec4 color;',\n\n          'void main(void) {',\n            'gl_FragColor = color;',\n          '}'\n        ].join('\\n'),\n        gl.FRAGMENT_SHADER\n      );\n\n      program = sigma.utils.loadProgram(gl, [vertexShader, fragmentShader]);\n\n      return program;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.webgl.edges');\n\n  /**\n   * This edge renderer will display edges as lines with the gl.LINES display\n   * mode. Since this mode does not support well thickness, edges are all drawn\n   * with the same thickness (3px), independantly of the edge attributes or the\n   * zooming ratio.\n   */\n  sigma.webgl.edges.fast = {\n    POINTS: 2,\n    ATTRIBUTES: 3,\n    addEdge: function(edge, source, target, data, i, prefix, settings) {\n      var w = (edge[prefix + 'size'] || 1) / 2,\n          x1 = source[prefix + 'x'],\n          y1 = source[prefix + 'y'],\n          x2 = target[prefix + 'x'],\n          y2 = target[prefix + 'y'],\n          color = edge.color;\n\n      if (!color)\n        switch (settings('edgeColor')) {\n          case 'source':\n            color = source.color || settings('defaultNodeColor');\n            break;\n          case 'target':\n            color = target.color || settings('defaultNodeColor');\n            break;\n          default:\n            color = settings('defaultEdgeColor');\n            break;\n        }\n\n      // Normalize color:\n      color = sigma.utils.floatColor(color);\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = color;\n    },\n    render: function(gl, program, data, params) {\n      var buffer;\n\n      // Define attributes:\n      var colorLocation =\n            gl.getAttribLocation(program, 'a_color'),\n          positionLocation =\n            gl.getAttribLocation(program, 'a_position'),\n          resolutionLocation =\n            gl.getUniformLocation(program, 'u_resolution'),\n          matrixLocation =\n            gl.getUniformLocation(program, 'u_matrix');\n\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n\n      gl.uniform2f(resolutionLocation, params.width, params.height);\n      gl.uniformMatrix3fv(matrixLocation, false, params.matrix);\n\n      gl.enableVertexAttribArray(positionLocation);\n      gl.enableVertexAttribArray(colorLocation);\n\n      gl.vertexAttribPointer(positionLocation,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        0\n      );\n      gl.vertexAttribPointer(colorLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        8\n      );\n\n      gl.lineWidth(3);\n      gl.drawArrays(\n        gl.LINES,\n        params.start || 0,\n        params.count || (data.length / this.ATTRIBUTES)\n      );\n    },\n    initProgram: function(gl) {\n      var vertexShader,\n          fragmentShader,\n          program;\n\n      vertexShader = sigma.utils.loadShader(\n        gl,\n        [\n          'attribute vec2 a_position;',\n          'attribute float a_color;',\n\n          'uniform vec2 u_resolution;',\n          'uniform mat3 u_matrix;',\n\n          'varying vec4 color;',\n\n          'void main() {',\n            // Scale from [[-1 1] [-1 1]] to the container:\n            'gl_Position = vec4(',\n              '((u_matrix * vec3(a_position, 1)).xy /',\n                'u_resolution * 2.0 - 1.0) * vec2(1, -1),',\n              '0,',\n              '1',\n            ');',\n\n            // Extract the color:\n            'float c = a_color;',\n            'color.b = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.g = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.r = mod(c, 256.0); c = floor(c / 256.0); color /= 255.0;',\n            'color.a = 1.0;',\n          '}'\n        ].join('\\n'),\n        gl.VERTEX_SHADER\n      );\n\n      fragmentShader = sigma.utils.loadShader(\n        gl,\n        [\n          'precision mediump float;',\n\n          'varying vec4 color;',\n\n          'void main(void) {',\n            'gl_FragColor = color;',\n          '}'\n        ].join('\\n'),\n        gl.FRAGMENT_SHADER\n      );\n\n      program = sigma.utils.loadProgram(gl, [vertexShader, fragmentShader]);\n\n      return program;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.webgl.edges');\n\n  /**\n   * This edge renderer will display edges as arrows going from the source node\n   * to the target node. To deal with edge thicknesses, the lines are made of\n   * three triangles: two forming rectangles, with the gl.TRIANGLES drawing\n   * mode.\n   *\n   * It is expensive, since drawing a single edge requires 9 points, each\n   * having a lot of attributes.\n   */\n  sigma.webgl.edges.arrow = {\n    POINTS: 9,\n    ATTRIBUTES: 11,\n    addEdge: function(edge, source, target, data, i, prefix, settings) {\n      var w = (edge[prefix + 'size'] || 1) / 2,\n          x1 = source[prefix + 'x'],\n          y1 = source[prefix + 'y'],\n          x2 = target[prefix + 'x'],\n          y2 = target[prefix + 'y'],\n          targetSize = target[prefix + 'size'],\n          color = edge.color;\n\n      if (!color)\n        switch (settings('edgeColor')) {\n          case 'source':\n            color = source.color || settings('defaultNodeColor');\n            break;\n          case 'target':\n            color = target.color || settings('defaultNodeColor');\n            break;\n          default:\n            color = settings('defaultEdgeColor');\n            break;\n        }\n\n      // Normalize color:\n      color = sigma.utils.floatColor(color);\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 0.0;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      // Arrow head:\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 1.0;\n      data[i++] = -1.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 1.0;\n      data[i++] = 1.0;\n      data[i++] = color;\n    },\n    render: function(gl, program, data, params) {\n      var buffer;\n\n      // Define attributes:\n      var positionLocation1 =\n            gl.getAttribLocation(program, 'a_pos1'),\n          positionLocation2 =\n            gl.getAttribLocation(program, 'a_pos2'),\n          thicknessLocation =\n            gl.getAttribLocation(program, 'a_thickness'),\n          targetSizeLocation =\n            gl.getAttribLocation(program, 'a_tSize'),\n          delayLocation =\n            gl.getAttribLocation(program, 'a_delay'),\n          minusLocation =\n            gl.getAttribLocation(program, 'a_minus'),\n          headLocation =\n            gl.getAttribLocation(program, 'a_head'),\n          headPositionLocation =\n            gl.getAttribLocation(program, 'a_headPosition'),\n          colorLocation =\n            gl.getAttribLocation(program, 'a_color'),\n          resolutionLocation =\n            gl.getUniformLocation(program, 'u_resolution'),\n          matrixLocation =\n            gl.getUniformLocation(program, 'u_matrix'),\n          matrixHalfPiLocation =\n            gl.getUniformLocation(program, 'u_matrixHalfPi'),\n          matrixHalfPiMinusLocation =\n            gl.getUniformLocation(program, 'u_matrixHalfPiMinus'),\n          ratioLocation =\n            gl.getUniformLocation(program, 'u_ratio'),\n          nodeRatioLocation =\n            gl.getUniformLocation(program, 'u_nodeRatio'),\n          arrowHeadLocation =\n            gl.getUniformLocation(program, 'u_arrowHead'),\n          scaleLocation =\n            gl.getUniformLocation(program, 'u_scale');\n\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\n      gl.uniform2f(resolutionLocation, params.width, params.height);\n      gl.uniform1f(\n        ratioLocation,\n        params.ratio / Math.pow(params.ratio, params.settings('edgesPowRatio'))\n      );\n      gl.uniform1f(\n        nodeRatioLocation,\n        Math.pow(params.ratio, params.settings('nodesPowRatio')) /\n        params.ratio\n      );\n      gl.uniform1f(arrowHeadLocation, 5.0);\n      gl.uniform1f(scaleLocation, params.scalingRatio);\n      gl.uniformMatrix3fv(matrixLocation, false, params.matrix);\n      gl.uniformMatrix2fv(\n        matrixHalfPiLocation,\n        false,\n        sigma.utils.matrices.rotation(Math.PI / 2, true)\n      );\n      gl.uniformMatrix2fv(\n        matrixHalfPiMinusLocation,\n        false,\n        sigma.utils.matrices.rotation(-Math.PI / 2, true)\n      );\n\n      gl.enableVertexAttribArray(positionLocation1);\n      gl.enableVertexAttribArray(positionLocation2);\n      gl.enableVertexAttribArray(thicknessLocation);\n      gl.enableVertexAttribArray(targetSizeLocation);\n      gl.enableVertexAttribArray(delayLocation);\n      gl.enableVertexAttribArray(minusLocation);\n      gl.enableVertexAttribArray(headLocation);\n      gl.enableVertexAttribArray(headPositionLocation);\n      gl.enableVertexAttribArray(colorLocation);\n\n      gl.vertexAttribPointer(positionLocation1,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        0\n      );\n      gl.vertexAttribPointer(positionLocation2,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        8\n      );\n      gl.vertexAttribPointer(thicknessLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        16\n      );\n      gl.vertexAttribPointer(targetSizeLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        20\n      );\n      gl.vertexAttribPointer(delayLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        24\n      );\n      gl.vertexAttribPointer(minusLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        28\n      );\n      gl.vertexAttribPointer(headLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        32\n      );\n      gl.vertexAttribPointer(headPositionLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        36\n      );\n      gl.vertexAttribPointer(colorLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        40\n      );\n\n      gl.drawArrays(\n        gl.TRIANGLES,\n        params.start || 0,\n        params.count || (data.length / this.ATTRIBUTES)\n      );\n    },\n    initProgram: function(gl) {\n      var vertexShader,\n          fragmentShader,\n          program;\n\n      vertexShader = sigma.utils.loadShader(\n        gl,\n        [\n          'attribute vec2 a_pos1;',\n          'attribute vec2 a_pos2;',\n          'attribute float a_thickness;',\n          'attribute float a_tSize;',\n          'attribute float a_delay;',\n          'attribute float a_minus;',\n          'attribute float a_head;',\n          'attribute float a_headPosition;',\n          'attribute float a_color;',\n\n          'uniform vec2 u_resolution;',\n          'uniform float u_ratio;',\n          'uniform float u_nodeRatio;',\n          'uniform float u_arrowHead;',\n          'uniform float u_scale;',\n          'uniform mat3 u_matrix;',\n          'uniform mat2 u_matrixHalfPi;',\n          'uniform mat2 u_matrixHalfPiMinus;',\n\n          'varying vec4 color;',\n\n          'void main() {',\n            // Find the good point:\n            'vec2 pos = normalize(a_pos2 - a_pos1);',\n\n            'mat2 matrix = (1.0 - a_head) *',\n              '(',\n                'a_minus * u_matrixHalfPiMinus +',\n                '(1.0 - a_minus) * u_matrixHalfPi',\n              ') + a_head * (',\n                'a_headPosition * u_matrixHalfPiMinus * 0.6 +',\n                '(a_headPosition * a_headPosition - 1.0) * mat2(1.0)',\n              ');',\n\n            'pos = a_pos1 + (',\n              // Deal with body:\n              '(1.0 - a_head) * a_thickness * u_ratio * matrix * pos +',\n              // Deal with head:\n              'a_head * u_arrowHead * a_thickness * u_ratio * matrix * pos +',\n              // Deal with delay:\n              'a_delay * pos * (',\n                'a_tSize / u_nodeRatio +',\n                'u_arrowHead * a_thickness * u_ratio',\n              ')',\n            ');',\n\n            // Scale from [[-1 1] [-1 1]] to the container:\n            'gl_Position = vec4(',\n              '((u_matrix * vec3(pos, 1)).xy /',\n                'u_resolution * 2.0 - 1.0) * vec2(1, -1),',\n              '0,',\n              '1',\n            ');',\n\n            // Extract the color:\n            'float c = a_color;',\n            'color.b = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.g = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.r = mod(c, 256.0); c = floor(c / 256.0); color /= 255.0;',\n            'color.a = 1.0;',\n          '}'\n        ].join('\\n'),\n        gl.VERTEX_SHADER\n      );\n\n      fragmentShader = sigma.utils.loadShader(\n        gl,\n        [\n          'precision mediump float;',\n\n          'varying vec4 color;',\n\n          'void main(void) {',\n            'gl_FragColor = color;',\n          '}'\n        ].join('\\n'),\n        gl.FRAGMENT_SHADER\n      );\n\n      program = sigma.utils.loadProgram(gl, [vertexShader, fragmentShader]);\n\n      return program;\n    }\n  };\n})();\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.canvas.labels');\n\n  /**\n   * This label renderer will just display the label on the right of the node.\n   *\n   * @param  {object}                   node     The node object.\n   * @param  {CanvasRenderingContext2D} context  The canvas context.\n   * @param  {configurable}             settings The settings function.\n   */\n  sigma.canvas.labels.def = function(node, context, settings) {\n    var fontSize,\n        prefix = settings('prefix') || '',\n        size = node[prefix + 'size'];\n\n    if (size < settings('labelThreshold'))\n      return;\n\n    if (!node.label || typeof node.label !== 'string')\n      return;\n\n    fontSize = (settings('labelSize') === 'fixed') ?\n      settings('defaultLabelSize') :\n      settings('labelSizeRatio') * size;\n\n    context.font = (settings('fontStyle') ? settings('fontStyle') + ' ' : '') +\n      fontSize + 'px ' + settings('font');\n    context.fillStyle = (settings('labelColor') === 'node') ?\n      (node.color || settings('defaultNodeColor')) :\n      settings('defaultLabelColor');\n\n    context.fillText(\n      node.label,\n      Math.round(node[prefix + 'x'] + size + 3),\n      Math.round(node[prefix + 'y'] + fontSize / 3)\n    );\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.canvas.hovers');\n\n  /**\n   * This hover renderer will basically display the label with a background.\n   *\n   * @param  {object}                   node     The node object.\n   * @param  {CanvasRenderingContext2D} context  The canvas context.\n   * @param  {configurable}             settings The settings function.\n   */\n  sigma.canvas.hovers.def = function(node, context, settings) {\n    var x,\n        y,\n        w,\n        h,\n        e,\n        fontStyle = settings('hoverFontStyle') || settings('fontStyle'),\n        prefix = settings('prefix') || '',\n        size = node[prefix + 'size'],\n        fontSize = (settings('labelSize') === 'fixed') ?\n          settings('defaultLabelSize') :\n          settings('labelSizeRatio') * size;\n\n    // Label background:\n    context.font = (fontStyle ? fontStyle + ' ' : '') +\n      fontSize + 'px ' + (settings('hoverFont') || settings('font'));\n\n    context.beginPath();\n    context.fillStyle = settings('labelHoverBGColor') === 'node' ?\n      (node.color || settings('defaultNodeColor')) :\n      settings('defaultHoverLabelBGColor');\n\n    if (node.label && settings('labelHoverShadow')) {\n      context.shadowOffsetX = 0;\n      context.shadowOffsetY = 0;\n      context.shadowBlur = 8;\n      context.shadowColor = settings('labelHoverShadowColor');\n    }\n\n    if (node.label && typeof node.label === 'string') {\n      x = Math.round(node[prefix + 'x'] - fontSize / 2 - 2);\n      y = Math.round(node[prefix + 'y'] - fontSize / 2 - 2);\n      w = Math.round(\n        context.measureText(node.label).width + fontSize / 2 + size + 7\n      );\n      h = Math.round(fontSize + 4);\n      e = Math.round(fontSize / 2 + 2);\n\n      context.moveTo(x, y + e);\n      context.arcTo(x, y, x + e, y, e);\n      context.lineTo(x + w, y);\n      context.lineTo(x + w, y + h);\n      context.lineTo(x + e, y + h);\n      context.arcTo(x, y + h, x, y + h - e, e);\n      context.lineTo(x, y + e);\n\n      context.closePath();\n      context.fill();\n\n      context.shadowOffsetX = 0;\n      context.shadowOffsetY = 0;\n      context.shadowBlur = 0;\n    }\n\n    // Node border:\n    if (settings('borderSize') > 0) {\n      context.beginPath();\n      context.fillStyle = settings('nodeBorderColor') === 'node' ?\n        (node.color || settings('defaultNodeColor')) :\n        settings('defaultNodeBorderColor');\n      context.arc(\n        node[prefix + 'x'],\n        node[prefix + 'y'],\n        size + settings('borderSize'),\n        0,\n        Math.PI * 2,\n        true\n      );\n      context.closePath();\n      context.fill();\n    }\n\n    // Node:\n    var nodeRenderer = sigma.canvas.nodes[node.type] || sigma.canvas.nodes.def;\n    nodeRenderer(node, context, settings);\n\n    // Display the label:\n    if (node.label && typeof node.label === 'string') {\n      context.fillStyle = (settings('labelHoverColor') === 'node') ?\n        (node.color || settings('defaultNodeColor')) :\n        settings('defaultLabelHoverColor');\n\n      context.fillText(\n        node.label,\n        Math.round(node[prefix + 'x'] + size + 3),\n        Math.round(node[prefix + 'y'] + fontSize / 3)\n      );\n    }\n  };\n}).call(this);\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.nodes');\n\n  /**\n   * The default node renderer. It renders the node as a simple disc.\n   *\n   * @param  {object}                   node     The node object.\n   * @param  {CanvasRenderingContext2D} context  The canvas context.\n   * @param  {configurable}             settings The settings function.\n   */\n  sigma.canvas.nodes.def = function(node, context, settings) {\n    var prefix = settings('prefix') || '';\n\n    context.fillStyle = node.color || settings('defaultNodeColor');\n    context.beginPath();\n    context.arc(\n      node[prefix + 'x'],\n      node[prefix + 'y'],\n      node[prefix + 'size'],\n      0,\n      Math.PI * 2,\n      true\n    );\n\n    context.closePath();\n    context.fill();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edges');\n\n  /**\n   * The default edge renderer. It renders the edge as a simple line.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edges.def = function(edge, source, target, context, settings) {\n    var color = edge.color,\n        prefix = settings('prefix') || '',\n        size = edge[prefix + 'size'] || 1,\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor');\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(\n      source[prefix + 'x'],\n      source[prefix + 'y']\n    );\n    context.lineTo(\n      target[prefix + 'x'],\n      target[prefix + 'y']\n    );\n    context.stroke();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edges');\n\n  /**\n   * This edge renderer will display edges as arrows going from the source node\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edges.arrow = function(edge, source, target, context, settings) {\n    var color = edge.color,\n        prefix = settings('prefix') || '',\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor'),\n        size = edge[prefix + 'size'] || 1,\n        tSize = target[prefix + 'size'],\n        sX = source[prefix + 'x'],\n        sY = source[prefix + 'y'],\n        tX = target[prefix + 'x'],\n        tY = target[prefix + 'y'],\n        aSize = Math.max(size * 2.5, settings('minArrowSize')),\n        d = Math.sqrt(Math.pow(tX - sX, 2) + Math.pow(tY - sY, 2)),\n        aX = sX + (tX - sX) * (d - aSize - tSize) / d,\n        aY = sY + (tY - sY) * (d - aSize - tSize) / d,\n        vX = (tX - sX) * aSize / d,\n        vY = (tY - sY) * aSize / d;\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(\n      aX,\n      aY\n    );\n    context.stroke();\n\n    context.fillStyle = color;\n    context.beginPath();\n    context.moveTo(aX + vX, aY + vY);\n    context.lineTo(aX + vY * 0.6, aY - vX * 0.6);\n    context.lineTo(aX - vY * 0.6, aY + vX * 0.6);\n    context.lineTo(aX + vX, aY + vY);\n    context.closePath();\n    context.fill();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edgehovers');\n\n  /**\n   * This hover renderer will display the edge with a different color or size.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edgehovers.def =\n    function(edge, source, target, context, settings) {\n      var color = edge.color,\n        prefix = settings('prefix') || '',\n        size = edge[prefix + 'size'] || 1,\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor');\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    if (settings('edgeHoverColor') === 'edge') {\n      color = edge.hover_color || color;\n    } else {\n      color = edge.hover_color || settings('defaultEdgeHoverColor') || color;\n    }\n    size *= settings('edgeHoverSizeRatio');\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(\n      source[prefix + 'x'],\n      source[prefix + 'y']\n    );\n    context.lineTo(\n      target[prefix + 'x'],\n      target[prefix + 'y']\n    );\n    context.stroke();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edgehovers');\n\n  /**\n   * This hover renderer will display the edge with a different color or size.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edgehovers.curve =\n    function(edge, source, target, context, settings) {\n    var color = edge.color,\n        prefix = settings('prefix') || '',\n        size = settings('edgeHoverSizeRatio') * (edge[prefix + 'size'] || 1),\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor'),\n        cp = {},\n        sSize = source[prefix + 'size'],\n        sX = source[prefix + 'x'],\n        sY = source[prefix + 'y'],\n        tX = target[prefix + 'x'],\n        tY = target[prefix + 'y'];\n\n    cp = (source.id === target.id) ?\n      sigma.utils.getSelfLoopControlPoints(sX, sY, sSize) :\n      sigma.utils.getQuadraticControlPoint(sX, sY, tX, tY);\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    if (settings('edgeHoverColor') === 'edge') {\n      color = edge.hover_color || color;\n    } else {\n      color = edge.hover_color || settings('defaultEdgeHoverColor') || color;\n    }\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(sX, sY);\n    if (source.id === target.id) {\n      context.bezierCurveTo(cp.x1, cp.y1, cp.x2, cp.y2, tX, tY);\n    } else {\n      context.quadraticCurveTo(cp.x, cp.y, tX, tY);\n    }\n    context.stroke();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edgehovers');\n\n  /**\n   * This hover renderer will display the edge with a different color or size.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edgehovers.arrow =\n    function(edge, source, target, context, settings) {\n    var color = edge.color,\n        prefix = settings('prefix') || '',\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor'),\n        size = edge[prefix + 'size'] || 1,\n        tSize = target[prefix + 'size'],\n        sX = source[prefix + 'x'],\n        sY = source[prefix + 'y'],\n        tX = target[prefix + 'x'],\n        tY = target[prefix + 'y'];\n\n    size = (edge.hover) ?\n      settings('edgeHoverSizeRatio') * size : size;\n    var aSize = size * 2.5,\n        d = Math.sqrt(Math.pow(tX - sX, 2) + Math.pow(tY - sY, 2)),\n        aX = sX + (tX - sX) * (d - aSize - tSize) / d,\n        aY = sY + (tY - sY) * (d - aSize - tSize) / d,\n        vX = (tX - sX) * aSize / d,\n        vY = (tY - sY) * aSize / d;\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    if (settings('edgeHoverColor') === 'edge') {\n      color = edge.hover_color || color;\n    } else {\n      color = edge.hover_color || settings('defaultEdgeHoverColor') || color;\n    }\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(\n      aX,\n      aY\n    );\n    context.stroke();\n\n    context.fillStyle = color;\n    context.beginPath();\n    context.moveTo(aX + vX, aY + vY);\n    context.lineTo(aX + vY * 0.6, aY - vX * 0.6);\n    context.lineTo(aX - vY * 0.6, aY + vX * 0.6);\n    context.lineTo(aX + vX, aY + vY);\n    context.closePath();\n    context.fill();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edgehovers');\n\n  /**\n   * This hover renderer will display the edge with a different color or size.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edgehovers.curvedArrow =\n    function(edge, source, target, context, settings) {\n    var color = edge.color,\n        prefix = settings('prefix') || '',\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor'),\n        cp = {},\n        size = settings('edgeHoverSizeRatio') * (edge[prefix + 'size'] || 1),\n        tSize = target[prefix + 'size'],\n        sX = source[prefix + 'x'],\n        sY = source[prefix + 'y'],\n        tX = target[prefix + 'x'],\n        tY = target[prefix + 'y'],\n        d,\n        aSize,\n        aX,\n        aY,\n        vX,\n        vY;\n\n    cp = (source.id === target.id) ?\n      sigma.utils.getSelfLoopControlPoints(sX, sY, tSize) :\n      sigma.utils.getQuadraticControlPoint(sX, sY, tX, tY);\n\n    if (source.id === target.id) {\n      d = Math.sqrt(Math.pow(tX - cp.x1, 2) + Math.pow(tY - cp.y1, 2));\n      aSize = size * 2.5;\n      aX = cp.x1 + (tX - cp.x1) * (d - aSize - tSize) / d;\n      aY = cp.y1 + (tY - cp.y1) * (d - aSize - tSize) / d;\n      vX = (tX - cp.x1) * aSize / d;\n      vY = (tY - cp.y1) * aSize / d;\n    }\n    else {\n      d = Math.sqrt(Math.pow(tX - cp.x, 2) + Math.pow(tY - cp.y, 2));\n      aSize = size * 2.5;\n      aX = cp.x + (tX - cp.x) * (d - aSize - tSize) / d;\n      aY = cp.y + (tY - cp.y) * (d - aSize - tSize) / d;\n      vX = (tX - cp.x) * aSize / d;\n      vY = (tY - cp.y) * aSize / d;\n    }\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    if (settings('edgeHoverColor') === 'edge') {\n      color = edge.hover_color || color;\n    } else {\n      color = edge.hover_color || settings('defaultEdgeHoverColor') || color;\n    }\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(sX, sY);\n    if (source.id === target.id) {\n      context.bezierCurveTo(cp.x2, cp.y2, cp.x1, cp.y1, aX, aY);\n    } else {\n      context.quadraticCurveTo(cp.x, cp.y, aX, aY);\n    }\n    context.stroke();\n\n    context.fillStyle = color;\n    context.beginPath();\n    context.moveTo(aX + vX, aY + vY);\n    context.lineTo(aX + vY * 0.6, aY - vX * 0.6);\n    context.lineTo(aX - vY * 0.6, aY + vX * 0.6);\n    context.lineTo(aX + vX, aY + vY);\n    context.closePath();\n    context.fill();\n  };\n})();\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.canvas.extremities');\n\n  /**\n   * The default renderer for hovered edge extremities. It renders the edge\n   * extremities as hovered.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.extremities.def =\n    function(edge, source, target, context, settings) {\n    // Source Node:\n    (\n      sigma.canvas.hovers[source.type] ||\n      sigma.canvas.hovers.def\n    ) (\n      source, context, settings\n    );\n\n    // Target Node:\n    (\n      sigma.canvas.hovers[target.type] ||\n      sigma.canvas.hovers.def\n    ) (\n      target, context, settings\n    );\n  };\n}).call(this);\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.svg.utils');\n\n  /**\n   * Some useful functions used by sigma's SVG renderer.\n   */\n  sigma.svg.utils = {\n\n    /**\n     * SVG Element show.\n     *\n     * @param  {DOMElement}               element   The DOM element to show.\n     */\n    show: function(element) {\n      element.style.display = '';\n      return this;\n    },\n\n    /**\n     * SVG Element hide.\n     *\n     * @param  {DOMElement}               element   The DOM element to hide.\n     */\n    hide: function(element) {\n      element.style.display = 'none';\n      return this;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.svg.nodes');\n\n  /**\n   * The default node renderer. It renders the node as a simple disc.\n   */\n  sigma.svg.nodes.def = {\n\n    /**\n     * SVG Element creation.\n     *\n     * @param  {object}                   node     The node object.\n     * @param  {configurable}             settings The settings function.\n     */\n    create: function(node, settings) {\n      var prefix = settings('prefix') || '',\n          circle = document.createElementNS(settings('xmlns'), 'circle');\n\n      // Defining the node's circle\n      circle.setAttributeNS(null, 'data-node-id', node.id);\n      circle.setAttributeNS(null, 'class', settings('classPrefix') + '-node');\n      circle.setAttributeNS(\n        null, 'fill', node.color || settings('defaultNodeColor'));\n\n      // Returning the DOM Element\n      return circle;\n    },\n\n    /**\n     * SVG Element update.\n     *\n     * @param  {object}                   node     The node object.\n     * @param  {DOMElement}               circle   The node DOM element.\n     * @param  {configurable}             settings The settings function.\n     */\n    update: function(node, circle, settings) {\n      var prefix = settings('prefix') || '';\n\n      // Applying changes\n      // TODO: optimize - check if necessary\n      circle.setAttributeNS(null, 'cx', node[prefix + 'x']);\n      circle.setAttributeNS(null, 'cy', node[prefix + 'y']);\n      circle.setAttributeNS(null, 'r', node[prefix + 'size']);\n\n      // Updating only if not freestyle\n      if (!settings('freeStyle'))\n        circle.setAttributeNS(\n          null, 'fill', node.color || settings('defaultNodeColor'));\n\n      // Showing\n      circle.style.display = '';\n\n      return this;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.svg.edges');\n\n  /**\n   * The default edge renderer. It renders the node as a simple line.\n   */\n  sigma.svg.edges.def = {\n\n    /**\n     * SVG Element creation.\n     *\n     * @param  {object}                   edge       The edge object.\n     * @param  {object}                   source     The source node object.\n     * @param  {object}                   target     The target node object.\n     * @param  {configurable}             settings   The settings function.\n     */\n    create: function(edge, source, target, settings) {\n      var color = edge.color,\n          prefix = settings('prefix') || '',\n          edgeColor = settings('edgeColor'),\n          defaultNodeColor = settings('defaultNodeColor'),\n          defaultEdgeColor = settings('defaultEdgeColor');\n\n      if (!color)\n        switch (edgeColor) {\n          case 'source':\n            color = source.color || defaultNodeColor;\n            break;\n          case 'target':\n            color = target.color || defaultNodeColor;\n            break;\n          default:\n            color = defaultEdgeColor;\n            break;\n        }\n\n      var line = document.createElementNS(settings('xmlns'), 'line');\n\n      // Attributes\n      line.setAttributeNS(null, 'data-edge-id', edge.id);\n      line.setAttributeNS(null, 'class', settings('classPrefix') + '-edge');\n      line.setAttributeNS(null, 'stroke', color);\n\n      return line;\n    },\n\n    /**\n     * SVG Element update.\n     *\n     * @param  {object}                   edge       The edge object.\n     * @param  {DOMElement}               line       The line DOM Element.\n     * @param  {object}                   source     The source node object.\n     * @param  {object}                   target     The target node object.\n     * @param  {configurable}             settings   The settings function.\n     */\n    update: function(edge, line, source, target, settings) {\n      var prefix = settings('prefix') || '';\n\n      line.setAttributeNS(null, 'stroke-width', edge[prefix + 'size'] || 1);\n      line.setAttributeNS(null, 'x1', source[prefix + 'x']);\n      line.setAttributeNS(null, 'y1', source[prefix + 'y']);\n      line.setAttributeNS(null, 'x2', target[prefix + 'x']);\n      line.setAttributeNS(null, 'y2', target[prefix + 'y']);\n\n      // Showing\n      line.style.display = '';\n\n      return this;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.svg.edges');\n\n  /**\n   * The curve edge renderer. It renders the node as a bezier curve.\n   */\n  sigma.svg.edges.curve = {\n\n    /**\n     * SVG Element creation.\n     *\n     * @param  {object}                   edge       The edge object.\n     * @param  {object}                   source     The source node object.\n     * @param  {object}                   target     The target node object.\n     * @param  {configurable}             settings   The settings function.\n     */\n    create: function(edge, source, target, settings) {\n      var color = edge.color,\n          prefix = settings('prefix') || '',\n          edgeColor = settings('edgeColor'),\n          defaultNodeColor = settings('defaultNodeColor'),\n          defaultEdgeColor = settings('defaultEdgeColor');\n\n      if (!color)\n        switch (edgeColor) {\n          case 'source':\n            color = source.color || defaultNodeColor;\n            break;\n          case 'target':\n            color = target.color || defaultNodeColor;\n            break;\n          default:\n            color = defaultEdgeColor;\n            break;\n        }\n\n      var path = document.createElementNS(settings('xmlns'), 'path');\n\n      // Attributes\n      path.setAttributeNS(null, 'data-edge-id', edge.id);\n      path.setAttributeNS(null, 'class', settings('classPrefix') + '-edge');\n      path.setAttributeNS(null, 'stroke', color);\n\n      return path;\n    },\n\n    /**\n     * SVG Element update.\n     *\n     * @param  {object}                   edge       The edge object.\n     * @param  {DOMElement}               line       The line DOM Element.\n     * @param  {object}                   source     The source node object.\n     * @param  {object}                   target     The target node object.\n     * @param  {configurable}             settings   The settings function.\n     */\n    update: function(edge, path, source, target, settings) {\n      var prefix = settings('prefix') || '';\n\n      path.setAttributeNS(null, 'stroke-width', edge[prefix + 'size'] || 1);\n\n      // Control point\n      var cx = (source[prefix + 'x'] + target[prefix + 'x']) / 2 +\n        (target[prefix + 'y'] - source[prefix + 'y']) / 4,\n          cy = (source[prefix + 'y'] + target[prefix + 'y']) / 2 +\n        (source[prefix + 'x'] - target[prefix + 'x']) / 4;\n\n      // Path\n      var p = 'M' + source[prefix + 'x'] + ',' + source[prefix + 'y'] + ' ' +\n              'Q' + cx + ',' + cy + ' ' +\n              target[prefix + 'x'] + ',' + target[prefix + 'y'];\n\n      // Updating attributes\n      path.setAttributeNS(null, 'd', p);\n      path.setAttributeNS(null, 'fill', 'none');\n\n      // Showing\n      path.style.display = '';\n\n      return this;\n    }\n  };\n})();\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.svg.labels');\n\n  /**\n   * The default label renderer. It renders the label as a simple text.\n   */\n  sigma.svg.labels.def = {\n\n    /**\n     * SVG Element creation.\n     *\n     * @param  {object}                   node       The node object.\n     * @param  {configurable}             settings   The settings function.\n     */\n    create: function(node, settings) {\n      var prefix = settings('prefix') || '',\n          size = node[prefix + 'size'],\n          text = document.createElementNS(settings('xmlns'), 'text');\n\n      var fontSize = (settings('labelSize') === 'fixed') ?\n        settings('defaultLabelSize') :\n        settings('labelSizeRatio') * size;\n\n      var fontColor = (settings('labelColor') === 'node') ?\n        (node.color || settings('defaultNodeColor')) :\n        settings('defaultLabelColor');\n\n      text.setAttributeNS(null, 'data-label-target', node.id);\n      text.setAttributeNS(null, 'class', settings('classPrefix') + '-label');\n      text.setAttributeNS(null, 'font-size', fontSize);\n      text.setAttributeNS(null, 'font-family', settings('font'));\n      text.setAttributeNS(null, 'fill', fontColor);\n\n      text.innerHTML = node.label;\n      text.textContent = node.label;\n\n      return text;\n    },\n\n    /**\n     * SVG Element update.\n     *\n     * @param  {object}                   node     The node object.\n     * @param  {DOMElement}               text     The label DOM element.\n     * @param  {configurable}             settings The settings function.\n     */\n    update: function(node, text, settings) {\n      var prefix = settings('prefix') || '',\n          size = node[prefix + 'size'];\n\n      var fontSize = (settings('labelSize') === 'fixed') ?\n        settings('defaultLabelSize') :\n        settings('labelSizeRatio') * size;\n\n      // Case when we don't want to display the label\n      if (!settings('forceLabels') && size < settings('labelThreshold'))\n        return;\n\n      if (typeof node.label !== 'string')\n        return;\n\n      // Updating\n      text.setAttributeNS(null, 'x',\n        Math.round(node[prefix + 'x'] + size + 3));\n      text.setAttributeNS(null, 'y',\n        Math.round(node[prefix + 'y'] + fontSize / 3));\n\n      // Showing\n      text.style.display = '';\n\n      return this;\n    }\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.svg.hovers');\n\n  /**\n   * The default hover renderer.\n   */\n  sigma.svg.hovers.def = {\n\n    /**\n     * SVG Element creation.\n     *\n     * @param  {object}           node               The node object.\n     * @param  {CanvasElement}    measurementCanvas  A fake canvas handled by\n     *                            the svg to perform some measurements and\n     *                            passed by the renderer.\n     * @param  {DOMElement}       nodeCircle         The node DOM Element.\n     * @param  {configurable}     settings           The settings function.\n     */\n    create: function(node, nodeCircle, measurementCanvas, settings) {\n\n      // Defining visual properties\n      var x,\n          y,\n          w,\n          h,\n          e,\n          d,\n          fontStyle = settings('hoverFontStyle') || settings('fontStyle'),\n          prefix = settings('prefix') || '',\n          size = node[prefix + 'size'],\n          fontSize = (settings('labelSize') === 'fixed') ?\n            settings('defaultLabelSize') :\n            settings('labelSizeRatio') * size,\n          fontColor = (settings('labelHoverColor') === 'node') ?\n                        (node.color || settings('defaultNodeColor')) :\n                        settings('defaultLabelHoverColor');\n\n      // Creating elements\n      var group = document.createElementNS(settings('xmlns'), 'g'),\n          rectangle = document.createElementNS(settings('xmlns'), 'rect'),\n          circle = document.createElementNS(settings('xmlns'), 'circle'),\n          text = document.createElementNS(settings('xmlns'), 'text');\n\n      // Defining properties\n      group.setAttributeNS(null, 'class', settings('classPrefix') + '-hover');\n      group.setAttributeNS(null, 'data-node-id', node.id);\n\n      if (typeof node.label === 'string') {\n\n        // Text\n        text.innerHTML = node.label;\n        text.textContent = node.label;\n        text.setAttributeNS(\n            null,\n            'class',\n            settings('classPrefix') + '-hover-label');\n        text.setAttributeNS(null, 'font-size', fontSize);\n        text.setAttributeNS(null, 'font-family', settings('font'));\n        text.setAttributeNS(null, 'fill', fontColor);\n        text.setAttributeNS(null, 'x',\n          Math.round(node[prefix + 'x'] + size + 3));\n        text.setAttributeNS(null, 'y',\n          Math.round(node[prefix + 'y'] + fontSize / 3));\n\n        // Measures\n        // OPTIMIZE: Find a better way than a measurement canvas\n        x = Math.round(node[prefix + 'x'] - fontSize / 2 - 2);\n        y = Math.round(node[prefix + 'y'] - fontSize / 2 - 2);\n        w = Math.round(\n          measurementCanvas.measureText(node.label).width +\n            fontSize / 2 + size + 9\n        );\n        h = Math.round(fontSize + 4);\n        e = Math.round(fontSize / 2 + 2);\n\n        // Circle\n        circle.setAttributeNS(\n            null,\n            'class',\n            settings('classPrefix') + '-hover-area');\n        circle.setAttributeNS(null, 'fill', '#fff');\n        circle.setAttributeNS(null, 'cx', node[prefix + 'x']);\n        circle.setAttributeNS(null, 'cy', node[prefix + 'y']);\n        circle.setAttributeNS(null, 'r', e);\n\n        // Rectangle\n        rectangle.setAttributeNS(\n            null,\n            'class',\n            settings('classPrefix') + '-hover-area');\n        rectangle.setAttributeNS(null, 'fill', '#fff');\n        rectangle.setAttributeNS(null, 'x', node[prefix + 'x'] + e / 4);\n        rectangle.setAttributeNS(null, 'y', node[prefix + 'y'] - e);\n        rectangle.setAttributeNS(null, 'width', w);\n        rectangle.setAttributeNS(null, 'height', h);\n      }\n\n      // Appending childs\n      group.appendChild(circle);\n      group.appendChild(rectangle);\n      group.appendChild(text);\n      group.appendChild(nodeCircle);\n\n      return group;\n    }\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.middlewares');\n  sigma.utils.pkg('sigma.utils');\n\n  /**\n   * This middleware will rescale the graph such that it takes an optimal space\n   * on the renderer.\n   *\n   * As each middleware, this function is executed in the scope of the sigma\n   * instance.\n   *\n   * @param {?string} readPrefix  The read prefix.\n   * @param {?string} writePrefix The write prefix.\n   * @param {object}  options     The parameters.\n   */\n  sigma.middlewares.rescale = function(readPrefix, writePrefix, options) {\n    var i,\n        l,\n        a,\n        b,\n        c,\n        d,\n        scale,\n        margin,\n        n = this.graph.nodes(),\n        e = this.graph.edges(),\n        settings = this.settings.embedObjects(options || {}),\n        bounds = settings('bounds') || sigma.utils.getBoundaries(\n          this.graph,\n          readPrefix,\n          true\n        ),\n        minX = bounds.minX,\n        minY = bounds.minY,\n        maxX = bounds.maxX,\n        maxY = bounds.maxY,\n        sizeMax = bounds.sizeMax,\n        weightMax = bounds.weightMax,\n        w = settings('width') || 1,\n        h = settings('height') || 1,\n        rescaleSettings = settings('autoRescale'),\n        validSettings = {\n          nodePosition: 1,\n          nodeSize: 1,\n          edgeSize: 1\n        };\n\n    /**\n     * What elements should we rescale?\n     */\n    if (!(rescaleSettings instanceof Array))\n      rescaleSettings = ['nodePosition', 'nodeSize', 'edgeSize'];\n\n    for (i = 0, l = rescaleSettings.length; i < l; i++)\n      if (!validSettings[rescaleSettings[i]])\n        throw new Error(\n          'The rescale setting \"' + rescaleSettings[i] + '\" is not recognized.'\n        );\n\n    var np = ~rescaleSettings.indexOf('nodePosition'),\n        ns = ~rescaleSettings.indexOf('nodeSize'),\n        es = ~rescaleSettings.indexOf('edgeSize');\n\n    /**\n     * First, we compute the scaling ratio, without considering the sizes\n     * of the nodes : Each node will have its center in the canvas, but might\n     * be partially out of it.\n     */\n    scale = settings('scalingMode') === 'outside' ?\n      Math.max(\n        w / Math.max(maxX - minX, 1),\n        h / Math.max(maxY - minY, 1)\n      ) :\n      Math.min(\n        w / Math.max(maxX - minX, 1),\n        h / Math.max(maxY - minY, 1)\n      );\n\n    /**\n     * Then, we correct that scaling ratio considering a margin, which is\n     * basically the size of the biggest node.\n     * This has to be done as a correction since to compare the size of the\n     * biggest node to the X and Y values, we have to first get an\n     * approximation of the scaling ratio.\n     **/\n    margin =\n      (\n        settings('rescaleIgnoreSize') ?\n          0 :\n          (settings('maxNodeSize') || sizeMax) / scale\n      ) +\n      (settings('sideMargin') || 0);\n    maxX += margin;\n    minX -= margin;\n    maxY += margin;\n    minY -= margin;\n\n    // Fix the scaling with the new extrema:\n    scale = settings('scalingMode') === 'outside' ?\n      Math.max(\n        w / Math.max(maxX - minX, 1),\n        h / Math.max(maxY - minY, 1)\n      ) :\n      Math.min(\n        w / Math.max(maxX - minX, 1),\n        h / Math.max(maxY - minY, 1)\n      );\n\n    // Size homothetic parameters:\n    if (!settings('maxNodeSize') && !settings('minNodeSize')) {\n      a = 1;\n      b = 0;\n    } else if (settings('maxNodeSize') === settings('minNodeSize')) {\n      a = 0;\n      b = +settings('maxNodeSize');\n    } else {\n      a = (settings('maxNodeSize') - settings('minNodeSize')) / sizeMax;\n      b = +settings('minNodeSize');\n    }\n\n    if (!settings('maxEdgeSize') && !settings('minEdgeSize')) {\n      c = 1;\n      d = 0;\n    } else if (settings('maxEdgeSize') === settings('minEdgeSize')) {\n      c = 0;\n      d = +settings('minEdgeSize');\n    } else {\n      c = (settings('maxEdgeSize') - settings('minEdgeSize')) / weightMax;\n      d = +settings('minEdgeSize');\n    }\n\n    // Rescale the nodes and edges:\n    for (i = 0, l = e.length; i < l; i++)\n      e[i][writePrefix + 'size'] =\n        e[i][readPrefix + 'size'] * (es ? c : 1) + (es ? d : 0);\n\n    for (i = 0, l = n.length; i < l; i++) {\n      n[i][writePrefix + 'size'] =\n        n[i][readPrefix + 'size'] * (ns ? a : 1) + (ns ? b : 0);\n      n[i][writePrefix + 'x'] =\n        (n[i][readPrefix + 'x'] - (maxX + minX) / 2) * (np ? scale : 1);\n      n[i][writePrefix + 'y'] =\n        (n[i][readPrefix + 'y'] - (maxY + minY) / 2) * (np ? scale : 1);\n    }\n  };\n\n  sigma.utils.getBoundaries = function(graph, prefix, doEdges) {\n    var i,\n        l,\n        e = graph.edges(),\n        n = graph.nodes(),\n        weightMax = -Infinity,\n        sizeMax = -Infinity,\n        minX = Infinity,\n        minY = Infinity,\n        maxX = -Infinity,\n        maxY = -Infinity;\n\n    if (doEdges)\n      for (i = 0, l = e.length; i < l; i++)\n        weightMax = Math.max(e[i][prefix + 'size'], weightMax);\n\n    for (i = 0, l = n.length; i < l; i++) {\n      sizeMax = Math.max(n[i][prefix + 'size'], sizeMax);\n      maxX = Math.max(n[i][prefix + 'x'], maxX);\n      minX = Math.min(n[i][prefix + 'x'], minX);\n      maxY = Math.max(n[i][prefix + 'y'], maxY);\n      minY = Math.min(n[i][prefix + 'y'], minY);\n    }\n\n    weightMax = weightMax || 1;\n    sizeMax = sizeMax || 1;\n\n    return {\n      weightMax: weightMax,\n      sizeMax: sizeMax,\n      minX: minX,\n      minY: minY,\n      maxX: maxX,\n      maxY: maxY\n    };\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.middlewares');\n\n  /**\n   * This middleware will just copy the graphic properties.\n   *\n   * @param {?string} readPrefix  The read prefix.\n   * @param {?string} writePrefix The write prefix.\n   */\n  sigma.middlewares.copy = function(readPrefix, writePrefix) {\n    var i,\n        l,\n        a;\n\n    if (writePrefix + '' === readPrefix + '')\n      return;\n\n    a = this.graph.nodes();\n    for (i = 0, l = a.length; i < l; i++) {\n      a[i][writePrefix + 'x'] = a[i][readPrefix + 'x'];\n      a[i][writePrefix + 'y'] = a[i][readPrefix + 'y'];\n      a[i][writePrefix + 'size'] = a[i][readPrefix + 'size'];\n    }\n\n    a = this.graph.edges();\n    for (i = 0, l = a.length; i < l; i++)\n      a[i][writePrefix + 'size'] = a[i][readPrefix + 'size'];\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.misc.animation.running');\n\n  /**\n   * Generates a unique ID for the animation.\n   *\n   * @return {string} Returns the new ID.\n   */\n  var _getID = (function() {\n    var id = 0;\n    return function() {\n      return '' + (++id);\n    };\n  })();\n\n  /**\n   * This function animates a camera. It has to be called with the camera to\n   * animate, the values of the coordinates to reach and eventually some\n   * options. It returns a number id, that you can use to kill the animation,\n   * with the method sigma.misc.animation.kill(id).\n   *\n   * The available options are:\n   *\n   *   {?number}            duration   The duration of the animation.\n   *   {?function}          onNewFrame A callback to execute when the animation\n   *                                   enter a new frame.\n   *   {?function}          onComplete A callback to execute when the animation\n   *                                   is completed or killed.\n   *   {?(string|function)} easing     The name of a function from the package\n   *                                   sigma.utils.easings, or a custom easing\n   *                                   function.\n   *\n   * @param  {camera}  camera  The camera to animate.\n   * @param  {object}  target  The coordinates to reach.\n   * @param  {?object} options Eventually an object to specify some options to\n   *                           the function. The available options are\n   *                           presented in the description of the function.\n   * @return {number}          The animation id, to make it easy to kill\n   *                           through the method \"sigma.misc.animation.kill\".\n   */\n  sigma.misc.animation.camera = function(camera, val, options) {\n    if (\n      !(camera instanceof sigma.classes.camera) ||\n      typeof val !== 'object' ||\n      !val\n    )\n      throw 'animation.camera: Wrong arguments.';\n\n    if (\n      typeof val.x !== 'number' &&\n      typeof val.y !== 'number' &&\n      typeof val.ratio !== 'number' &&\n      typeof val.angle !== 'number'\n    )\n      throw 'There must be at least one valid coordinate in the given val.';\n\n    var fn,\n        id,\n        anim,\n        easing,\n        duration,\n        initialVal,\n        o = options || {},\n        start = sigma.utils.dateNow();\n\n    // Store initial values:\n    initialVal = {\n      x: camera.x,\n      y: camera.y,\n      ratio: camera.ratio,\n      angle: camera.angle\n    };\n\n    duration = o.duration;\n    easing = typeof o.easing !== 'function' ?\n      sigma.utils.easings[o.easing || 'quadraticInOut'] :\n      o.easing;\n\n    fn = function() {\n      var coef,\n          t = o.duration ? (sigma.utils.dateNow() - start) / o.duration : 1;\n\n      // If the animation is over:\n      if (t >= 1) {\n        camera.isAnimated = false;\n        camera.goTo({\n          x: val.x !== undefined ? val.x : initialVal.x,\n          y: val.y !== undefined ? val.y : initialVal.y,\n          ratio: val.ratio !== undefined ? val.ratio : initialVal.ratio,\n          angle: val.angle !== undefined ? val.angle : initialVal.angle\n        });\n\n        cancelAnimationFrame(id);\n        delete sigma.misc.animation.running[id];\n\n        // Check callbacks:\n        if (typeof o.onComplete === 'function')\n          o.onComplete();\n\n      // Else, let's keep going:\n      } else {\n        coef = easing(t);\n        camera.isAnimated = true;\n        camera.goTo({\n          x: val.x !== undefined ?\n            initialVal.x + (val.x - initialVal.x) * coef :\n            initialVal.x,\n          y: val.y !== undefined ?\n            initialVal.y + (val.y - initialVal.y) * coef :\n            initialVal.y,\n          ratio: val.ratio !== undefined ?\n            initialVal.ratio + (val.ratio - initialVal.ratio) * coef :\n            initialVal.ratio,\n          angle: val.angle !== undefined ?\n            initialVal.angle + (val.angle - initialVal.angle) * coef :\n            initialVal.angle\n        });\n\n        // Check callbacks:\n        if (typeof o.onNewFrame === 'function')\n          o.onNewFrame();\n\n        anim.frameId = requestAnimationFrame(fn);\n      }\n    };\n\n    id = _getID();\n    anim = {\n      frameId: requestAnimationFrame(fn),\n      target: camera,\n      type: 'camera',\n      options: o,\n      fn: fn\n    };\n    sigma.misc.animation.running[id] = anim;\n\n    return id;\n  };\n\n  /**\n   * Kills a running animation. It triggers the eventual onComplete callback.\n   *\n   * @param  {number} id  The id of the animation to kill.\n   * @return {object}     Returns the sigma.misc.animation package.\n   */\n  sigma.misc.animation.kill = function(id) {\n    if (arguments.length !== 1 || typeof id !== 'number')\n      throw 'animation.kill: Wrong arguments.';\n\n    var o = sigma.misc.animation.running[id];\n\n    if (o) {\n      cancelAnimationFrame(id);\n      delete sigma.misc.animation.running[o.frameId];\n\n      if (o.type === 'camera')\n        o.target.isAnimated = false;\n\n      // Check callbacks:\n      if (typeof (o.options || {}).onComplete === 'function')\n        o.options.onComplete();\n    }\n\n    return this;\n  };\n\n  /**\n   * Kills every running animations, or only the one with the specified type,\n   * if a string parameter is given.\n   *\n   * @param  {?(string|object)} filter A string to filter the animations to kill\n   *                                   on their type (example: \"camera\"), or an\n   *                                   object to filter on their target.\n   * @return {number}                  Returns the number of animations killed\n   *                                   that way.\n   */\n  sigma.misc.animation.killAll = function(filter) {\n    var o,\n        id,\n        count = 0,\n        type = typeof filter === 'string' ? filter : null,\n        target = typeof filter === 'object' ? filter : null,\n        running = sigma.misc.animation.running;\n\n    for (id in running)\n      if (\n        (!type || running[id].type === type) &&\n        (!target || running[id].target === target)\n      ) {\n        o = sigma.misc.animation.running[id];\n        cancelAnimationFrame(o.frameId);\n        delete sigma.misc.animation.running[id];\n\n        if (o.type === 'camera')\n          o.target.isAnimated = false;\n\n        // Increment counter:\n        count++;\n\n        // Check callbacks:\n        if (typeof (o.options || {}).onComplete === 'function')\n          o.options.onComplete();\n      }\n\n    return count;\n  };\n\n  /**\n   * Returns \"true\" if any animation that is currently still running matches\n   * the filter given to the function.\n   *\n   * @param  {string|object} filter A string to filter the animations to kill\n   *                                on their type (example: \"camera\"), or an\n   *                                object to filter on their target.\n   * @return {boolean}              Returns true if any running animation\n   *                                matches.\n   */\n  sigma.misc.animation.has = function(filter) {\n    var id,\n        type = typeof filter === 'string' ? filter : null,\n        target = typeof filter === 'object' ? filter : null,\n        running = sigma.misc.animation.running;\n\n    for (id in running)\n      if (\n        (!type || running[id].type === type) &&\n        (!target || running[id].target === target)\n      )\n        return true;\n\n    return false;\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.misc');\n\n  /**\n   * This helper will bind any no-DOM renderer (for instance canvas or WebGL)\n   * to its captors, to properly dispatch the good events to the sigma instance\n   * to manage clicking, hovering etc...\n   *\n   * It has to be called in the scope of the related renderer.\n   */\n  sigma.misc.bindEvents = function(prefix) {\n    var i,\n        l,\n        mX,\n        mY,\n        captor,\n        self = this;\n\n    function getNodes(e) {\n      if (e) {\n        mX = 'x' in e.data ? e.data.x : mX;\n        mY = 'y' in e.data ? e.data.y : mY;\n      }\n\n      var i,\n          j,\n          l,\n          n,\n          x,\n          y,\n          s,\n          inserted,\n          selected = [],\n          modifiedX = mX + self.width / 2,\n          modifiedY = mY + self.height / 2,\n          point = self.camera.cameraPosition(\n            mX,\n            mY\n          ),\n          nodes = self.camera.quadtree.point(\n            point.x,\n            point.y\n          );\n\n      if (nodes.length)\n        for (i = 0, l = nodes.length; i < l; i++) {\n          n = nodes[i];\n          x = n[prefix + 'x'];\n          y = n[prefix + 'y'];\n          s = n[prefix + 'size'];\n\n          if (\n            !n.hidden &&\n            modifiedX > x - s &&\n            modifiedX < x + s &&\n            modifiedY > y - s &&\n            modifiedY < y + s &&\n            Math.sqrt(\n              Math.pow(modifiedX - x, 2) +\n              Math.pow(modifiedY - y, 2)\n            ) < s\n          ) {\n            // Insert the node:\n            inserted = false;\n\n            for (j = 0; j < selected.length; j++)\n              if (n.size > selected[j].size) {\n                selected.splice(j, 0, n);\n                inserted = true;\n                break;\n              }\n\n            if (!inserted)\n              selected.push(n);\n          }\n        }\n\n      return selected;\n    }\n\n\n    function getEdges(e) {\n      if (!self.settings('enableEdgeHovering')) {\n        // No event if the setting is off:\n        return [];\n      }\n\n      var isCanvas = (\n        sigma.renderers.canvas && self instanceof sigma.renderers.canvas);\n\n      if (!isCanvas) {\n        // A quick hardcoded rule to prevent people from using this feature\n        // with the WebGL renderer (which is not good enough at the moment):\n        throw new Error(\n          'The edge events feature is not compatible with the WebGL renderer'\n        );\n      }\n\n      if (e) {\n        mX = 'x' in e.data ? e.data.x : mX;\n        mY = 'y' in e.data ? e.data.y : mY;\n      }\n\n      var i,\n          j,\n          l,\n          a,\n          edge,\n          s,\n          maxEpsilon = self.settings('edgeHoverPrecision'),\n          source,\n          target,\n          cp,\n          nodeIndex = {},\n          inserted,\n          selected = [],\n          modifiedX = mX + self.width / 2,\n          modifiedY = mY + self.height / 2,\n          point = self.camera.cameraPosition(\n            mX,\n            mY\n          ),\n          edges = [];\n\n      if (isCanvas) {\n        var nodesOnScreen = self.camera.quadtree.area(\n          self.camera.getRectangle(self.width, self.height)\n        );\n        for (a = nodesOnScreen, i = 0, l = a.length; i < l; i++)\n          nodeIndex[a[i].id] = a[i];\n      }\n\n      if (self.camera.edgequadtree !== undefined) {\n        edges = self.camera.edgequadtree.point(\n          point.x,\n          point.y\n        );\n      }\n\n      function insertEdge(selected, edge) {\n        inserted = false;\n\n        for (j = 0; j < selected.length; j++)\n          if (edge.size > selected[j].size) {\n            selected.splice(j, 0, edge);\n            inserted = true;\n            break;\n          }\n\n        if (!inserted)\n          selected.push(edge);\n      }\n\n      if (edges.length)\n        for (i = 0, l = edges.length; i < l; i++) {\n          edge = edges[i];\n          source = self.graph.nodes(edge.source);\n          target = self.graph.nodes(edge.target);\n          // (HACK) we can't get edge[prefix + 'size'] on WebGL renderer:\n          s = edge[prefix + 'size'] ||\n              edge['read_' + prefix + 'size'];\n\n          // First, let's identify which edges are drawn. To do this, we keep\n          // every edges that have at least one extremity displayed according to\n          // the quadtree and the \"hidden\" attribute. We also do not keep hidden\n          // edges.\n          // Then, let's check if the mouse is on the edge (we suppose that it\n          // is a line segment).\n\n          if (\n            !edge.hidden &&\n            !source.hidden && !target.hidden &&\n            (!isCanvas ||\n              (nodeIndex[edge.source] || nodeIndex[edge.target])) &&\n            sigma.utils.getDistance(\n              source[prefix + 'x'],\n              source[prefix + 'y'],\n              modifiedX,\n              modifiedY) > source[prefix + 'size'] &&\n            sigma.utils.getDistance(\n              target[prefix + 'x'],\n              target[prefix + 'y'],\n              modifiedX,\n              modifiedY) > target[prefix + 'size']\n          ) {\n            if (edge.type == 'curve' || edge.type == 'curvedArrow') {\n              if (source.id === target.id) {\n                cp = sigma.utils.getSelfLoopControlPoints(\n                  source[prefix + 'x'],\n                  source[prefix + 'y'],\n                  source[prefix + 'size']\n                );\n                if (\n                  sigma.utils.isPointOnBezierCurve(\n                  modifiedX,\n                  modifiedY,\n                  source[prefix + 'x'],\n                  source[prefix + 'y'],\n                  target[prefix + 'x'],\n                  target[prefix + 'y'],\n                  cp.x1,\n                  cp.y1,\n                  cp.x2,\n                  cp.y2,\n                  Math.max(s, maxEpsilon)\n                )) {\n                  insertEdge(selected, edge);\n                }\n              }\n              else {\n                cp = sigma.utils.getQuadraticControlPoint(\n                  source[prefix + 'x'],\n                  source[prefix + 'y'],\n                  target[prefix + 'x'],\n                  target[prefix + 'y']);\n                if (\n                  sigma.utils.isPointOnQuadraticCurve(\n                  modifiedX,\n                  modifiedY,\n                  source[prefix + 'x'],\n                  source[prefix + 'y'],\n                  target[prefix + 'x'],\n                  target[prefix + 'y'],\n                  cp.x,\n                  cp.y,\n                  Math.max(s, maxEpsilon)\n                )) {\n                  insertEdge(selected, edge);\n                }\n              }\n            } else if (\n                sigma.utils.isPointOnSegment(\n                modifiedX,\n                modifiedY,\n                source[prefix + 'x'],\n                source[prefix + 'y'],\n                target[prefix + 'x'],\n                target[prefix + 'y'],\n                Math.max(s, maxEpsilon)\n              )) {\n              insertEdge(selected, edge);\n            }\n          }\n        }\n\n      return selected;\n    }\n\n\n    function bindCaptor(captor) {\n      var nodes,\n          edges,\n          overNodes = {},\n          overEdges = {};\n\n      function onClick(e) {\n        if (!self.settings('eventsEnabled'))\n          return;\n\n        self.dispatchEvent('click', e.data);\n\n        nodes = getNodes(e);\n        edges = getEdges(e);\n\n        if (nodes.length) {\n          self.dispatchEvent('clickNode', {\n            node: nodes[0],\n            captor: e.data\n          });\n          self.dispatchEvent('clickNodes', {\n            node: nodes,\n            captor: e.data\n          });\n        } else if (edges.length) {\n          self.dispatchEvent('clickEdge', {\n            edge: edges[0],\n            captor: e.data\n          });\n          self.dispatchEvent('clickEdges', {\n            edge: edges,\n            captor: e.data\n          });\n        } else\n          self.dispatchEvent('clickStage', {captor: e.data});\n      }\n\n      function onDoubleClick(e) {\n        if (!self.settings('eventsEnabled'))\n          return;\n\n        self.dispatchEvent('doubleClick', e.data);\n\n        nodes = getNodes(e);\n        edges = getEdges(e);\n\n        if (nodes.length) {\n          self.dispatchEvent('doubleClickNode', {\n            node: nodes[0],\n            captor: e.data\n          });\n          self.dispatchEvent('doubleClickNodes', {\n            node: nodes,\n            captor: e.data\n          });\n        } else if (edges.length) {\n          self.dispatchEvent('doubleClickEdge', {\n            edge: edges[0],\n            captor: e.data\n          });\n          self.dispatchEvent('doubleClickEdges', {\n            edge: edges,\n            captor: e.data\n          });\n        } else\n          self.dispatchEvent('doubleClickStage', {captor: e.data});\n      }\n\n      function onRightClick(e) {\n        if (!self.settings('eventsEnabled'))\n          return;\n\n        self.dispatchEvent('rightClick', e.data);\n\n        nodes = getNodes(e);\n        edges = getEdges(e);\n\n        if (nodes.length) {\n          self.dispatchEvent('rightClickNode', {\n            node: nodes[0],\n            captor: e.data\n          });\n          self.dispatchEvent('rightClickNodes', {\n            node: nodes,\n            captor: e.data\n          });\n        } else if (edges.length) {\n          self.dispatchEvent('rightClickEdge', {\n            edge: edges[0],\n            captor: e.data\n          });\n          self.dispatchEvent('rightClickEdges', {\n            edge: edges,\n            captor: e.data\n          });\n        } else\n          self.dispatchEvent('rightClickStage', {captor: e.data});\n      }\n\n      function onOut(e) {\n        if (!self.settings('eventsEnabled'))\n          return;\n\n        var k,\n            i,\n            l,\n            le,\n            outNodes = [],\n            outEdges = [];\n\n        for (k in overNodes)\n          outNodes.push(overNodes[k]);\n\n        overNodes = {};\n        // Dispatch both single and multi events:\n        for (i = 0, l = outNodes.length; i < l; i++)\n          self.dispatchEvent('outNode', {\n            node: outNodes[i],\n            captor: e.data\n          });\n        if (outNodes.length)\n          self.dispatchEvent('outNodes', {\n            nodes: outNodes,\n            captor: e.data\n          });\n\n        overEdges = {};\n        // Dispatch both single and multi events:\n        for (i = 0, le = outEdges.length; i < le; i++)\n          self.dispatchEvent('outEdge', {\n            edge: outEdges[i],\n            captor: e.data\n          });\n        if (outEdges.length)\n          self.dispatchEvent('outEdges', {\n            edges: outEdges,\n            captor: e.data\n          });\n      }\n\n      function onMove(e) {\n        if (!self.settings('eventsEnabled'))\n          return;\n\n        nodes = getNodes(e);\n        edges = getEdges(e);\n\n        var i,\n            k,\n            node,\n            edge,\n            newOutNodes = [],\n            newOverNodes = [],\n            currentOverNodes = {},\n            l = nodes.length,\n            newOutEdges = [],\n            newOverEdges = [],\n            currentOverEdges = {},\n            le = edges.length;\n\n        // Check newly overred nodes:\n        for (i = 0; i < l; i++) {\n          node = nodes[i];\n          currentOverNodes[node.id] = node;\n          if (!overNodes[node.id]) {\n            newOverNodes.push(node);\n            overNodes[node.id] = node;\n          }\n        }\n\n        // Check no more overred nodes:\n        for (k in overNodes)\n          if (!currentOverNodes[k]) {\n            newOutNodes.push(overNodes[k]);\n            delete overNodes[k];\n          }\n\n        // Dispatch both single and multi events:\n        for (i = 0, l = newOverNodes.length; i < l; i++)\n          self.dispatchEvent('overNode', {\n            node: newOverNodes[i],\n            captor: e.data\n          });\n        for (i = 0, l = newOutNodes.length; i < l; i++)\n          self.dispatchEvent('outNode', {\n            node: newOutNodes[i],\n            captor: e.data\n          });\n        if (newOverNodes.length)\n          self.dispatchEvent('overNodes', {\n            nodes: newOverNodes,\n            captor: e.data\n          });\n        if (newOutNodes.length)\n          self.dispatchEvent('outNodes', {\n            nodes: newOutNodes,\n            captor: e.data\n          });\n\n        // Check newly overred edges:\n        for (i = 0; i < le; i++) {\n          edge = edges[i];\n          currentOverEdges[edge.id] = edge;\n          if (!overEdges[edge.id]) {\n            newOverEdges.push(edge);\n            overEdges[edge.id] = edge;\n          }\n        }\n\n        // Check no more overred edges:\n        for (k in overEdges)\n          if (!currentOverEdges[k]) {\n            newOutEdges.push(overEdges[k]);\n            delete overEdges[k];\n          }\n\n        // Dispatch both single and multi events:\n        for (i = 0, le = newOverEdges.length; i < le; i++)\n          self.dispatchEvent('overEdge', {\n            edge: newOverEdges[i],\n            captor: e.data\n          });\n        for (i = 0, le = newOutEdges.length; i < le; i++)\n          self.dispatchEvent('outEdge', {\n            edge: newOutEdges[i],\n            captor: e.data\n          });\n        if (newOverEdges.length)\n          self.dispatchEvent('overEdges', {\n            edges: newOverEdges,\n            captor: e.data\n          });\n        if (newOutEdges.length)\n          self.dispatchEvent('outEdges', {\n            edges: newOutEdges,\n            captor: e.data\n          });\n      }\n\n      // Bind events:\n      captor.bind('click', onClick);\n      captor.bind('mousedown', onMove);\n      captor.bind('mouseup', onMove);\n      captor.bind('mousemove', onMove);\n      captor.bind('mouseout', onOut);\n      captor.bind('doubleclick', onDoubleClick);\n      captor.bind('rightclick', onRightClick);\n      self.bind('render', onMove);\n    }\n\n    for (i = 0, l = this.captors.length; i < l; i++)\n      bindCaptor(this.captors[i]);\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.misc');\n\n  /**\n   * This helper will bind any DOM renderer (for instance svg)\n   * to its captors, to properly dispatch the good events to the sigma instance\n   * to manage clicking, hovering etc...\n   *\n   * It has to be called in the scope of the related renderer.\n   */\n  sigma.misc.bindDOMEvents = function(container) {\n    var self = this,\n        graph = this.graph;\n\n    // DOMElement abstraction\n    function Element(domElement) {\n\n      // Helpers\n      this.attr = function(attrName) {\n        return domElement.getAttributeNS(null, attrName);\n      };\n\n      // Properties\n      this.tag = domElement.tagName;\n      this.class = this.attr('class');\n      this.id = this.attr('id');\n\n      // Methods\n      this.isNode = function() {\n        return !!~this.class.indexOf(self.settings('classPrefix') + '-node');\n      };\n\n      this.isEdge = function() {\n        return !!~this.class.indexOf(self.settings('classPrefix') + '-edge');\n      };\n\n      this.isHover = function() {\n        return !!~this.class.indexOf(self.settings('classPrefix') + '-hover');\n      };\n    }\n\n    // Click\n    function click(e) {\n      if (!self.settings('eventsEnabled'))\n        return;\n\n      // Generic event\n      self.dispatchEvent('click', e);\n\n      // Are we on a node?\n      var element = new Element(e.target);\n\n      if (element.isNode())\n        self.dispatchEvent('clickNode', {\n          node: graph.nodes(element.attr('data-node-id'))\n        });\n      else\n        self.dispatchEvent('clickStage');\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    // Double click\n    function doubleClick(e) {\n      if (!self.settings('eventsEnabled'))\n        return;\n\n      // Generic event\n      self.dispatchEvent('doubleClick', e);\n\n      // Are we on a node?\n      var element = new Element(e.target);\n\n      if (element.isNode())\n        self.dispatchEvent('doubleClickNode', {\n          node: graph.nodes(element.attr('data-node-id'))\n        });\n      else\n        self.dispatchEvent('doubleClickStage');\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    // On over\n    function onOver(e) {\n      var target = e.toElement || e.target;\n\n      if (!self.settings('eventsEnabled') || !target)\n        return;\n\n      var el = new Element(target);\n\n      if (el.isNode()) {\n        self.dispatchEvent('overNode', {\n          node: graph.nodes(el.attr('data-node-id'))\n        });\n      }\n      else if (el.isEdge()) {\n        var edge = graph.edges(el.attr('data-edge-id'));\n        self.dispatchEvent('overEdge', {\n          edge: edge,\n          source: graph.nodes(edge.source),\n          target: graph.nodes(edge.target)\n        });\n      }\n    }\n\n    // On out\n    function onOut(e) {\n      var target = e.fromElement || e.originalTarget;\n\n      if (!self.settings('eventsEnabled'))\n        return;\n\n      var el = new Element(target);\n\n      if (el.isNode()) {\n        self.dispatchEvent('outNode', {\n          node: graph.nodes(el.attr('data-node-id'))\n        });\n      }\n      else if (el.isEdge()) {\n        var edge = graph.edges(el.attr('data-edge-id'));\n        self.dispatchEvent('outEdge', {\n          edge: edge,\n          source: graph.nodes(edge.source),\n          target: graph.nodes(edge.target)\n        });\n      }\n    }\n\n    // Registering Events:\n\n    // Click\n    container.addEventListener('click', click, false);\n    sigma.utils.doubleClick(container, 'click', doubleClick);\n\n    // Touch counterparts\n    container.addEventListener('touchstart', click, false);\n    sigma.utils.doubleClick(container, 'touchstart', doubleClick);\n\n    // Mouseover\n    container.addEventListener('mouseover', onOver, true);\n\n    // Mouseout\n    container.addEventListener('mouseout', onOut, true);\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.misc');\n\n  /**\n   * This method listens to \"overNode\", \"outNode\", \"overEdge\" and \"outEdge\"\n   * events from a renderer and renders the nodes differently on the top layer.\n   * The goal is to make any node label readable with the mouse, and to\n   * highlight hovered nodes and edges.\n   *\n   * It has to be called in the scope of the related renderer.\n   */\n  sigma.misc.drawHovers = function(prefix) {\n    var self = this,\n        hoveredNodes = {},\n        hoveredEdges = {};\n\n    this.bind('overNode', function(event) {\n      var node = event.data.node;\n      if (!node.hidden) {\n        hoveredNodes[node.id] = node;\n        draw();\n      }\n    });\n\n    this.bind('outNode', function(event) {\n      delete hoveredNodes[event.data.node.id];\n      draw();\n    });\n\n    this.bind('overEdge', function(event) {\n      var edge = event.data.edge;\n      if (!edge.hidden) {\n        hoveredEdges[edge.id] = edge;\n        draw();\n      }\n    });\n\n    this.bind('outEdge', function(event) {\n      delete hoveredEdges[event.data.edge.id];\n      draw();\n    });\n\n    this.bind('render', function(event) {\n      draw();\n    });\n\n    function draw() {\n\n      var k,\n          source,\n          target,\n          hoveredNode,\n          hoveredEdge,\n          c = self.contexts.hover.canvas,\n          defaultNodeType = self.settings('defaultNodeType'),\n          defaultEdgeType = self.settings('defaultEdgeType'),\n          nodeRenderers = sigma.canvas.hovers,\n          edgeRenderers = sigma.canvas.edgehovers,\n          extremitiesRenderers = sigma.canvas.extremities,\n          embedSettings = self.settings.embedObjects({\n            prefix: prefix\n          });\n\n      // Clear self.contexts.hover:\n      self.contexts.hover.clearRect(0, 0, c.width, c.height);\n\n      // Node render: single hover\n      if (\n        embedSettings('enableHovering') &&\n        embedSettings('singleHover') &&\n        Object.keys(hoveredNodes).length\n      ) {\n        hoveredNode = hoveredNodes[Object.keys(hoveredNodes)[0]];\n        (\n          nodeRenderers[hoveredNode.type] ||\n          nodeRenderers[defaultNodeType] ||\n          nodeRenderers.def\n        )(\n          hoveredNode,\n          self.contexts.hover,\n          embedSettings\n        );\n      }\n\n      // Node render: multiple hover\n      if (\n        embedSettings('enableHovering') &&\n        !embedSettings('singleHover')\n      )\n        for (k in hoveredNodes)\n          (\n            nodeRenderers[hoveredNodes[k].type] ||\n            nodeRenderers[defaultNodeType] ||\n            nodeRenderers.def\n          )(\n            hoveredNodes[k],\n            self.contexts.hover,\n            embedSettings\n          );\n\n      // Edge render: single hover\n      if (\n        embedSettings('enableEdgeHovering') &&\n        embedSettings('singleHover') &&\n        Object.keys(hoveredEdges).length\n      ) {\n        hoveredEdge = hoveredEdges[Object.keys(hoveredEdges)[0]];\n        source = self.graph.nodes(hoveredEdge.source);\n        target = self.graph.nodes(hoveredEdge.target);\n\n        if (! hoveredEdge.hidden) {\n          (\n            edgeRenderers[hoveredEdge.type] ||\n            edgeRenderers[defaultEdgeType] ||\n            edgeRenderers.def\n          ) (\n            hoveredEdge,\n            source,\n            target,\n            self.contexts.hover,\n            embedSettings\n          );\n\n          if (embedSettings('edgeHoverExtremities')) {\n            (\n              extremitiesRenderers[hoveredEdge.type] ||\n              extremitiesRenderers.def\n            )(\n              hoveredEdge,\n              source,\n              target,\n              self.contexts.hover,\n              embedSettings\n            );\n\n          } else {\n            // Avoid edges rendered over nodes:\n            (\n              sigma.canvas.nodes[source.type] ||\n              sigma.canvas.nodes.def\n            ) (\n              source,\n              self.contexts.hover,\n              embedSettings\n            );\n            (\n              sigma.canvas.nodes[target.type] ||\n              sigma.canvas.nodes.def\n            ) (\n              target,\n              self.contexts.hover,\n              embedSettings\n            );\n          }\n        }\n      }\n\n      // Edge render: multiple hover\n      if (\n        embedSettings('enableEdgeHovering') &&\n        !embedSettings('singleHover')\n      ) {\n        for (k in hoveredEdges) {\n          hoveredEdge = hoveredEdges[k];\n          source = self.graph.nodes(hoveredEdge.source);\n          target = self.graph.nodes(hoveredEdge.target);\n\n          if (!hoveredEdge.hidden) {\n            (\n              edgeRenderers[hoveredEdge.type] ||\n              edgeRenderers[defaultEdgeType] ||\n              edgeRenderers.def\n            ) (\n              hoveredEdge,\n              source,\n              target,\n              self.contexts.hover,\n              embedSettings\n            );\n\n            if (embedSettings('edgeHoverExtremities')) {\n              (\n                extremitiesRenderers[hoveredEdge.type] ||\n                extremitiesRenderers.def\n              )(\n                hoveredEdge,\n                source,\n                target,\n                self.contexts.hover,\n                embedSettings\n              );\n            } else {\n              // Avoid edges rendered over nodes:\n              (\n                sigma.canvas.nodes[source.type] ||\n                sigma.canvas.nodes.def\n              ) (\n                source,\n                self.contexts.hover,\n                embedSettings\n              );\n              (\n                sigma.canvas.nodes[target.type] ||\n                sigma.canvas.nodes.def\n              ) (\n                target,\n                self.contexts.hover,\n                embedSettings\n              );\n            }\n          }\n        }\n      }\n    }\n  };\n}).call(this);\n\n}.call(window));\n\n//# sourceURL=webpack:///./node_modules/sigma/build/sigma.require.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var sigma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sigma */ \"./node_modules/sigma/build/sigma.require.js\");\n/* harmony import */ var sigma__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sigma__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sigma_build_plugins_sigma_layout_forceatlas2_min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sigma/build/plugins/sigma.layout.forceatlas2.min.js */ \"./node_modules/sigma/build/plugins/sigma.layout.forceatlas2.min.js\");\n/* harmony import */ var sigma_build_plugins_sigma_layout_forceatlas2_min_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sigma_build_plugins_sigma_layout_forceatlas2_min_js__WEBPACK_IMPORTED_MODULE_1__);\n\nvar jQuery = __webpack_require__(/*! jQuery */ \"./node_modules/jQuery/dist/jquery.js\")\n//var sigma = require('sigma');\n\n\n//var G = JSON.parse(jQuery.getJSON('./graph.json'));\nvar G = JSON.parse('{\"nodes\": [{\"id\": \"PAK1\", \"label\": \"PAK1\", \"x\": -1051, \"y\": 764, \"size\": 5, \"color\": \"#fdf6b8\"}, {\"id\": \"ERBB2\", \"label\": \"ERBB2\", \"x\": -866, \"y\": 294, \"size\": 5, \"color\": \"#fdefb1\"}, {\"id\": \"RON\", \"label\": \"RON\", \"x\": -195, \"y\": 655, \"size\": 2, \"color\": \"#fee6a7\"}, {\"id\": \"YES\", \"label\": \"YES\", \"x\": -195, \"y\": 720, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"TYRO3\", \"label\": \"TYRO3\", \"x\": -195, \"y\": 785, \"size\": 2, \"color\": \"#fee6a7\"}, {\"id\": \"LYN\", \"label\": \"LYN\", \"x\": -195, \"y\": 850, \"size\": 5, \"color\": \"#fee6a7\"}, {\"id\": \"KIT\", \"label\": \"KIT\", \"x\": -866, \"y\": 359, \"size\": 4, \"color\": \"#fdefb1\"}, {\"id\": \"KPCA\", \"label\": \"KPCA\", \"x\": -764, \"y\": 1051, \"size\": 4, \"color\": \"#fedfa0\"}, {\"id\": \"SRC\", \"label\": \"SRC\", \"x\": -195, \"y\": 915, \"size\": 5, \"color\": \"#fee6a7\"}, {\"id\": \"MATK\", \"label\": \"MATK\", \"x\": -195, \"y\": 980, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"TEC\", \"label\": \"TEC\", \"x\": -195, \"y\": 1045, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"FGR\", \"label\": \"FGR\", \"x\": -130, \"y\": 655, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"KSYK\", \"label\": \"KSYK\", \"x\": -1116, \"y\": -829, \"size\": 4, \"color\": \"#ffd698\"}, {\"id\": \"FAK1\", \"label\": \"FAK1\", \"x\": -130, \"y\": 720, \"size\": 5, \"color\": \"#fee6a7\"}, {\"id\": \"VGFR2\", \"label\": \"VGFR2\", \"x\": -130, \"y\": 785, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"VGFR1\", \"label\": \"VGFR1\", \"x\": -195, \"y\": -1045, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"ATR\", \"label\": \"ATR\", \"x\": -325, \"y\": -325, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"TYK2\", \"label\": \"TYK2\", \"x\": -195, \"y\": -980, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"KPCD\", \"label\": \"KPCD\", \"x\": -195, \"y\": -915, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"BTK\", \"label\": \"BTK\", \"x\": -1116, \"y\": -764, \"size\": 4, \"color\": \"#ffd698\"}, {\"id\": \"KPCT\", \"label\": \"KPCT\", \"x\": -195, \"y\": -850, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"PRKDC\", \"label\": \"PRKDC\", \"x\": -325, \"y\": -260, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"FAK2\", \"label\": \"FAK2\", \"x\": -130, \"y\": 850, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"PK3CG\", \"label\": \"PK3CG\", \"x\": -195, \"y\": -785, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"MK03\", \"label\": \"MK03\", \"x\": 986, \"y\": -829, \"size\": 5, \"color\": \"#ffbe83\"}, {\"id\": \"M4K1\", \"label\": \"M4K1\", \"x\": 971, \"y\": 1395, \"size\": 3, \"color\": \"#ffb67d\"}, {\"id\": \"PGFRB\", \"label\": \"PGFRB\", \"x\": -866, \"y\": 424, \"size\": 4, \"color\": \"#fdefb1\"}, {\"id\": \"PK3CA\", \"label\": \"PK3CA\", \"x\": -195, \"y\": -720, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"K6PF\", \"label\": \"K6PF\", \"x\": 1171, \"y\": -466, \"size\": 2, \"color\": \"#ffad76\"}, {\"id\": \"K6PL\", \"label\": \"K6PL\", \"x\": 1171, \"y\": -401, \"size\": 3, \"color\": \"#ffad76\"}, {\"id\": \"PHKG1\", \"label\": \"PHKG1\", \"x\": 1051, \"y\": 764, \"size\": 1, \"color\": \"#ffa571\"}, {\"id\": \"PHKG2\", \"label\": \"PHKG2\", \"x\": 1116, \"y\": 764, \"size\": 2, \"color\": \"#ffa571\"}, {\"id\": \"PGFRA\", \"label\": \"PGFRA\", \"x\": -866, \"y\": 489, \"size\": 4, \"color\": \"#fdefb1\"}, {\"id\": \"E2AK2\", \"label\": \"E2AK2\", \"x\": -195, \"y\": -655, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"M3K5\", \"label\": \"M3K5\", \"x\": -931, \"y\": -619, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"IKKB\", \"label\": \"IKKB\", \"x\": -130, \"y\": -1045, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"MK01\", \"label\": \"MK01\", \"x\": 986, \"y\": -764, \"size\": 5, \"color\": \"#ffbe83\"}, {\"id\": \"MP2K1\", \"label\": \"MP2K1\", \"x\": 986, \"y\": -699, \"size\": 4, \"color\": \"#ffbe83\"}, {\"id\": \"ARAF\", \"label\": \"ARAF\", \"x\": 1051, \"y\": -829, \"size\": 3, \"color\": \"#ffbe83\"}, {\"id\": \"KS6A2\", \"label\": \"KS6A2\", \"x\": 336, \"y\": -1301, \"size\": 4, \"color\": \"#fe9567\"}, {\"id\": \"M3K4\", \"label\": \"M3K4\", \"x\": -931, \"y\": -554, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"KS6A4\", \"label\": \"KS6A4\", \"x\": 336, \"y\": -1236, \"size\": 3, \"color\": \"#fe9567\"}, {\"id\": \"TRIB1\", \"label\": \"TRIB1\", \"x\": -931, \"y\": -489, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"KSR2\", \"label\": \"KSR2\", \"x\": 1051, \"y\": -764, \"size\": 2, \"color\": \"#ffbe83\"}, {\"id\": \"EPHA8\", \"label\": \"EPHA8\", \"x\": -130, \"y\": 915, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"EPHA2\", \"label\": \"EPHA2\", \"x\": -130, \"y\": 980, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"ABL1\", \"label\": \"ABL1\", \"x\": -130, \"y\": 1045, \"size\": 5, \"color\": \"#fee6a7\"}, {\"id\": \"ZAP70\", \"label\": \"ZAP70\", \"x\": -1051, \"y\": -829, \"size\": 3, \"color\": \"#ffd698\"}, {\"id\": \"KPCE\", \"label\": \"KPCE\", \"x\": 670, \"y\": 1562, \"size\": 4, \"color\": \"#fd8d63\"}, {\"id\": \"NTRK3\", \"label\": \"NTRK3\", \"x\": 342, \"y\": 1665, \"size\": 3, \"color\": \"#fc8360\"}, {\"id\": \"KS6A3\", \"label\": \"KS6A3\", \"x\": 401, \"y\": -1301, \"size\": 4, \"color\": \"#fe9567\"}, {\"id\": \"MK14\", \"label\": \"MK14\", \"x\": -931, \"y\": -424, \"size\": 5, \"color\": \"#ff9e6c\"}, {\"id\": \"MP2K2\", \"label\": \"MP2K2\", \"x\": 1051, \"y\": -699, \"size\": 4, \"color\": \"#ffbe83\"}, {\"id\": \"KS6A1\", \"label\": \"KS6A1\", \"x\": 401, \"y\": -1236, \"size\": 4, \"color\": \"#fe9567\"}, {\"id\": \"NEK2\", \"label\": \"NEK2\", \"x\": -325, \"y\": -195, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"DYR1B\", \"label\": \"DYR1B\", \"x\": -931, \"y\": -359, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"MKNK2\", \"label\": \"MKNK2\", \"x\": 0, \"y\": 1700, \"size\": 3, \"color\": \"#fa7c5e\"}, {\"id\": \"MAPK5\", \"label\": \"MAPK5\", \"x\": -931, \"y\": -294, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"MKNK1\", \"label\": \"MKNK1\", \"x\": 1116, \"y\": -829, \"size\": 2, \"color\": \"#ffbe83\"}, {\"id\": \"KPCZ\", \"label\": \"KPCZ\", \"x\": -130, \"y\": -980, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"MYLK\", \"label\": \"MYLK\", \"x\": -342, \"y\": 1665, \"size\": 3, \"color\": \"#f8725c\"}, {\"id\": \"GSK3A\", \"label\": \"GSK3A\", \"x\": -130, \"y\": -915, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"KPCB\", \"label\": \"KPCB\", \"x\": -130, \"y\": -850, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"BMPR2\", \"label\": \"BMPR2\", \"x\": 606, \"y\": 294, \"size\": 3, \"color\": \"#f66b5c\"}, {\"id\": \"MK06\", \"label\": \"MK06\", \"x\": 764, \"y\": 1051, \"size\": 3, \"color\": \"#f3645d\"}, {\"id\": \"GSK3B\", \"label\": \"GSK3B\", \"x\": -130, \"y\": -785, \"size\": 5, \"color\": \"#ffce91\"}, {\"id\": \"PDPK1\", \"label\": \"PDPK1\", \"x\": -130, \"y\": -720, \"size\": 5, \"color\": \"#ffce91\"}, {\"id\": \"RIPK4\", \"label\": \"RIPK4\", \"x\": -130, \"y\": -655, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"HXK2\", \"label\": \"HXK2\", \"x\": -801, \"y\": 294, \"size\": 1, \"color\": \"#fdefb1\"}, {\"id\": \"PK3CB\", \"label\": \"PK3CB\", \"x\": -65, \"y\": -1045, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"KPCD1\", \"label\": \"KPCD1\", \"x\": -1236, \"y\": 401, \"size\": 3, \"color\": \"#ef5c5f\"}, {\"id\": \"AKT3\", \"label\": \"AKT3\", \"x\": -65, \"y\": -980, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"KPCG\", \"label\": \"KPCG\", \"x\": -699, \"y\": 1051, \"size\": 3, \"color\": \"#fedfa0\"}, {\"id\": \"MARK4\", \"label\": \"MARK4\", \"x\": -325, \"y\": -130, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"IRAK1\", \"label\": \"IRAK1\", \"x\": -866, \"y\": -619, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"MP2K5\", \"label\": \"MP2K5\", \"x\": -670, \"y\": 1562, \"size\": 2, \"color\": \"#eb5661\"}, {\"id\": \"DAPK3\", \"label\": \"DAPK3\", \"x\": -65, \"y\": 655, \"size\": 2, \"color\": \"#fee6a7\"}, {\"id\": \"KPYM\", \"label\": \"KPYM\", \"x\": -325, \"y\": -65, \"size\": 5, \"color\": \"#ffc78b\"}, {\"id\": \"MET\", \"label\": \"MET\", \"x\": -65, \"y\": 720, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"RET\", \"label\": \"RET\", \"x\": -971, \"y\": 1395, \"size\": 3, \"color\": \"#e54f65\"}, {\"id\": \"MK08\", \"label\": \"MK08\", \"x\": -866, \"y\": -554, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"MARK2\", \"label\": \"MARK2\", \"x\": -325, \"y\": 0, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"ITK\", \"label\": \"ITK\", \"x\": -65, \"y\": 785, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"BMX\", \"label\": \"BMX\", \"x\": -65, \"y\": 850, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"PKN1\", \"label\": \"PKN1\", \"x\": -866, \"y\": -489, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"MP2K6\", \"label\": \"MP2K6\", \"x\": -866, \"y\": -424, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"MK12\", \"label\": \"MK12\", \"x\": -866, \"y\": -359, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"OBSCN\", \"label\": \"OBSCN\", \"x\": -65, \"y\": 915, \"size\": 2, \"color\": \"#fee6a7\"}, {\"id\": \"TITIN\", \"label\": \"TITIN\", \"x\": -325, \"y\": 65, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"WEE1\", \"label\": \"WEE1\", \"x\": -325, \"y\": 130, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"CSK21\", \"label\": \"CSK21\", \"x\": -325, \"y\": 195, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"NTRK1\", \"label\": \"NTRK1\", \"x\": 1300, \"y\": 0, \"size\": 3, \"color\": \"#e04b68\"}, {\"id\": \"EPHB2\", \"label\": \"EPHB2\", \"x\": -65, \"y\": 980, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"M4K5\", \"label\": \"M4K5\", \"x\": -65, \"y\": 1045, \"size\": 2, \"color\": \"#fee6a7\"}, {\"id\": \"PAK2\", \"label\": \"PAK2\", \"x\": -986, \"y\": 764, \"size\": 4, \"color\": \"#fdf6b8\"}, {\"id\": \"ATM\", \"label\": \"ATM\", \"x\": -325, \"y\": 260, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"MOS\", \"label\": \"MOS\", \"x\": -325, \"y\": 325, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"DDR2\", \"label\": \"DDR2\", \"x\": 0, \"y\": 655, \"size\": 1, \"color\": \"#fee6a7\"}, {\"id\": \"KPCI\", \"label\": \"KPCI\", \"x\": -65, \"y\": -915, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"TXK\", \"label\": \"TXK\", \"x\": 0, \"y\": 720, \"size\": 2, \"color\": \"#fee6a7\"}, {\"id\": \"KAPCA\", \"label\": \"KAPCA\", \"x\": -466, \"y\": -1301, \"size\": 5, \"color\": \"#da476b\"}, {\"id\": \"GUC2C\", \"label\": \"GUC2C\", \"x\": 0, \"y\": 785, \"size\": 1, \"color\": \"#fee6a7\"}, {\"id\": \"MK15\", \"label\": \"MK15\", \"x\": -1232, \"y\": 1171, \"size\": 2, \"color\": \"#d3426f\"}, {\"id\": \"ERBB4\", \"label\": \"ERBB4\", \"x\": -401, \"y\": 1236, \"size\": 4, \"color\": \"#cc3f72\"}, {\"id\": \"ERBB3\", \"label\": \"ERBB3\", \"x\": -336, \"y\": 1236, \"size\": 4, \"color\": \"#cc3f72\"}, {\"id\": \"PTK6\", \"label\": \"PTK6\", \"x\": -801, \"y\": 359, \"size\": 3, \"color\": \"#fdefb1\"}, {\"id\": \"TGFR2\", \"label\": \"TGFR2\", \"x\": 606, \"y\": 359, \"size\": 4, \"color\": \"#f66b5c\"}, {\"id\": \"TGFR1\", \"label\": \"TGFR1\", \"x\": 606, \"y\": 424, \"size\": 4, \"color\": \"#f66b5c\"}, {\"id\": \"AMHR2\", \"label\": \"AMHR2\", \"x\": 606, \"y\": 489, \"size\": 1, \"color\": \"#f66b5c\"}, {\"id\": \"ACVL1\", \"label\": \"ACVL1\", \"x\": 671, \"y\": 294, \"size\": 2, \"color\": \"#f66b5c\"}, {\"id\": \"BMR1B\", \"label\": \"BMR1B\", \"x\": 671, \"y\": 359, \"size\": 4, \"color\": \"#f66b5c\"}, {\"id\": \"MLTK\", \"label\": \"MLTK\", \"x\": -866, \"y\": -294, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"IKKA\", \"label\": \"IKKA\", \"x\": -65, \"y\": -850, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"M3K8\", \"label\": \"M3K8\", \"x\": -1442, \"y\": 899, \"size\": 4, \"color\": \"#c43c75\"}, {\"id\": \"MP2K4\", \"label\": \"MP2K4\", \"x\": -801, \"y\": -619, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"M3K14\", \"label\": \"M3K14\", \"x\": -65, \"y\": -785, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"BRSK1\", \"label\": \"BRSK1\", \"x\": 606, \"y\": -554, \"size\": 2, \"color\": \"#be3978\"}, {\"id\": \"STK11\", \"label\": \"STK11\", \"x\": 606, \"y\": -489, \"size\": 4, \"color\": \"#be3978\"}, {\"id\": \"SMG1\", \"label\": \"SMG1\", \"x\": -65, \"y\": -720, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"IRAK2\", \"label\": \"IRAK2\", \"x\": -801, \"y\": -554, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"IRAK3\", \"label\": \"IRAK3\", \"x\": -801, \"y\": -489, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"IRAK4\", \"label\": \"IRAK4\", \"x\": -801, \"y\": -424, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"LCK\", \"label\": \"LCK\", \"x\": -1051, \"y\": -764, \"size\": 4, \"color\": \"#ffd698\"}, {\"id\": \"UFO\", \"label\": \"UFO\", \"x\": 0, \"y\": 850, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"TOPK\", \"label\": \"TOPK\", \"x\": -260, \"y\": -325, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"M3K12\", \"label\": \"M3K12\", \"x\": -801, \"y\": -359, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"M3K11\", \"label\": \"M3K11\", \"x\": -801, \"y\": -294, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"MP2K7\", \"label\": \"MP2K7\", \"x\": -736, \"y\": -619, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"M4K2\", \"label\": \"M4K2\", \"x\": -736, \"y\": -554, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"M3K10\", \"label\": \"M3K10\", \"x\": -736, \"y\": -489, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"JAK3\", \"label\": \"JAK3\", \"x\": -65, \"y\": -655, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"TIE1\", \"label\": \"TIE1\", \"x\": -801, \"y\": 424, \"size\": 1, \"color\": \"#fdefb1\"}, {\"id\": \"TIE2\", \"label\": \"TIE2\", \"x\": -801, \"y\": 489, \"size\": 4, \"color\": \"#fdefb1\"}, {\"id\": \"ARBK1\", \"label\": \"ARBK1\", \"x\": -260, \"y\": -260, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"MAPK3\", \"label\": \"MAPK3\", \"x\": -736, \"y\": -424, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"MP2K3\", \"label\": \"MP2K3\", \"x\": -736, \"y\": -359, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"EF2K\", \"label\": \"EF2K\", \"x\": 606, \"y\": -424, \"size\": 4, \"color\": \"#be3978\"}, {\"id\": \"STK39\", \"label\": \"STK39\", \"x\": -65, \"y\": -1365, \"size\": 2, \"color\": \"#b6367a\"}, {\"id\": \"MARK3\", \"label\": \"MARK3\", \"x\": 1116, \"y\": -764, \"size\": 3, \"color\": \"#ffbe83\"}, {\"id\": \"AAPK2\", \"label\": \"AAPK2\", \"x\": 606, \"y\": -359, \"size\": 4, \"color\": \"#be3978\"}, {\"id\": \"RYK\", \"label\": \"RYK\", \"x\": 0, \"y\": 915, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"EPHB3\", \"label\": \"EPHB3\", \"x\": 0, \"y\": 980, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"PLK4\", \"label\": \"PLK4\", \"x\": -260, \"y\": -195, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"EPHB6\", \"label\": \"EPHB6\", \"x\": 0, \"y\": 1045, \"size\": 2, \"color\": \"#fee6a7\"}, {\"id\": \"EPHB1\", \"label\": \"EPHB1\", \"x\": 65, \"y\": 655, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"M3K7\", \"label\": \"M3K7\", \"x\": -736, \"y\": -294, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"TRIO\", \"label\": \"TRIO\", \"x\": 65, \"y\": 720, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"BMR1A\", \"label\": \"BMR1A\", \"x\": 671, \"y\": 424, \"size\": 3, \"color\": \"#f66b5c\"}, {\"id\": \"LIMK1\", \"label\": \"LIMK1\", \"x\": 65, \"y\": 785, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"MERTK\", \"label\": \"MERTK\", \"x\": -1594, \"y\": 590, \"size\": 2, \"color\": \"#af347c\"}, {\"id\": \"DAPK1\", \"label\": \"DAPK1\", \"x\": 1116, \"y\": -699, \"size\": 3, \"color\": \"#ffbe83\"}, {\"id\": \"KCC2G\", \"label\": \"KCC2G\", \"x\": -1365, \"y\": -65, \"size\": 4, \"color\": \"#a9327e\"}, {\"id\": \"KGP2\", \"label\": \"KGP2\", \"x\": -1236, \"y\": -401, \"size\": 2, \"color\": \"#a0307f\"}, {\"id\": \"M3K2\", \"label\": \"M3K2\", \"x\": -671, \"y\": -619, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"MK13\", \"label\": \"MK13\", \"x\": -671, \"y\": -554, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"TAOK2\", \"label\": \"TAOK2\", \"x\": -260, \"y\": -130, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"AVR2B\", \"label\": \"AVR2B\", \"x\": 671, \"y\": 489, \"size\": 3, \"color\": \"#f66b5c\"}, {\"id\": \"ACV1B\", \"label\": \"ACV1B\", \"x\": 736, \"y\": 294, \"size\": 2, \"color\": \"#f66b5c\"}, {\"id\": \"ROCK1\", \"label\": \"ROCK1\", \"x\": 65, \"y\": 850, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"LIMK2\", \"label\": \"LIMK2\", \"x\": 65, \"y\": 915, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"MRCKA\", \"label\": \"MRCKA\", \"x\": 65, \"y\": 980, \"size\": 2, \"color\": \"#fee6a7\"}, {\"id\": \"PAK4\", \"label\": \"PAK4\", \"x\": 0, \"y\": 1300, \"size\": 3, \"color\": \"#9a2e80\"}, {\"id\": \"LATS1\", \"label\": \"LATS1\", \"x\": -260, \"y\": -65, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"MK09\", \"label\": \"MK09\", \"x\": -671, \"y\": -489, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"MK10\", \"label\": \"MK10\", \"x\": -671, \"y\": -424, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"M3K3\", \"label\": \"M3K3\", \"x\": -671, \"y\": -359, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"TIF1A\", \"label\": \"TIF1A\", \"x\": -260, \"y\": 0, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"TIF1B\", \"label\": \"TIF1B\", \"x\": -260, \"y\": 65, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"PLK1\", \"label\": \"PLK1\", \"x\": -260, \"y\": 130, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"PMYT1\", \"label\": \"PMYT1\", \"x\": -260, \"y\": 195, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"CHK2\", \"label\": \"CHK2\", \"x\": -260, \"y\": 260, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"KS6A5\", \"label\": \"KS6A5\", \"x\": 466, \"y\": -1301, \"size\": 3, \"color\": \"#fe9567\"}, {\"id\": \"MARK1\", \"label\": \"MARK1\", \"x\": -260, \"y\": 325, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"STRAB\", \"label\": \"STRAB\", \"x\": 671, \"y\": -554, \"size\": 1, \"color\": \"#be3978\"}, {\"id\": \"KS6B1\", \"label\": \"KS6B1\", \"x\": 0, \"y\": -1045, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"STRAA\", \"label\": \"STRAA\", \"x\": 671, \"y\": -489, \"size\": 1, \"color\": \"#be3978\"}, {\"id\": \"TAOK1\", \"label\": \"TAOK1\", \"x\": -195, \"y\": -325, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"ILK\", \"label\": \"ILK\", \"x\": 0, \"y\": -980, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"BUB1B\", \"label\": \"BUB1B\", \"x\": -195, \"y\": -260, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"ERN1\", \"label\": \"ERN1\", \"x\": -671, \"y\": -294, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"M3K6\", \"label\": \"M3K6\", \"x\": -606, \"y\": -619, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"MK07\", \"label\": \"MK07\", \"x\": -1680, \"y\": 257, \"size\": 4, \"color\": \"#922b81\"}, {\"id\": \"SGK1\", \"label\": \"SGK1\", \"x\": 0, \"y\": -915, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"PDK2\", \"label\": \"PDK2\", \"x\": 0, \"y\": -850, \"size\": 2, \"color\": \"#ffce91\"}, {\"id\": \"PDK1\", \"label\": \"PDK1\", \"x\": 0, \"y\": -785, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"RIPK1\", \"label\": \"RIPK1\", \"x\": 0, \"y\": -720, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"PKN2\", \"label\": \"PKN2\", \"x\": -606, \"y\": -554, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"OXSR1\", \"label\": \"OXSR1\", \"x\": -65, \"y\": -1300, \"size\": 3, \"color\": \"#b6367a\"}, {\"id\": \"PI3R4\", \"label\": \"PI3R4\", \"x\": 671, \"y\": -424, \"size\": 2, \"color\": \"#be3978\"}, {\"id\": \"PK3C3\", \"label\": \"PK3C3\", \"x\": 671, \"y\": -359, \"size\": 2, \"color\": \"#be3978\"}, {\"id\": \"M4K4\", \"label\": \"M4K4\", \"x\": -606, \"y\": -489, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"AAPK1\", \"label\": \"AAPK1\", \"x\": 736, \"y\": -554, \"size\": 4, \"color\": \"#be3978\"}, {\"id\": \"MK11\", \"label\": \"MK11\", \"x\": -606, \"y\": -424, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"PLK3\", \"label\": \"PLK3\", \"x\": -1697, \"y\": -86, \"size\": 2, \"color\": \"#8b2982\"}, {\"id\": \"NEK6\", \"label\": \"NEK6\", \"x\": -195, \"y\": -195, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"KKCC1\", \"label\": \"KKCC1\", \"x\": -1645, \"y\": -426, \"size\": 2, \"color\": \"#852682\"}, {\"id\": \"CHK1\", \"label\": \"CHK1\", \"x\": -195, \"y\": -130, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"TLK1\", \"label\": \"TLK1\", \"x\": -195, \"y\": -65, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"E2AK3\", \"label\": \"E2AK3\", \"x\": 0, \"y\": -655, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"M3K13\", \"label\": \"M3K13\", \"x\": -606, \"y\": -359, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"RIPK3\", \"label\": \"RIPK3\", \"x\": 65, \"y\": -1045, \"size\": 2, \"color\": \"#ffce91\"}, {\"id\": \"TAOK3\", \"label\": \"TAOK3\", \"x\": -195, \"y\": 0, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"TSSK1\", \"label\": \"TSSK1\", \"x\": 736, \"y\": 359, \"size\": 2, \"color\": \"#f66b5c\"}, {\"id\": \"NEK9\", \"label\": \"NEK9\", \"x\": -195, \"y\": 65, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"CDK7\", \"label\": \"CDK7\", \"x\": -195, \"y\": 130, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"KKCC2\", \"label\": \"KKCC2\", \"x\": 736, \"y\": -489, \"size\": 3, \"color\": \"#be3978\"}, {\"id\": \"KCC1A\", \"label\": \"KCC1A\", \"x\": 401, \"y\": 1236, \"size\": 3, \"color\": \"#7d2482\"}, {\"id\": \"SGK3\", \"label\": \"SGK3\", \"x\": 65, \"y\": -980, \"size\": 2, \"color\": \"#ffce91\"}, {\"id\": \"SGK2\", \"label\": \"SGK2\", \"x\": 1365, \"y\": 0, \"size\": 1, \"color\": \"#e04b68\"}, {\"id\": \"KS6B2\", \"label\": \"KS6B2\", \"x\": 65, \"y\": -915, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"KPCL\", \"label\": \"KPCL\", \"x\": 65, \"y\": -850, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"KPCD3\", \"label\": \"KPCD3\", \"x\": -1171, \"y\": 401, \"size\": 2, \"color\": \"#ef5c5f\"}, {\"id\": \"NEK7\", \"label\": \"NEK7\", \"x\": -195, \"y\": 195, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"NLK\", \"label\": \"NLK\", \"x\": -606, \"y\": -294, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"HIPK2\", \"label\": \"HIPK2\", \"x\": -541, \"y\": -619, \"size\": 3, \"color\": \"#ff9e6c\"}, {\"id\": \"TRPM7\", \"label\": \"TRPM7\", \"x\": 736, \"y\": -424, \"size\": 1, \"color\": \"#be3978\"}, {\"id\": \"TRPM6\", \"label\": \"TRPM6\", \"x\": 736, \"y\": -359, \"size\": 1, \"color\": \"#be3978\"}, {\"id\": \"KCC4\", \"label\": \"KCC4\", \"x\": 801, \"y\": -554, \"size\": 1, \"color\": \"#be3978\"}, {\"id\": \"DAPK2\", \"label\": \"DAPK2\", \"x\": 736, \"y\": 424, \"size\": 1, \"color\": \"#f66b5c\"}, {\"id\": \"KCC2A\", \"label\": \"KCC2A\", \"x\": -1365, \"y\": 0, \"size\": 4, \"color\": \"#a9327e\"}, {\"id\": \"MAPK2\", \"label\": \"MAPK2\", \"x\": -541, \"y\": -554, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"CSK22\", \"label\": \"CSK22\", \"x\": -195, \"y\": 260, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"MAST2\", \"label\": \"MAST2\", \"x\": -195, \"y\": 325, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"STK36\", \"label\": \"STK36\", \"x\": -130, \"y\": -325, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"CDK9\", \"label\": \"CDK9\", \"x\": -130, \"y\": -260, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"TLK2\", \"label\": \"TLK2\", \"x\": -1526, \"y\": -748, \"size\": 1, \"color\": \"#772182\"}, {\"id\": \"BRSK2\", \"label\": \"BRSK2\", \"x\": -1344, \"y\": -1040, \"size\": 1, \"color\": \"#6f1e82\"}, {\"id\": \"AKT1\", \"label\": \"AKT1\", \"x\": 65, \"y\": -785, \"size\": 5, \"color\": \"#ffce91\"}, {\"id\": \"KCC1D\", \"label\": \"KCC1D\", \"x\": 466, \"y\": 1236, \"size\": 2, \"color\": \"#7d2482\"}, {\"id\": \"CDK2\", \"label\": \"CDK2\", \"x\": -130, \"y\": -195, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"ACVR1\", \"label\": \"ACVR1\", \"x\": 736, \"y\": 489, \"size\": 3, \"color\": \"#f66b5c\"}, {\"id\": \"NEK8\", \"label\": \"NEK8\", \"x\": 801, \"y\": 294, \"size\": 2, \"color\": \"#f66b5c\"}, {\"id\": \"NUAK2\", \"label\": \"NUAK2\", \"x\": -1107, \"y\": -1289, \"size\": 2, \"color\": \"#691c81\"}, {\"id\": \"AURKB\", \"label\": \"AURKB\", \"x\": -130, \"y\": -130, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"CDK4\", \"label\": \"CDK4\", \"x\": -130, \"y\": -65, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"STK35\", \"label\": \"STK35\", \"x\": 801, \"y\": 359, \"size\": 1, \"color\": \"#f66b5c\"}, {\"id\": \"CDK6\", \"label\": \"CDK6\", \"x\": -130, \"y\": 0, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"CDKL1\", \"label\": \"CDKL1\", \"x\": 801, \"y\": 424, \"size\": 1, \"color\": \"#f66b5c\"}, {\"id\": \"KC1A\", \"label\": \"KC1A\", \"x\": 1232, \"y\": 1171, \"size\": 4, \"color\": \"#621980\"}, {\"id\": \"E2AK4\", \"label\": \"E2AK4\", \"x\": 65, \"y\": -720, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"IGF1R\", \"label\": \"IGF1R\", \"x\": 65, \"y\": -655, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"MYO3A\", \"label\": \"MYO3A\", \"x\": 801, \"y\": 489, \"size\": 1, \"color\": \"#f66b5c\"}, {\"id\": \"TSSK4\", \"label\": \"TSSK4\", \"x\": 866, \"y\": 294, \"size\": 1, \"color\": \"#f66b5c\"}, {\"id\": \"RAF1\", \"label\": \"RAF1\", \"x\": 1181, \"y\": -829, \"size\": 5, \"color\": \"#ffbe83\"}, {\"id\": \"STK3\", \"label\": \"STK3\", \"x\": -130, \"y\": 65, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"STK4\", \"label\": \"STK4\", \"x\": -130, \"y\": 130, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"LATS2\", \"label\": \"LATS2\", \"x\": -130, \"y\": 195, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"CDC7\", \"label\": \"CDC7\", \"x\": -130, \"y\": 260, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"EGFR\", \"label\": \"EGFR\", \"x\": -736, \"y\": 294, \"size\": 5, \"color\": \"#fdefb1\"}, {\"id\": \"VGFR3\", \"label\": \"VGFR3\", \"x\": 130, \"y\": -1045, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"FGFR3\", \"label\": \"FGFR3\", \"x\": -736, \"y\": 359, \"size\": 4, \"color\": \"#fdefb1\"}, {\"id\": \"NDKA\", \"label\": \"NDKA\", \"x\": 699, \"y\": -1116, \"size\": 2, \"color\": \"#5b167f\"}, {\"id\": \"NDKM\", \"label\": \"NDKM\", \"x\": 699, \"y\": -1051, \"size\": 1, \"color\": \"#5b167f\"}, {\"id\": \"CLK2\", \"label\": \"CLK2\", \"x\": -130, \"y\": 325, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"CLK3\", \"label\": \"CLK3\", \"x\": -65, \"y\": -325, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"JAK2\", \"label\": \"JAK2\", \"x\": -825, \"y\": -1486, \"size\": 4, \"color\": \"#54137d\"}, {\"id\": \"FES\", \"label\": \"FES\", \"x\": 65, \"y\": 1045, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"KALRN\", \"label\": \"KALRN\", \"x\": 130, \"y\": 655, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"EPHA4\", \"label\": \"EPHA4\", \"x\": 130, \"y\": 720, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"FGFR1\", \"label\": \"FGFR1\", \"x\": -736, \"y\": 424, \"size\": 4, \"color\": \"#fdefb1\"}, {\"id\": \"FGFR2\", \"label\": \"FGFR2\", \"x\": -736, \"y\": 489, \"size\": 4, \"color\": \"#fdefb1\"}, {\"id\": \"FYN\", \"label\": \"FYN\", \"x\": 130, \"y\": 785, \"size\": 5, \"color\": \"#fee6a7\"}, {\"id\": \"HCK\", \"label\": \"HCK\", \"x\": 130, \"y\": 850, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"INSR\", \"label\": \"INSR\", \"x\": 1171, \"y\": 336, \"size\": 3, \"color\": \"#fdfec0\"}, {\"id\": \"JAK1\", \"label\": \"JAK1\", \"x\": 130, \"y\": -980, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"WNK1\", \"label\": \"WNK1\", \"x\": 0, \"y\": -1365, \"size\": 3, \"color\": \"#b6367a\"}, {\"id\": \"RIPK2\", \"label\": \"RIPK2\", \"x\": -541, \"y\": -489, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"PI51B\", \"label\": \"PI51B\", \"x\": -829, \"y\": -1116, \"size\": 2, \"color\": \"#4c117a\"}, {\"id\": \"PI42B\", \"label\": \"PI42B\", \"x\": 130, \"y\": -915, \"size\": 2, \"color\": \"#ffce91\"}, {\"id\": \"PI51A\", \"label\": \"PI51A\", \"x\": -829, \"y\": -1051, \"size\": 3, \"color\": \"#4c117a\"}, {\"id\": \"PI51C\", \"label\": \"PI51C\", \"x\": -829, \"y\": -986, \"size\": 2, \"color\": \"#4c117a\"}, {\"id\": \"PI42A\", \"label\": \"PI42A\", \"x\": -764, \"y\": -1116, \"size\": 3, \"color\": \"#4c117a\"}, {\"id\": \"PI42C\", \"label\": \"PI42C\", \"x\": -764, \"y\": -1051, \"size\": 2, \"color\": \"#4c117a\"}, {\"id\": \"TBK1\", \"label\": \"TBK1\", \"x\": 130, \"y\": -850, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"AVR2A\", \"label\": \"AVR2A\", \"x\": 866, \"y\": 359, \"size\": 3, \"color\": \"#f66b5c\"}, {\"id\": \"SG196\", \"label\": \"SG196\", \"x\": 866, \"y\": 424, \"size\": 1, \"color\": \"#f66b5c\"}, {\"id\": \"SNRK\", \"label\": \"SNRK\", \"x\": 801, \"y\": -489, \"size\": 2, \"color\": \"#be3978\"}, {\"id\": \"CDK5\", \"label\": \"CDK5\", \"x\": -65, \"y\": -260, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"KC1D\", \"label\": \"KC1D\", \"x\": -65, \"y\": -195, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"GAK\", \"label\": \"GAK\", \"x\": -65, \"y\": -130, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"KCC2B\", \"label\": \"KCC2B\", \"x\": -1300, \"y\": -65, \"size\": 4, \"color\": \"#a9327e\"}, {\"id\": \"KCC2D\", \"label\": \"KCC2D\", \"x\": -1300, \"y\": 0, \"size\": 4, \"color\": \"#a9327e\"}, {\"id\": \"ST38L\", \"label\": \"ST38L\", \"x\": -65, \"y\": -65, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"STK24\", \"label\": \"STK24\", \"x\": -65, \"y\": 0, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"BUB1\", \"label\": \"BUB1\", \"x\": -65, \"y\": 65, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"WNK4\", \"label\": \"WNK4\", \"x\": 0, \"y\": -1300, \"size\": 2, \"color\": \"#b6367a\"}, {\"id\": \"FGFR4\", \"label\": \"FGFR4\", \"x\": -671, \"y\": 294, \"size\": 4, \"color\": \"#fdefb1\"}, {\"id\": \"CSK\", \"label\": \"CSK\", \"x\": 130, \"y\": 915, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"AGK\", \"label\": \"AGK\", \"x\": 130, \"y\": 980, \"size\": 1, \"color\": \"#fee6a7\"}, {\"id\": \"KSR1\", \"label\": \"KSR1\", \"x\": 1181, \"y\": -764, \"size\": 3, \"color\": \"#ffbe83\"}, {\"id\": \"P3C2A\", \"label\": \"P3C2A\", \"x\": -764, \"y\": -986, \"size\": 2, \"color\": \"#4c117a\"}, {\"id\": \"PIM1\", \"label\": \"PIM1\", \"x\": 130, \"y\": 1045, \"size\": 2, \"color\": \"#fee6a7\"}, {\"id\": \"EPHA3\", \"label\": \"EPHA3\", \"x\": 195, \"y\": 655, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"NEK11\", \"label\": \"NEK11\", \"x\": -65, \"y\": 130, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"MK04\", \"label\": \"MK04\", \"x\": 829, \"y\": 1051, \"size\": 2, \"color\": \"#f3645d\"}, {\"id\": \"FER\", \"label\": \"FER\", \"x\": -671, \"y\": 359, \"size\": 3, \"color\": \"#fdefb1\"}, {\"id\": \"ACK1\", \"label\": \"ACK1\", \"x\": 195, \"y\": 720, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"CSF1R\", \"label\": \"CSF1R\", \"x\": 130, \"y\": -785, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"NTRK2\", \"label\": \"NTRK2\", \"x\": 195, \"y\": 785, \"size\": 2, \"color\": \"#fee6a7\"}, {\"id\": \"ABL2\", \"label\": \"ABL2\", \"x\": 195, \"y\": 850, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"INSRR\", \"label\": \"INSRR\", \"x\": 1171, \"y\": 401, \"size\": 1, \"color\": \"#fdfec0\"}, {\"id\": \"NDK3\", \"label\": \"NDK3\", \"x\": 764, \"y\": -1116, \"size\": 2, \"color\": \"#5b167f\"}, {\"id\": \"NDKB\", \"label\": \"NDKB\", \"x\": 764, \"y\": -1051, \"size\": 2, \"color\": \"#5b167f\"}, {\"id\": \"ALK\", \"label\": \"ALK\", \"x\": -508, \"y\": -1622, \"size\": 3, \"color\": \"#461077\"}, {\"id\": \"HIPK3\", \"label\": \"HIPK3\", \"x\": 195, \"y\": 915, \"size\": 1, \"color\": \"#fee6a7\"}, {\"id\": \"AKT2\", \"label\": \"AKT2\", \"x\": 130, \"y\": -720, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"TRIB3\", \"label\": \"TRIB3\", \"x\": 130, \"y\": -655, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"PAK3\", \"label\": \"PAK3\", \"x\": -921, \"y\": 764, \"size\": 3, \"color\": \"#fdf6b8\"}, {\"id\": \"DMPK\", \"label\": \"DMPK\", \"x\": 1181, \"y\": -699, \"size\": 1, \"color\": \"#ffbe83\"}, {\"id\": \"MST4\", \"label\": \"MST4\", \"x\": -65, \"y\": 195, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"IKKE\", \"label\": \"IKKE\", \"x\": 195, \"y\": -1045, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"ROCK2\", \"label\": \"ROCK2\", \"x\": 195, \"y\": 980, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"DUSTY\", \"label\": \"DUSTY\", \"x\": -65, \"y\": 260, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"LRRK1\", \"label\": \"LRRK1\", \"x\": -171, \"y\": -1691, \"size\": 3, \"color\": \"#3d0f71\"}, {\"id\": \"STK25\", \"label\": \"STK25\", \"x\": -65, \"y\": 325, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"PASK\", \"label\": \"PASK\", \"x\": 801, \"y\": -424, \"size\": 2, \"color\": \"#be3978\"}, {\"id\": \"STK16\", \"label\": \"STK16\", \"x\": 801, \"y\": -359, \"size\": 2, \"color\": \"#be3978\"}, {\"id\": \"TTBK1\", \"label\": \"TTBK1\", \"x\": 0, \"y\": -325, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"TTBK2\", \"label\": \"TTBK2\", \"x\": 0, \"y\": -260, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"LMTK1\", \"label\": \"LMTK1\", \"x\": 65, \"y\": -1365, \"size\": 1, \"color\": \"#b6367a\"}, {\"id\": \"LMTK2\", \"label\": \"LMTK2\", \"x\": 0, \"y\": -195, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"M3K1\", \"label\": \"M3K1\", \"x\": -541, \"y\": -424, \"size\": 4, \"color\": \"#ff9e6c\"}, {\"id\": \"PK3CD\", \"label\": \"PK3CD\", \"x\": 195, \"y\": -980, \"size\": 4, \"color\": \"#ffce91\"}, {\"id\": \"PAK6\", \"label\": \"PAK6\", \"x\": 65, \"y\": 1300, \"size\": 3, \"color\": \"#9a2e80\"}, {\"id\": \"PI4KA\", \"label\": \"PI4KA\", \"x\": -699, \"y\": -1116, \"size\": 2, \"color\": \"#4c117a\"}, {\"id\": \"LTK\", \"label\": \"LTK\", \"x\": 0, \"y\": -130, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"MLKL\", \"label\": \"MLKL\", \"x\": 195, \"y\": -915, \"size\": 2, \"color\": \"#ffce91\"}, {\"id\": \"CDK1\", \"label\": \"CDK1\", \"x\": 0, \"y\": -65, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"BRD4\", \"label\": \"BRD4\", \"x\": 0, \"y\": 0, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"VRK2\", \"label\": \"VRK2\", \"x\": 866, \"y\": 489, \"size\": 3, \"color\": \"#f66b5c\"}, {\"id\": \"UHMK1\", \"label\": \"UHMK1\", \"x\": 195, \"y\": 1045, \"size\": 1, \"color\": \"#fee6a7\"}, {\"id\": \"CDKL5\", \"label\": \"CDKL5\", \"x\": 260, \"y\": 655, \"size\": 2, \"color\": \"#fee6a7\"}, {\"id\": \"WNK2\", \"label\": \"WNK2\", \"x\": 65, \"y\": -1300, \"size\": 2, \"color\": \"#b6367a\"}, {\"id\": \"MYLK2\", \"label\": \"MYLK2\", \"x\": 130, \"y\": 1300, \"size\": 2, \"color\": \"#9a2e80\"}, {\"id\": \"GUC2D\", \"label\": \"GUC2D\", \"x\": 260, \"y\": 720, \"size\": 1, \"color\": \"#fee6a7\"}, {\"id\": \"EPHB4\", \"label\": \"EPHB4\", \"x\": 260, \"y\": 785, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"KAD2\", \"label\": \"KAD2\", \"x\": 829, \"y\": -1116, \"size\": 2, \"color\": \"#5b167f\"}, {\"id\": \"KHK\", \"label\": \"KHK\", \"x\": 195, \"y\": -850, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"TNIK\", \"label\": \"TNIK\", \"x\": -541, \"y\": -359, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"PDXK\", \"label\": \"PDXK\", \"x\": 195, \"y\": -785, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"MELK\", \"label\": \"MELK\", \"x\": 866, \"y\": -554, \"size\": 2, \"color\": \"#be3978\"}, {\"id\": \"SLK\", \"label\": \"SLK\", \"x\": 195, \"y\": -720, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"ROR1\", \"label\": \"ROR1\", \"x\": -271, \"y\": 1236, \"size\": 2, \"color\": \"#cc3f72\"}, {\"id\": \"VRK1\", \"label\": \"VRK1\", \"x\": 0, \"y\": 65, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"VRK3\", \"label\": \"VRK3\", \"x\": 0, \"y\": 130, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"P4K2B\", \"label\": \"P4K2B\", \"x\": -699, \"y\": -1051, \"size\": 2, \"color\": \"#4c117a\"}, {\"id\": \"PGK1\", \"label\": \"PGK1\", \"x\": -699, \"y\": -986, \"size\": 2, \"color\": \"#4c117a\"}, {\"id\": \"BRAF\", \"label\": \"BRAF\", \"x\": 1246, \"y\": -829, \"size\": 4, \"color\": \"#ffbe83\"}, {\"id\": \"KPCD2\", \"label\": \"KPCD2\", \"x\": 171, \"y\": -1691, \"size\": 3, \"color\": \"#36106b\"}, {\"id\": \"BLK\", \"label\": \"BLK\", \"x\": 508, \"y\": -1622, \"size\": 2, \"color\": \"#2f1163\"}, {\"id\": \"KC1E\", \"label\": \"KC1E\", \"x\": 0, \"y\": 195, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"CSKP\", \"label\": \"CSKP\", \"x\": 0, \"y\": 260, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"HIPK1\", \"label\": \"HIPK1\", \"x\": 0, \"y\": 325, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"SIK3\", \"label\": \"SIK3\", \"x\": 1236, \"y\": 336, \"size\": 2, \"color\": \"#fdfec0\"}, {\"id\": \"EPHA1\", \"label\": \"EPHA1\", \"x\": 260, \"y\": 850, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"ULK2\", \"label\": \"ULK2\", \"x\": 866, \"y\": -489, \"size\": 3, \"color\": \"#be3978\"}, {\"id\": \"MRCKB\", \"label\": \"MRCKB\", \"x\": 825, \"y\": -1486, \"size\": 2, \"color\": \"#271258\"}, {\"id\": \"ULK1\", \"label\": \"ULK1\", \"x\": 866, \"y\": -424, \"size\": 2, \"color\": \"#be3978\"}, {\"id\": \"MAST1\", \"label\": \"MAST1\", \"x\": 65, \"y\": -325, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"MAST3\", \"label\": \"MAST3\", \"x\": 1107, \"y\": -1289, \"size\": 2, \"color\": \"#21114e\"}, {\"id\": \"M3KL4\", \"label\": \"M3KL4\", \"x\": -541, \"y\": -294, \"size\": 1, \"color\": \"#ff9e6c\"}, {\"id\": \"DYR1A\", \"label\": \"DYR1A\", \"x\": -476, \"y\": -619, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"SRPK1\", \"label\": \"SRPK1\", \"x\": 65, \"y\": -260, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"SRPK2\", \"label\": \"SRPK2\", \"x\": 65, \"y\": -195, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"NUAK1\", \"label\": \"NUAK1\", \"x\": 65, \"y\": -130, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"LRRK2\", \"label\": \"LRRK2\", \"x\": 65, \"y\": -65, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"NDK7\", \"label\": \"NDK7\", \"x\": 65, \"y\": 0, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"TESK1\", \"label\": \"TESK1\", \"x\": 1236, \"y\": -466, \"size\": 1, \"color\": \"#ffad76\"}, {\"id\": \"RIOK3\", \"label\": \"RIOK3\", \"x\": 1344, \"y\": -1040, \"size\": 2, \"color\": \"#1a1042\"}, {\"id\": \"K6PP\", \"label\": \"K6PP\", \"x\": 1236, \"y\": -401, \"size\": 3, \"color\": \"#ffad76\"}, {\"id\": \"PLK2\", \"label\": \"PLK2\", \"x\": 65, \"y\": 65, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"PDK3\", \"label\": \"PDK3\", \"x\": 1526, \"y\": -748, \"size\": 1, \"color\": \"#150e39\"}, {\"id\": \"KAPCB\", \"label\": \"KAPCB\", \"x\": -466, \"y\": -1236, \"size\": 4, \"color\": \"#da476b\"}, {\"id\": \"SIK2\", \"label\": \"SIK2\", \"x\": 1236, \"y\": 401, \"size\": 2, \"color\": \"#fdfec0\"}, {\"id\": \"KGP1\", \"label\": \"KGP1\", \"x\": -1171, \"y\": -401, \"size\": 3, \"color\": \"#a0307f\"}, {\"id\": \"SIK1\", \"label\": \"SIK1\", \"x\": 866, \"y\": -359, \"size\": 2, \"color\": \"#be3978\"}, {\"id\": \"MTOR\", \"label\": \"MTOR\", \"x\": 195, \"y\": -655, \"size\": 3, \"color\": \"#ffce91\"}, {\"id\": \"STK38\", \"label\": \"STK38\", \"x\": 65, \"y\": 130, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"PTK7\", \"label\": \"PTK7\", \"x\": 260, \"y\": 915, \"size\": 1, \"color\": \"#fee6a7\"}, {\"id\": \"TTK\", \"label\": \"TTK\", \"x\": 65, \"y\": 195, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"NRBP\", \"label\": \"NRBP\", \"x\": 260, \"y\": -1045, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"KS6A6\", \"label\": \"KS6A6\", \"x\": 466, \"y\": -1236, \"size\": 3, \"color\": \"#fe9567\"}, {\"id\": \"PIM2\", \"label\": \"PIM2\", \"x\": 260, \"y\": -980, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"DDR1\", \"label\": \"DDR1\", \"x\": 65, \"y\": 260, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"MOK\", \"label\": \"MOK\", \"x\": 1645, \"y\": -426, \"size\": 1, \"color\": \"#110c2f\"}, {\"id\": \"DYRK2\", \"label\": \"DYRK2\", \"x\": 65, \"y\": 325, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"FAKD5\", \"label\": \"FAKD5\", \"x\": 894, \"y\": 1051, \"size\": 2, \"color\": \"#f3645d\"}, {\"id\": \"CDK13\", \"label\": \"CDK13\", \"x\": 130, \"y\": -325, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"CDK16\", \"label\": \"CDK16\", \"x\": 130, \"y\": -260, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"BRD2\", \"label\": \"BRD2\", \"x\": 130, \"y\": -195, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"ANPRA\", \"label\": \"ANPRA\", \"x\": -401, \"y\": -1301, \"size\": 1, \"color\": \"#da476b\"}, {\"id\": \"KCRM\", \"label\": \"KCRM\", \"x\": 130, \"y\": -130, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"KAPCG\", \"label\": \"KAPCG\", \"x\": -401, \"y\": -1236, \"size\": 3, \"color\": \"#da476b\"}, {\"id\": \"CDK17\", \"label\": \"CDK17\", \"x\": 130, \"y\": -65, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"ADCK3\", \"label\": \"ADCK3\", \"x\": -476, \"y\": -554, \"size\": 2, \"color\": \"#ff9e6c\"}, {\"id\": \"CD11A\", \"label\": \"CD11A\", \"x\": 130, \"y\": 0, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"ROS1\", \"label\": \"ROS1\", \"x\": 1697, \"y\": -86, \"size\": 3, \"color\": \"#0b0924\"}, {\"id\": \"CDK20\", \"label\": \"CDK20\", \"x\": 130, \"y\": 65, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"MAK\", \"label\": \"MAK\", \"x\": 130, \"y\": 130, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"BRD3\", \"label\": \"BRD3\", \"x\": 130, \"y\": 195, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"CD11B\", \"label\": \"CD11B\", \"x\": 130, \"y\": 260, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"CDK15\", \"label\": \"CDK15\", \"x\": 130, \"y\": 325, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"CDK19\", \"label\": \"CDK19\", \"x\": 195, \"y\": -325, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"CDK8\", \"label\": \"CDK8\", \"x\": 195, \"y\": -260, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"MRCKG\", \"label\": \"MRCKG\", \"x\": 260, \"y\": -915, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"KAD1\", \"label\": \"KAD1\", \"x\": 195, \"y\": -195, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"CDK3\", \"label\": \"CDK3\", \"x\": 195, \"y\": -130, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"EPHA7\", \"label\": \"EPHA7\", \"x\": 260, \"y\": 980, \"size\": 4, \"color\": \"#fee6a7\"}, {\"id\": \"M4K3\", \"label\": \"M4K3\", \"x\": -476, \"y\": -489, \"size\": 1, \"color\": \"#ff9e6c\"}, {\"id\": \"RIOK2\", \"label\": \"RIOK2\", \"x\": 195, \"y\": -65, \"size\": 3, \"color\": \"#ffc78b\"}, {\"id\": \"RIOK1\", \"label\": \"RIOK1\", \"x\": 195, \"y\": 0, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"PINK1\", \"label\": \"PINK1\", \"x\": 195, \"y\": 65, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"ICK\", \"label\": \"ICK\", \"x\": 195, \"y\": 130, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"HXK1\", \"label\": \"HXK1\", \"x\": 260, \"y\": -850, \"size\": 2, \"color\": \"#ffce91\"}, {\"id\": \"GRK5\", \"label\": \"GRK5\", \"x\": 195, \"y\": 195, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"BMP2K\", \"label\": \"BMP2K\", \"x\": 260, \"y\": 1045, \"size\": 1, \"color\": \"#fee6a7\"}, {\"id\": \"FRK\", \"label\": \"FRK\", \"x\": 325, \"y\": 655, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"ROR2\", \"label\": \"ROR2\", \"x\": 260, \"y\": -785, \"size\": 2, \"color\": \"#ffce91\"}, {\"id\": \"HASP\", \"label\": \"HASP\", \"x\": 195, \"y\": 260, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"PRP4B\", \"label\": \"PRP4B\", \"x\": 195, \"y\": 325, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"GWL\", \"label\": \"GWL\", \"x\": 531, \"y\": -1301, \"size\": 1, \"color\": \"#fe9567\"}, {\"id\": \"CLK4\", \"label\": \"CLK4\", \"x\": 260, \"y\": -325, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"HIPK4\", \"label\": \"HIPK4\", \"x\": 1246, \"y\": -764, \"size\": 2, \"color\": \"#ffbe83\"}, {\"id\": \"CDK14\", \"label\": \"CDK14\", \"x\": 260, \"y\": -260, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"DYRK4\", \"label\": \"DYRK4\", \"x\": 1680, \"y\": 257, \"size\": 1, \"color\": \"#07061c\"}, {\"id\": \"CDK18\", \"label\": \"CDK18\", \"x\": 260, \"y\": -195, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"STYK1\", \"label\": \"STYK1\", \"x\": 260, \"y\": -720, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"CDK12\", \"label\": \"CDK12\", \"x\": 260, \"y\": -130, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"DCLK3\", \"label\": \"DCLK3\", \"x\": 260, \"y\": -65, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"CDKL3\", \"label\": \"CDKL3\", \"x\": 260, \"y\": 0, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"CLK1\", \"label\": \"CLK1\", \"x\": 260, \"y\": 65, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"SRPK3\", \"label\": \"SRPK3\", \"x\": 260, \"y\": 130, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"AURKC\", \"label\": \"AURKC\", \"x\": 260, \"y\": 195, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"ARBK2\", \"label\": \"ARBK2\", \"x\": 260, \"y\": 260, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"ADCK4\", \"label\": \"ADCK4\", \"x\": 260, \"y\": -655, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"PRPK\", \"label\": \"PRPK\", \"x\": 1297, \"y\": 1171, \"size\": 2, \"color\": \"#621980\"}, {\"id\": \"KCC1G\", \"label\": \"KCC1G\", \"x\": 531, \"y\": 1236, \"size\": 1, \"color\": \"#7d2482\"}, {\"id\": \"NEK1\", \"label\": \"NEK1\", \"x\": 260, \"y\": 325, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"STK33\", \"label\": \"STK33\", \"x\": 325, \"y\": -325, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"DYRK3\", \"label\": \"DYRK3\", \"x\": 325, \"y\": -260, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"STK40\", \"label\": \"STK40\", \"x\": 325, \"y\": -195, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"TSSK2\", \"label\": \"TSSK2\", \"x\": 325, \"y\": -130, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"TRIB2\", \"label\": \"TRIB2\", \"x\": 325, \"y\": -65, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"EPHA5\", \"label\": \"EPHA5\", \"x\": 325, \"y\": 720, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"PAK7\", \"label\": \"PAK7\", \"x\": 1594, \"y\": 590, \"size\": 2, \"color\": \"#040312\"}, {\"id\": \"DCLK2\", \"label\": \"DCLK2\", \"x\": 325, \"y\": 0, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"KT3K\", \"label\": \"KT3K\", \"x\": -671, \"y\": 424, \"size\": 1, \"color\": \"#fdefb1\"}, {\"id\": \"PRKX\", \"label\": \"PRKX\", \"x\": 1442, \"y\": 899, \"size\": 2, \"color\": \"#02010a\"}, {\"id\": \"ACV1C\", \"label\": \"ACV1C\", \"x\": 931, \"y\": 294, \"size\": 2, \"color\": \"#f66b5c\"}, {\"id\": \"PCKGM\", \"label\": \"PCKGM\", \"x\": 931, \"y\": -554, \"size\": 1, \"color\": \"#be3978\"}, {\"id\": \"EPHA6\", \"label\": \"EPHA6\", \"x\": 325, \"y\": 785, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"FLT3\", \"label\": \"FLT3\", \"x\": 325, \"y\": -1045, \"size\": 2, \"color\": \"#ffce91\"}, {\"id\": \"NEK10\", \"label\": \"NEK10\", \"x\": -476, \"y\": -424, \"size\": 1, \"color\": \"#ff9e6c\"}, {\"id\": \"MYLK3\", \"label\": \"MYLK3\", \"x\": -476, \"y\": -359, \"size\": 1, \"color\": \"#ff9e6c\"}, {\"id\": \"KC1G2\", \"label\": \"KC1G2\", \"x\": 325, \"y\": 65, \"size\": 2, \"color\": \"#ffc78b\"}, {\"id\": \"PKN3\", \"label\": \"PKN3\", \"x\": -671, \"y\": 489, \"size\": 1, \"color\": \"#fdefb1\"}, {\"id\": \"E2AK1\", \"label\": \"E2AK1\", \"x\": 325, \"y\": 130, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"KC1G1\", \"label\": \"KC1G1\", \"x\": 325, \"y\": 195, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"NEK3\", \"label\": \"NEK3\", \"x\": 325, \"y\": 260, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"EPHAA\", \"label\": \"EPHAA\", \"x\": 325, \"y\": 850, \"size\": 3, \"color\": \"#fee6a7\"}, {\"id\": \"MINK1\", \"label\": \"MINK1\", \"x\": 325, \"y\": 325, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"PRKY\", \"label\": \"PRKY\", \"x\": -476, \"y\": -294, \"size\": 1, \"color\": \"#ff9e6c\"}, {\"id\": \"KC1G3\", \"label\": \"KC1G3\", \"x\": 390, \"y\": -325, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"STK6\", \"label\": \"STK6\", \"x\": 390, \"y\": -260, \"size\": 4, \"color\": \"#ffc78b\"}, {\"id\": \"STK10\", \"label\": \"STK10\", \"x\": 390, \"y\": -195, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"ST17B\", \"label\": \"ST17B\", \"x\": 931, \"y\": 359, \"size\": 1, \"color\": \"#f66b5c\"}, {\"id\": \"HUNK\", \"label\": \"HUNK\", \"x\": 325, \"y\": 915, \"size\": 1, \"color\": \"#fee6a7\"}, {\"id\": \"TNK1\", \"label\": \"TNK1\", \"x\": 390, \"y\": -130, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"GRK7\", \"label\": \"GRK7\", \"x\": -336, \"y\": -1301, \"size\": 1, \"color\": \"#da476b\"}, {\"id\": \"GRK6\", \"label\": \"GRK6\", \"x\": 325, \"y\": -980, \"size\": 1, \"color\": \"#ffce91\"}, {\"id\": \"WNK3\", \"label\": \"WNK3\", \"x\": 130, \"y\": -1365, \"size\": 1, \"color\": \"#b6367a\"}, {\"id\": \"TEX14\", \"label\": \"TEX14\", \"x\": 390, \"y\": -65, \"size\": 1, \"color\": \"#ffc78b\"}, {\"id\": \"SRMS\", \"label\": \"SRMS\", \"x\": -606, \"y\": 294, \"size\": 1, \"color\": \"#fdefb1\"}], \"edges\": [{\"id\": 0, \"source\": \"PAK1\", \"target\": \"ERBB2\", \"size\": 3.0}, {\"id\": 1, \"source\": \"RON\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2, \"source\": \"TYRO3\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 3, \"source\": \"LYN\", \"target\": \"KIT\", \"size\": 0.5}, {\"id\": 4, \"source\": \"KPCA\", \"target\": \"KIT\", \"size\": 6.0}, {\"id\": 5, \"source\": \"SRC\", \"target\": \"KIT\", \"size\": 2.0}, {\"id\": 6, \"source\": \"MATK\", \"target\": \"KIT\", \"size\": 0.5}, {\"id\": 7, \"source\": \"TEC\", \"target\": \"KIT\", \"size\": 0.5}, {\"id\": 8, \"source\": \"FGR\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 9, \"source\": \"KSYK\", \"target\": \"FGR\", \"size\": 1.0}, {\"id\": 10, \"source\": \"FAK1\", \"target\": \"FGR\", \"size\": 1.0}, {\"id\": 11, \"source\": \"VGFR2\", \"target\": \"VGFR1\", \"size\": 6.0}, {\"id\": 12, \"source\": \"ATR\", \"target\": \"VGFR1\", \"size\": 0.5}, {\"id\": 13, \"source\": \"TYK2\", \"target\": \"LYN\", \"size\": 2.0}, {\"id\": 14, \"source\": \"LYN\", \"target\": \"KPCD\", \"size\": 2.0}, {\"id\": 15, \"source\": \"LYN\", \"target\": \"BTK\", \"size\": 4.0}, {\"id\": 16, \"source\": \"MATK\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 17, \"source\": \"LYN\", \"target\": \"KSYK\", \"size\": 8.0}, {\"id\": 18, \"source\": \"KPCT\", \"target\": \"LYN\", \"size\": 1.0}, {\"id\": 19, \"source\": \"FAK1\", \"target\": \"LYN\", \"size\": 1.0}, {\"id\": 20, \"source\": \"PRKDC\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 21, \"source\": \"FAK2\", \"target\": \"LYN\", \"size\": 1.0}, {\"id\": 22, \"source\": \"PK3CG\", \"target\": \"LYN\", \"size\": 1.0}, {\"id\": 23, \"source\": \"MK03\", \"target\": \"LYN\", \"size\": 8.0}, {\"id\": 24, \"source\": \"LYN\", \"target\": \"M4K1\", \"size\": 0.5}, {\"id\": 25, \"source\": \"PGFRB\", \"target\": \"PK3CA\", \"size\": 16.0}, {\"id\": 26, \"source\": \"KPCD\", \"target\": \"PK3CA\", \"size\": 9.0}, {\"id\": 27, \"source\": \"K6PF\", \"target\": \"K6PL\", \"size\": 9.0}, {\"id\": 28, \"source\": \"PHKG1\", \"target\": \"PHKG2\", \"size\": 3.0}, {\"id\": 29, \"source\": \"PGFRA\", \"target\": \"PGFRB\", \"size\": 19.0}, {\"id\": 30, \"source\": \"E2AK2\", \"target\": \"PGFRB\", \"size\": 1.0}, {\"id\": 31, \"source\": \"FAK1\", \"target\": \"PGFRB\", \"size\": 7.0}, {\"id\": 32, \"source\": \"M3K5\", \"target\": \"E2AK2\", \"size\": 1.0}, {\"id\": 33, \"source\": \"IKKB\", \"target\": \"E2AK2\", \"size\": 6.0}, {\"id\": 34, \"source\": \"MK01\", \"target\": \"MP2K1\", \"size\": 72.0}, {\"id\": 35, \"source\": \"ARAF\", \"target\": \"MP2K1\", \"size\": 27.0}, {\"id\": 36, \"source\": \"KS6A2\", \"target\": \"MP2K1\", \"size\": 6.0}, {\"id\": 37, \"source\": \"MK03\", \"target\": \"MP2K1\", \"size\": 71.0}, {\"id\": 38, \"source\": \"M3K4\", \"target\": \"MP2K1\", \"size\": 2.0}, {\"id\": 39, \"source\": \"PAK1\", \"target\": \"MP2K1\", \"size\": 12.0}, {\"id\": 40, \"source\": \"MP2K1\", \"target\": \"KS6A4\", \"size\": 2.0}, {\"id\": 41, \"source\": \"TRIB1\", \"target\": \"MP2K1\", \"size\": 0.5}, {\"id\": 42, \"source\": \"KSR2\", \"target\": \"MP2K1\", \"size\": 1.0}, {\"id\": 43, \"source\": \"PK3CG\", \"target\": \"EPHA8\", \"size\": 0.5}, {\"id\": 44, \"source\": \"FAK1\", \"target\": \"EPHA2\", \"size\": 2.0}, {\"id\": 45, \"source\": \"ABL1\", \"target\": \"ZAP70\", \"size\": 1.0}, {\"id\": 46, \"source\": \"FAK2\", \"target\": \"ZAP70\", \"size\": 1.0}, {\"id\": 47, \"source\": \"KPCE\", \"target\": \"MK01\", \"size\": 11.0}, {\"id\": 48, \"source\": \"NTRK3\", \"target\": \"MK01\", \"size\": 2.0}, {\"id\": 49, \"source\": \"KS6A3\", \"target\": \"MK01\", \"size\": 7.0}, {\"id\": 50, \"source\": \"MK14\", \"target\": \"MK01\", \"size\": 45.0}, {\"id\": 51, \"source\": \"MP2K2\", \"target\": \"MK01\", \"size\": 60.0}, {\"id\": 52, \"source\": \"MK01\", \"target\": \"KS6A1\", \"size\": 7.0}, {\"id\": 53, \"source\": \"KS6A2\", \"target\": \"MK01\", \"size\": 7.0}, {\"id\": 54, \"source\": \"KS6A4\", \"target\": \"MK01\", \"size\": 2.0}, {\"id\": 55, \"source\": \"NEK2\", \"target\": \"MK01\", \"size\": 0.5}, {\"id\": 56, \"source\": \"DYR1B\", \"target\": \"MK01\", \"size\": 0.5}, {\"id\": 57, \"source\": \"MKNK2\", \"target\": \"MK01\", \"size\": 3.0}, {\"id\": 58, \"source\": \"MAPK5\", \"target\": \"MK01\", \"size\": 1.0}, {\"id\": 59, \"source\": \"MKNK1\", \"target\": \"MK01\", \"size\": 3.0}, {\"id\": 60, \"source\": \"KSR2\", \"target\": \"MK01\", \"size\": 1.0}, {\"id\": 61, \"source\": \"KPCZ\", \"target\": \"KPCA\", \"size\": 5.0}, {\"id\": 62, \"source\": \"KPCA\", \"target\": \"SRC\", \"size\": 15.0}, {\"id\": 63, \"source\": \"KSYK\", \"target\": \"KPCA\", \"size\": 5.0}, {\"id\": 64, \"source\": \"MYLK\", \"target\": \"KPCA\", \"size\": 5.0}, {\"id\": 65, \"source\": \"KPCA\", \"target\": \"GSK3A\", \"size\": 1.0}, {\"id\": 66, \"source\": \"KPCB\", \"target\": \"BTK\", \"size\": 2.0}, {\"id\": 67, \"source\": \"BMPR2\", \"target\": \"KPCB\", \"size\": 1.0}, {\"id\": 68, \"source\": \"MK06\", \"target\": \"KPCB\", \"size\": 0.5}, {\"id\": 69, \"source\": \"GSK3B\", \"target\": \"KPCB\", \"size\": 13.0}, {\"id\": 70, \"source\": \"PDPK1\", \"target\": \"KPCB\", \"size\": 9.0}, {\"id\": 71, \"source\": \"KPCB\", \"target\": \"GSK3A\", \"size\": 2.0}, {\"id\": 72, \"source\": \"RIPK4\", \"target\": \"KPCB\", \"size\": 0.5}, {\"id\": 73, \"source\": \"SRC\", \"target\": \"KPCE\", \"size\": 2.0}, {\"id\": 74, \"source\": \"HXK2\", \"target\": \"KPCE\", \"size\": 1.0}, {\"id\": 75, \"source\": \"PK3CB\", \"target\": \"KPCE\", \"size\": 6.0}, {\"id\": 76, \"source\": \"PDPK1\", \"target\": \"KPCE\", \"size\": 2.0}, {\"id\": 77, \"source\": \"KPCD1\", \"target\": \"KPCE\", \"size\": 1.0}, {\"id\": 78, \"source\": \"KPCZ\", \"target\": \"KPCD\", \"size\": 4.0}, {\"id\": 79, \"source\": \"PRKDC\", \"target\": \"KPCD\", \"size\": 0.5}, {\"id\": 80, \"source\": \"FAK2\", \"target\": \"KPCD\", \"size\": 2.0}, {\"id\": 81, \"source\": \"PK3CB\", \"target\": \"KPCD\", \"size\": 9.0}, {\"id\": 82, \"source\": \"PDPK1\", \"target\": \"KPCD\", \"size\": 3.0}, {\"id\": 83, \"source\": \"KPCD\", \"target\": \"GSK3A\", \"size\": 1.0}, {\"id\": 84, \"source\": \"KPCD\", \"target\": \"AKT3\", \"size\": 7.0}, {\"id\": 85, \"source\": \"RIPK4\", \"target\": \"KPCD\", \"size\": 0.5}, {\"id\": 86, \"source\": \"KPCG\", \"target\": \"GSK3A\", \"size\": 1.0}, {\"id\": 87, \"source\": \"MARK4\", \"target\": \"KPCG\", \"size\": 0.5}, {\"id\": 88, \"source\": \"SRC\", \"target\": \"KPCZ\", \"size\": 8.0}, {\"id\": 89, \"source\": \"IRAK1\", \"target\": \"KPCZ\", \"size\": 0.5}, {\"id\": 90, \"source\": \"MP2K5\", \"target\": \"KPCZ\", \"size\": 1.0}, {\"id\": 91, \"source\": \"KPCZ\", \"target\": \"IKKB\", \"size\": 6.0}, {\"id\": 92, \"source\": \"DAPK3\", \"target\": \"KPCZ\", \"size\": 0.5}, {\"id\": 93, \"source\": \"PDPK1\", \"target\": \"KPCZ\", \"size\": 3.0}, {\"id\": 94, \"source\": \"KPCZ\", \"target\": \"AKT3\", \"size\": 10.0}, {\"id\": 95, \"source\": \"ARAF\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 96, \"source\": \"MET\", \"target\": \"DAPK3\", \"size\": 1.0}, {\"id\": 97, \"source\": \"RET\", \"target\": \"FAK1\", \"size\": 1.0}, {\"id\": 98, \"source\": \"RET\", \"target\": \"MK01\", \"size\": 3.0}, {\"id\": 99, \"source\": \"RET\", \"target\": \"MK08\", \"size\": 1.0}, {\"id\": 100, \"source\": \"RET\", \"target\": \"MK14\", \"size\": 0.5}, {\"id\": 101, \"source\": \"RET\", \"target\": \"MK03\", \"size\": 3.0}, {\"id\": 102, \"source\": \"GSK3B\", \"target\": \"MARK2\", \"size\": 0.5}, {\"id\": 103, \"source\": \"ITK\", \"target\": \"BMX\", \"size\": 0.5}, {\"id\": 104, \"source\": \"ITK\", \"target\": \"BTK\", \"size\": 0.5}, {\"id\": 105, \"source\": \"BTK\", \"target\": \"KPCZ\", \"size\": 1.0}, {\"id\": 106, \"source\": \"BTK\", \"target\": \"KPCT\", \"size\": 1.0}, {\"id\": 107, \"source\": \"BTK\", \"target\": \"KPCE\", \"size\": 0.5}, {\"id\": 108, \"source\": \"BTK\", \"target\": \"KPCA\", \"size\": 1.0}, {\"id\": 109, \"source\": \"PKN1\", \"target\": \"MP2K6\", \"size\": 0.5}, {\"id\": 110, \"source\": \"PKN1\", \"target\": \"MK12\", \"size\": 1.0}, {\"id\": 111, \"source\": \"OBSCN\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 112, \"source\": \"WEE1\", \"target\": \"CSK21\", \"size\": 0.5}, {\"id\": 113, \"source\": \"SRC\", \"target\": \"ABL1\", \"size\": 3.0}, {\"id\": 114, \"source\": \"NTRK1\", \"target\": \"ABL1\", \"size\": 2.0}, {\"id\": 115, \"source\": \"ABL1\", \"target\": \"BTK\", \"size\": 0.5}, {\"id\": 116, \"source\": \"PRKDC\", \"target\": \"ABL1\", \"size\": 1.0}, {\"id\": 117, \"source\": \"EPHB2\", \"target\": \"ABL1\", \"size\": 1.0}, {\"id\": 118, \"source\": \"ABL1\", \"target\": \"M4K1\", \"size\": 0.5}, {\"id\": 119, \"source\": \"M4K5\", \"target\": \"ABL1\", \"size\": 0.5}, {\"id\": 120, \"source\": \"PAK2\", \"target\": \"ABL1\", \"size\": 3.0}, {\"id\": 121, \"source\": \"ATM\", \"target\": \"ABL1\", \"size\": 2.0}, {\"id\": 122, \"source\": \"BMPR2\", \"target\": \"MOS\", \"size\": 0.5}, {\"id\": 123, \"source\": \"DDR2\", \"target\": \"SRC\", \"size\": 0.5}, {\"id\": 124, \"source\": \"SRC\", \"target\": \"KPCI\", \"size\": 4.0}, {\"id\": 125, \"source\": \"SRC\", \"target\": \"BMX\", \"size\": 0.5}, {\"id\": 126, \"source\": \"MATK\", \"target\": \"SRC\", \"size\": 0.5}, {\"id\": 127, \"source\": \"SRC\", \"target\": \"TXK\", \"size\": 0.5}, {\"id\": 128, \"source\": \"KSYK\", \"target\": \"SRC\", \"size\": 4.0}, {\"id\": 129, \"source\": \"RON\", \"target\": \"SRC\", \"size\": 0.5}, {\"id\": 130, \"source\": \"TYRO3\", \"target\": \"SRC\", \"size\": 0.5}, {\"id\": 131, \"source\": \"SRC\", \"target\": \"FAK1\", \"size\": 12.0}, {\"id\": 132, \"source\": \"MYLK\", \"target\": \"SRC\", \"size\": 4.0}, {\"id\": 133, \"source\": \"EPHB2\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 134, \"source\": \"FAK2\", \"target\": \"SRC\", \"size\": 3.0}, {\"id\": 135, \"source\": \"KAPCA\", \"target\": \"SRC\", \"size\": 14.0}, {\"id\": 136, \"source\": \"SRC\", \"target\": \"PAK2\", \"size\": 4.0}, {\"id\": 137, \"source\": \"SRC\", \"target\": \"PDPK1\", \"size\": 3.0}, {\"id\": 138, \"source\": \"SRC\", \"target\": \"KPCD1\", \"size\": 1.0}, {\"id\": 139, \"source\": \"GUC2C\", \"target\": \"SRC\", \"size\": 0.5}, {\"id\": 140, \"source\": \"MK15\", \"target\": \"SRC\", \"size\": 0.5}, {\"id\": 141, \"source\": \"ERBB4\", \"target\": \"ERBB3\", \"size\": 4.0}, {\"id\": 142, \"source\": \"FAK1\", \"target\": \"ERBB3\", \"size\": 3.0}, {\"id\": 143, \"source\": \"PTK6\", \"target\": \"ERBB3\", \"size\": 0.5}, {\"id\": 144, \"source\": \"TGFR2\", \"target\": \"TGFR1\", \"size\": 18.0}, {\"id\": 145, \"source\": \"AMHR2\", \"target\": \"TGFR1\", \"size\": 2.0}, {\"id\": 146, \"source\": \"ACVL1\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 147, \"source\": \"BMR1B\", \"target\": \"TGFR1\", \"size\": 3.0}, {\"id\": 148, \"source\": \"MLTK\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 149, \"source\": \"ACVL1\", \"target\": \"TGFR2\", \"size\": 0.5}, {\"id\": 150, \"source\": \"IKKA\", \"target\": \"M3K8\", \"size\": 4.0}, {\"id\": 151, \"source\": \"BMPR2\", \"target\": \"M3K8\", \"size\": 0.5}, {\"id\": 152, \"source\": \"MP2K4\", \"target\": \"M3K8\", \"size\": 3.0}, {\"id\": 153, \"source\": \"M3K8\", \"target\": \"M3K14\", \"size\": 3.0}, {\"id\": 154, \"source\": \"ATR\", \"target\": \"VGFR2\", \"size\": 0.5}, {\"id\": 155, \"source\": \"MATK\", \"target\": \"NTRK1\", \"size\": 1.0}, {\"id\": 156, \"source\": \"IRAK1\", \"target\": \"NTRK3\", \"size\": 1.0}, {\"id\": 157, \"source\": \"MK03\", \"target\": \"NTRK3\", \"size\": 2.0}, {\"id\": 158, \"source\": \"BRSK1\", \"target\": \"WEE1\", \"size\": 0.5}, {\"id\": 159, \"source\": \"MK03\", \"target\": \"KS6A3\", \"size\": 6.0}, {\"id\": 160, \"source\": \"KS6A3\", \"target\": \"STK11\", \"size\": 1.0}, {\"id\": 161, \"source\": \"PDPK1\", \"target\": \"KS6A3\", \"size\": 3.0}, {\"id\": 162, \"source\": \"MP2K5\", \"target\": \"KPCI\", \"size\": 0.5}, {\"id\": 163, \"source\": \"PDPK1\", \"target\": \"KPCI\", \"size\": 1.0}, {\"id\": 164, \"source\": \"SMG1\", \"target\": \"KPCI\", \"size\": 0.5}, {\"id\": 165, \"source\": \"MARK4\", \"target\": \"KPCI\", \"size\": 0.5}, {\"id\": 166, \"source\": \"BTK\", \"target\": \"BMX\", \"size\": 0.5}, {\"id\": 167, \"source\": \"TEC\", \"target\": \"BMX\", \"size\": 0.5}, {\"id\": 168, \"source\": \"FAK1\", \"target\": \"BMX\", \"size\": 0.5}, {\"id\": 169, \"source\": \"PAK1\", \"target\": \"BMX\", \"size\": 0.5}, {\"id\": 170, \"source\": \"IRAK2\", \"target\": \"IRAK1\", \"size\": 2.0}, {\"id\": 171, \"source\": \"IRAK3\", \"target\": \"IRAK1\", \"size\": 1.0}, {\"id\": 172, \"source\": \"IRAK4\", \"target\": \"IRAK1\", \"size\": 9.0}, {\"id\": 173, \"source\": \"KSYK\", \"target\": \"BTK\", \"size\": 5.0}, {\"id\": 174, \"source\": \"TEC\", \"target\": \"BTK\", \"size\": 1.0}, {\"id\": 175, \"source\": \"KPCD1\", \"target\": \"BTK\", \"size\": 0.5}, {\"id\": 176, \"source\": \"LCK\", \"target\": \"UFO\", \"size\": 0.5}, {\"id\": 177, \"source\": \"SRC\", \"target\": \"UFO\", \"size\": 1.0}, {\"id\": 178, \"source\": \"MP2K2\", \"target\": \"ARAF\", \"size\": 22.0}, {\"id\": 179, \"source\": \"TOPK\", \"target\": \"ARAF\", \"size\": 0.5}, {\"id\": 180, \"source\": \"FAK2\", \"target\": \"MATK\", \"size\": 0.5}, {\"id\": 181, \"source\": \"M3K12\", \"target\": \"M3K11\", \"size\": 1.0}, {\"id\": 182, \"source\": \"IKKA\", \"target\": \"M3K11\", \"size\": 1.0}, {\"id\": 183, \"source\": \"M4K1\", \"target\": \"M3K11\", \"size\": 1.0}, {\"id\": 184, \"source\": \"MP2K7\", \"target\": \"M3K11\", \"size\": 1.0}, {\"id\": 185, \"source\": \"M4K2\", \"target\": \"M3K11\", \"size\": 1.0}, {\"id\": 186, \"source\": \"IKKB\", \"target\": \"M3K11\", \"size\": 2.0}, {\"id\": 187, \"source\": \"FAK1\", \"target\": \"KSYK\", \"size\": 3.0}, {\"id\": 188, \"source\": \"FAK2\", \"target\": \"KSYK\", \"size\": 2.0}, {\"id\": 189, \"source\": \"KSYK\", \"target\": \"M4K1\", \"size\": 0.5}, {\"id\": 190, \"source\": \"MP2K4\", \"target\": \"M3K10\", \"size\": 0.5}, {\"id\": 191, \"source\": \"FAK2\", \"target\": \"JAK3\", \"size\": 1.0}, {\"id\": 192, \"source\": \"TIE1\", \"target\": \"TIE2\", \"size\": 0.5}, {\"id\": 193, \"source\": \"KPCA\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 194, \"source\": \"KPCB\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 195, \"source\": \"KPCD\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 196, \"source\": \"KPCG\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 197, \"source\": \"PK3CG\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 198, \"source\": \"KAPCA\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 199, \"source\": \"MK03\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 200, \"source\": \"MP2K6\", \"target\": \"MK14\", \"size\": 15.0}, {\"id\": 201, \"source\": \"MP2K4\", \"target\": \"MK14\", \"size\": 11.0}, {\"id\": 202, \"source\": \"MK03\", \"target\": \"MK14\", \"size\": 37.0}, {\"id\": 203, \"source\": \"MAPK3\", \"target\": \"MK14\", \"size\": 2.0}, {\"id\": 204, \"source\": \"MP2K3\", \"target\": \"MK14\", \"size\": 12.0}, {\"id\": 205, \"source\": \"MK14\", \"target\": \"KS6A4\", \"size\": 2.0}, {\"id\": 206, \"source\": \"DYR1B\", \"target\": \"MK14\", \"size\": 0.5}, {\"id\": 207, \"source\": \"MKNK2\", \"target\": \"MK14\", \"size\": 1.0}, {\"id\": 208, \"source\": \"MK14\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 209, \"source\": \"MK14\", \"target\": \"MAPK5\", \"size\": 1.0}, {\"id\": 210, \"source\": \"MKNK1\", \"target\": \"MK14\", \"size\": 1.0}, {\"id\": 211, \"source\": \"STK39\", \"target\": \"MK14\", \"size\": 0.5}, {\"id\": 212, \"source\": \"MP2K4\", \"target\": \"M3K12\", \"size\": 1.0}, {\"id\": 213, \"source\": \"MP2K7\", \"target\": \"M3K12\", \"size\": 1.0}, {\"id\": 214, \"source\": \"MARK3\", \"target\": \"KPCT\", \"size\": 0.5}, {\"id\": 215, \"source\": \"IKKB\", \"target\": \"KPCT\", \"size\": 6.0}, {\"id\": 216, \"source\": \"KPCT\", \"target\": \"STK39\", \"size\": 0.5}, {\"id\": 217, \"source\": \"AAPK2\", \"target\": \"EF2K\", \"size\": 2.0}, {\"id\": 218, \"source\": \"EPHB2\", \"target\": \"RYK\", \"size\": 1.0}, {\"id\": 219, \"source\": \"EPHB3\", \"target\": \"RYK\", \"size\": 1.0}, {\"id\": 220, \"source\": \"STK11\", \"target\": \"MARK2\", \"size\": 0.5}, {\"id\": 221, \"source\": \"PLK4\", \"target\": \"TEC\", \"size\": 0.5}, {\"id\": 222, \"source\": \"EPHB6\", \"target\": \"EPHB1\", \"size\": 1.0}, {\"id\": 223, \"source\": \"PRKDC\", \"target\": \"IKKA\", \"size\": 0.5}, {\"id\": 224, \"source\": \"M3K7\", \"target\": \"IKKA\", \"size\": 14.0}, {\"id\": 225, \"source\": \"FAK1\", \"target\": \"TRIO\", \"size\": 0.5}, {\"id\": 226, \"source\": \"GSK3B\", \"target\": \"FAK1\", \"size\": 7.0}, {\"id\": 227, \"source\": \"BMR1A\", \"target\": \"BMPR2\", \"size\": 5.0}, {\"id\": 228, \"source\": \"LIMK1\", \"target\": \"BMPR2\", \"size\": 1.0}, {\"id\": 229, \"source\": \"BMR1B\", \"target\": \"BMPR2\", \"size\": 6.0}, {\"id\": 230, \"source\": \"MERTK\", \"target\": \"BMPR2\", \"size\": 0.5}, {\"id\": 231, \"source\": \"MK03\", \"target\": \"DAPK1\", \"size\": 3.0}, {\"id\": 232, \"source\": \"MK08\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 233, \"source\": \"ATM\", \"target\": \"PRKDC\", \"size\": 1.0}, {\"id\": 234, \"source\": \"MK03\", \"target\": \"MYLK\", \"size\": 7.0}, {\"id\": 235, \"source\": \"KCC2G\", \"target\": \"MYLK\", \"size\": 3.0}, {\"id\": 236, \"source\": \"PAK1\", \"target\": \"MYLK\", \"size\": 2.0}, {\"id\": 237, \"source\": \"PAK2\", \"target\": \"MYLK\", \"size\": 2.0}, {\"id\": 238, \"source\": \"KGP2\", \"target\": \"MYLK\", \"size\": 2.0}, {\"id\": 239, \"source\": \"BMR1B\", \"target\": \"AMHR2\", \"size\": 2.0}, {\"id\": 240, \"source\": \"PDPK1\", \"target\": \"PKN1\", \"size\": 1.0}, {\"id\": 241, \"source\": \"MP2K4\", \"target\": \"MK08\", \"size\": 14.0}, {\"id\": 242, \"source\": \"M3K7\", \"target\": \"MK08\", \"size\": 13.0}, {\"id\": 243, \"source\": \"MP2K7\", \"target\": \"MK08\", \"size\": 14.0}, {\"id\": 244, \"source\": \"KPCD1\", \"target\": \"MK08\", \"size\": 0.5}, {\"id\": 245, \"source\": \"MK08\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 246, \"source\": \"M3K2\", \"target\": \"MK08\", \"size\": 2.0}, {\"id\": 247, \"source\": \"MP2K6\", \"target\": \"MK12\", \"size\": 15.0}, {\"id\": 248, \"source\": \"M3K4\", \"target\": \"MP2K6\", \"size\": 2.0}, {\"id\": 249, \"source\": \"M3K7\", \"target\": \"MP2K6\", \"size\": 7.0}, {\"id\": 250, \"source\": \"MP2K6\", \"target\": \"MK13\", \"size\": 15.0}, {\"id\": 251, \"source\": \"MLTK\", \"target\": \"MP2K6\", \"size\": 0.5}, {\"id\": 252, \"source\": \"TAOK2\", \"target\": \"MP2K6\", \"size\": 1.0}, {\"id\": 253, \"source\": \"MP2K2\", \"target\": \"MK03\", \"size\": 59.0}, {\"id\": 254, \"source\": \"BMR1B\", \"target\": \"BMR1A\", \"size\": 5.0}, {\"id\": 255, \"source\": \"AVR2B\", \"target\": \"ACV1B\", \"size\": 3.0}, {\"id\": 256, \"source\": \"ROCK1\", \"target\": \"LIMK1\", \"size\": 2.0}, {\"id\": 257, \"source\": \"LIMK2\", \"target\": \"LIMK1\", \"size\": 3.0}, {\"id\": 258, \"source\": \"PAK1\", \"target\": \"LIMK1\", \"size\": 3.0}, {\"id\": 259, \"source\": \"MRCKA\", \"target\": \"LIMK1\", \"size\": 0.5}, {\"id\": 260, \"source\": \"PAK4\", \"target\": \"LIMK1\", \"size\": 2.0}, {\"id\": 261, \"source\": \"LATS1\", \"target\": \"LIMK1\", \"size\": 0.5}, {\"id\": 262, \"source\": \"MP2K4\", \"target\": \"MK12\", \"size\": 11.0}, {\"id\": 263, \"source\": \"M3K4\", \"target\": \"MP2K4\", \"size\": 2.0}, {\"id\": 264, \"source\": \"M3K7\", \"target\": \"MP2K4\", \"size\": 5.0}, {\"id\": 265, \"source\": \"MP2K4\", \"target\": \"MK09\", \"size\": 13.0}, {\"id\": 266, \"source\": \"MP2K4\", \"target\": \"MK10\", \"size\": 13.0}, {\"id\": 267, \"source\": \"TRIB1\", \"target\": \"MP2K4\", \"size\": 0.5}, {\"id\": 268, \"source\": \"M3K2\", \"target\": \"MP2K4\", \"size\": 2.0}, {\"id\": 269, \"source\": \"MLTK\", \"target\": \"MP2K4\", \"size\": 0.5}, {\"id\": 270, \"source\": \"KAPCA\", \"target\": \"STK11\", \"size\": 3.0}, {\"id\": 271, \"source\": \"KAPCA\", \"target\": \"M3K3\", \"size\": 3.0}, {\"id\": 272, \"source\": \"KAPCA\", \"target\": \"GSK3B\", \"size\": 11.0}, {\"id\": 273, \"source\": \"PDPK1\", \"target\": \"KAPCA\", \"size\": 4.0}, {\"id\": 274, \"source\": \"KAPCA\", \"target\": \"GSK3A\", \"size\": 2.0}, {\"id\": 275, \"source\": \"KAPCA\", \"target\": \"EF2K\", \"size\": 1.0}, {\"id\": 276, \"source\": \"MK03\", \"target\": \"KS6A1\", \"size\": 6.0}, {\"id\": 277, \"source\": \"PDPK1\", \"target\": \"KS6A1\", \"size\": 3.0}, {\"id\": 278, \"source\": \"KS6A1\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 279, \"source\": \"MK03\", \"target\": \"KS6A2\", \"size\": 6.0}, {\"id\": 280, \"source\": \"ROCK1\", \"target\": \"LIMK2\", \"size\": 2.0}, {\"id\": 281, \"source\": \"TIF1A\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 282, \"source\": \"MP2K3\", \"target\": \"MK03\", \"size\": 9.0}, {\"id\": 283, \"source\": \"KS6A4\", \"target\": \"MK03\", \"size\": 2.0}, {\"id\": 284, \"source\": \"MK03\", \"target\": \"MKNK1\", \"size\": 3.0}, {\"id\": 285, \"source\": \"KSR2\", \"target\": \"MK03\", \"size\": 1.0}, {\"id\": 286, \"source\": \"M3K7\", \"target\": \"M4K1\", \"size\": 1.0}, {\"id\": 287, \"source\": \"MRCKA\", \"target\": \"LIMK2\", \"size\": 0.5}, {\"id\": 288, \"source\": \"PLK1\", \"target\": \"PMYT1\", \"size\": 3.0}, {\"id\": 289, \"source\": \"PLK1\", \"target\": \"CHK2\", \"size\": 1.0}, {\"id\": 290, \"source\": \"MAPK3\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 291, \"source\": \"MK13\", \"target\": \"MAPK3\", \"size\": 2.0}, {\"id\": 292, \"source\": \"ATM\", \"target\": \"STK11\", \"size\": 1.0}, {\"id\": 293, \"source\": \"KS6A5\", \"target\": \"STK11\", \"size\": 0.5}, {\"id\": 294, \"source\": \"STK11\", \"target\": \"MARK1\", \"size\": 0.5}, {\"id\": 295, \"source\": \"MARK4\", \"target\": \"STK11\", \"size\": 0.5}, {\"id\": 296, \"source\": \"STRAB\", \"target\": \"STK11\", \"size\": 2.0}, {\"id\": 297, \"source\": \"KS6B1\", \"target\": \"STK11\", \"size\": 5.0}, {\"id\": 298, \"source\": \"STK11\", \"target\": \"STRAA\", \"size\": 2.0}, {\"id\": 299, \"source\": \"MP2K3\", \"target\": \"MK12\", \"size\": 12.0}, {\"id\": 300, \"source\": \"M3K4\", \"target\": \"MP2K3\", \"size\": 2.0}, {\"id\": 301, \"source\": \"TAOK1\", \"target\": \"MP2K3\", \"size\": 1.0}, {\"id\": 302, \"source\": \"TAOK2\", \"target\": \"MP2K3\", \"size\": 1.0}, {\"id\": 303, \"source\": \"GSK3B\", \"target\": \"ILK\", \"size\": 3.0}, {\"id\": 304, \"source\": \"MK12\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 305, \"source\": \"MAPK5\", \"target\": \"MK12\", \"size\": 1.0}, {\"id\": 306, \"source\": \"BUB1B\", \"target\": \"M3K4\", \"size\": 0.5}, {\"id\": 307, \"source\": \"MK13\", \"target\": \"M3K4\", \"size\": 2.0}, {\"id\": 308, \"source\": \"M3K3\", \"target\": \"M3K5\", \"size\": 2.0}, {\"id\": 309, \"source\": \"M3K7\", \"target\": \"M3K5\", \"size\": 3.0}, {\"id\": 310, \"source\": \"MP2K7\", \"target\": \"M3K5\", \"size\": 6.0}, {\"id\": 311, \"source\": \"ERN1\", \"target\": \"M3K5\", \"size\": 3.0}, {\"id\": 312, \"source\": \"M3K6\", \"target\": \"M3K5\", \"size\": 1.0}, {\"id\": 313, \"source\": \"M3K2\", \"target\": \"M3K5\", \"size\": 1.0}, {\"id\": 314, \"source\": \"MK07\", \"target\": \"MP2K5\", \"size\": 5.0}, {\"id\": 315, \"source\": \"MK07\", \"target\": \"SGK1\", \"size\": 0.5}, {\"id\": 316, \"source\": \"PDK2\", \"target\": \"PDK1\", \"size\": 0.5}, {\"id\": 317, \"source\": \"RIPK1\", \"target\": \"M3K3\", \"size\": 0.5}, {\"id\": 318, \"source\": \"PDPK1\", \"target\": \"PKN2\", \"size\": 1.0}, {\"id\": 319, \"source\": \"M3K2\", \"target\": \"PKN2\", \"size\": 0.5}, {\"id\": 320, \"source\": \"PDPK1\", \"target\": \"PAK1\", \"size\": 3.0}, {\"id\": 321, \"source\": \"OXSR1\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 322, \"source\": \"PI3R4\", \"target\": \"PK3C3\", \"size\": 3.0}, {\"id\": 323, \"source\": \"M3K7\", \"target\": \"IKKB\", \"size\": 13.0}, {\"id\": 324, \"source\": \"M3K14\", \"target\": \"M3K7\", \"size\": 6.0}, {\"id\": 325, \"source\": \"M4K4\", \"target\": \"M3K7\", \"size\": 1.0}, {\"id\": 326, \"source\": \"AAPK1\", \"target\": \"EF2K\", \"size\": 2.0}, {\"id\": 327, \"source\": \"MP2K7\", \"target\": \"MK09\", \"size\": 15.0}, {\"id\": 328, \"source\": \"KPCD1\", \"target\": \"MK09\", \"size\": 0.5}, {\"id\": 329, \"source\": \"MK09\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 330, \"source\": \"MAPK5\", \"target\": \"MK09\", \"size\": 1.0}, {\"id\": 331, \"source\": \"MK11\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 332, \"source\": \"MK11\", \"target\": \"MAPK5\", \"size\": 1.0}, {\"id\": 333, \"source\": \"PLK3\", \"target\": \"CHK2\", \"size\": 0.5}, {\"id\": 334, \"source\": \"NEK6\", \"target\": \"SGK1\", \"size\": 0.5}, {\"id\": 335, \"source\": \"PDPK1\", \"target\": \"SGK1\", \"size\": 4.0}, {\"id\": 336, \"source\": \"KKCC1\", \"target\": \"SGK1\", \"size\": 0.5}, {\"id\": 337, \"source\": \"PDK2\", \"target\": \"SGK1\", \"size\": 0.5}, {\"id\": 338, \"source\": \"TRIB1\", \"target\": \"MP2K7\", \"size\": 0.5}, {\"id\": 339, \"source\": \"M3K2\", \"target\": \"MP2K7\", \"size\": 2.0}, {\"id\": 340, \"source\": \"MLTK\", \"target\": \"MP2K7\", \"size\": 0.5}, {\"id\": 341, \"source\": \"ATM\", \"target\": \"CHK1\", \"size\": 4.0}, {\"id\": 342, \"source\": \"ATR\", \"target\": \"CHK1\", \"size\": 4.0}, {\"id\": 343, \"source\": \"CHK1\", \"target\": \"TLK1\", \"size\": 0.5}, {\"id\": 344, \"source\": \"E2AK3\", \"target\": \"IKKB\", \"size\": 6.0}, {\"id\": 345, \"source\": \"M3K13\", \"target\": \"IKKB\", \"size\": 1.0}, {\"id\": 346, \"source\": \"IRAK3\", \"target\": \"IRAK2\", \"size\": 1.0}, {\"id\": 347, \"source\": \"M3K14\", \"target\": \"RIPK1\", \"size\": 4.0}, {\"id\": 348, \"source\": \"RIPK3\", \"target\": \"RIPK1\", \"size\": 4.0}, {\"id\": 349, \"source\": \"TAOK3\", \"target\": \"ERN1\", \"size\": 0.5}, {\"id\": 350, \"source\": \"ATM\", \"target\": \"CHK2\", \"size\": 4.0}, {\"id\": 351, \"source\": \"ATR\", \"target\": \"CHK2\", \"size\": 4.0}, {\"id\": 352, \"source\": \"TSSK1\", \"target\": \"CHK2\", \"size\": 0.5}, {\"id\": 353, \"source\": \"NEK9\", \"target\": \"NEK6\", \"size\": 0.5}, {\"id\": 354, \"source\": \"NEK6\", \"target\": \"CDK7\", \"size\": 0.5}, {\"id\": 355, \"source\": \"NEK6\", \"target\": \"KS6B1\", \"size\": 0.5}, {\"id\": 356, \"source\": \"KKCC2\", \"target\": \"KCC1A\", \"size\": 1.0}, {\"id\": 357, \"source\": \"KKCC1\", \"target\": \"KCC1A\", \"size\": 0.5}, {\"id\": 358, \"source\": \"SGK3\", \"target\": \"GSK3B\", \"size\": 1.0}, {\"id\": 359, \"source\": \"PDPK1\", \"target\": \"SGK2\", \"size\": 2.0}, {\"id\": 360, \"source\": \"PDPK1\", \"target\": \"SGK3\", \"size\": 2.0}, {\"id\": 361, \"source\": \"PDPK1\", \"target\": \"AKT3\", \"size\": 22.0}, {\"id\": 362, \"source\": \"PDPK1\", \"target\": \"KS6B1\", \"size\": 8.0}, {\"id\": 363, \"source\": \"PDPK1\", \"target\": \"KS6B2\", \"size\": 8.0}, {\"id\": 364, \"source\": \"KPCL\", \"target\": \"KPCD1\", \"size\": 0.5}, {\"id\": 365, \"source\": \"KPCD3\", \"target\": \"GSK3A\", \"size\": 0.5}, {\"id\": 366, \"source\": \"SGK3\", \"target\": \"GSK3A\", \"size\": 0.5}, {\"id\": 367, \"source\": \"PAK1\", \"target\": \"CSK21\", \"size\": 0.5}, {\"id\": 368, \"source\": \"NEK9\", \"target\": \"NEK7\", \"size\": 0.5}, {\"id\": 369, \"source\": \"NLK\", \"target\": \"HIPK2\", \"size\": 0.5}, {\"id\": 370, \"source\": \"TRPM7\", \"target\": \"TRPM6\", \"size\": 1.0}, {\"id\": 371, \"source\": \"KKCC2\", \"target\": \"KCC4\", \"size\": 3.0}, {\"id\": 372, \"source\": \"DAPK2\", \"target\": \"KCC2A\", \"size\": 0.5}, {\"id\": 373, \"source\": \"KKCC1\", \"target\": \"KCC4\", \"size\": 1.0}, {\"id\": 374, \"source\": \"TAOK1\", \"target\": \"MARK1\", \"size\": 0.5}, {\"id\": 375, \"source\": \"MK13\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 376, \"source\": \"MAPK5\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 377, \"source\": \"KS6B1\", \"target\": \"EF2K\", \"size\": 1.0}, {\"id\": 378, \"source\": \"MAPK2\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 379, \"source\": \"MK14\", \"target\": \"CSK22\", \"size\": 1.0}, {\"id\": 380, \"source\": \"PAK1\", \"target\": \"CSK22\", \"size\": 0.5}, {\"id\": 381, \"source\": \"MAPK5\", \"target\": \"MK13\", \"size\": 1.0}, {\"id\": 382, \"source\": \"MAST2\", \"target\": \"STK36\", \"size\": 0.5}, {\"id\": 383, \"source\": \"CDK9\", \"target\": \"STK36\", \"size\": 0.5}, {\"id\": 384, \"source\": \"TLK1\", \"target\": \"TLK2\", \"size\": 0.5}, {\"id\": 385, \"source\": \"BRSK2\", \"target\": \"WEE1\", \"size\": 0.5}, {\"id\": 386, \"source\": \"MK14\", \"target\": \"MAPK2\", \"size\": 5.0}, {\"id\": 387, \"source\": \"MK01\", \"target\": \"PAK1\", \"size\": 14.0}, {\"id\": 388, \"source\": \"AKT1\", \"target\": \"GSK3B\", \"size\": 28.0}, {\"id\": 389, \"source\": \"KKCC1\", \"target\": \"KCC1D\", \"size\": 0.5}, {\"id\": 390, \"source\": \"WEE1\", \"target\": \"CDK2\", \"size\": 1.0}, {\"id\": 391, \"source\": \"ARBK1\", \"target\": \"SRC\", \"size\": 0.5}, {\"id\": 392, \"source\": \"MAPK2\", \"target\": \"AKT1\", \"size\": 5.0}, {\"id\": 393, \"source\": \"M3K7\", \"target\": \"STRAB\", \"size\": 1.0}, {\"id\": 394, \"source\": \"PLK1\", \"target\": \"WEE1\", \"size\": 1.0}, {\"id\": 395, \"source\": \"PAK2\", \"target\": \"MKNK1\", \"size\": 1.0}, {\"id\": 396, \"source\": \"KS6A5\", \"target\": \"MK11\", \"size\": 4.0}, {\"id\": 397, \"source\": \"ACVR1\", \"target\": \"IKKB\", \"size\": 1.0}, {\"id\": 398, \"source\": \"ACVR1\", \"target\": \"NEK8\", \"size\": 0.5}, {\"id\": 399, \"source\": \"ACVR1\", \"target\": \"NUAK2\", \"size\": 0.5}, {\"id\": 400, \"source\": \"ACVR1\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 401, \"source\": \"ACVR1\", \"target\": \"TGFR1\", \"size\": 2.0}, {\"id\": 402, \"source\": \"AURKB\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 403, \"source\": \"BMR1B\", \"target\": \"CDK4\", \"size\": 0.5}, {\"id\": 404, \"source\": \"BMR1B\", \"target\": \"OXSR1\", \"size\": 0.5}, {\"id\": 405, \"source\": \"BMR1B\", \"target\": \"PAK1\", \"size\": 1.0}, {\"id\": 406, \"source\": \"BMR1B\", \"target\": \"STK35\", \"size\": 0.5}, {\"id\": 407, \"source\": \"CDK4\", \"target\": \"TGFR1\", \"size\": 7.0}, {\"id\": 408, \"source\": \"CDK6\", \"target\": \"TGFR1\", \"size\": 5.0}, {\"id\": 409, \"source\": \"CDKL1\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 410, \"source\": \"IKKA\", \"target\": \"E2AK2\", \"size\": 6.0}, {\"id\": 411, \"source\": \"IKKA\", \"target\": \"KPCT\", \"size\": 6.0}, {\"id\": 412, \"source\": \"IKKA\", \"target\": \"TGFR1\", \"size\": 10.0}, {\"id\": 413, \"source\": \"KC1A\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 414, \"source\": \"CSK22\", \"target\": \"TGFR1\", \"size\": 1.0}, {\"id\": 415, \"source\": \"DAPK2\", \"target\": \"TGFR1\", \"size\": 1.0}, {\"id\": 416, \"source\": \"E2AK4\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 417, \"source\": \"IGF1R\", \"target\": \"KPCD\", \"size\": 1.0}, {\"id\": 418, \"source\": \"IGF1R\", \"target\": \"KPCD1\", \"size\": 1.0}, {\"id\": 419, \"source\": \"IKKB\", \"target\": \"TGFR1\", \"size\": 10.0}, {\"id\": 420, \"source\": \"ITK\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 421, \"source\": \"MYO3A\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 422, \"source\": \"NEK6\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 423, \"source\": \"NEK8\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 424, \"source\": \"NUAK2\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 425, \"source\": \"OXSR1\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 426, \"source\": \"PAK1\", \"target\": \"TGFR1\", \"size\": 1.0}, {\"id\": 427, \"source\": \"PLK4\", \"target\": \"TGFR1\", \"size\": 1.0}, {\"id\": 428, \"source\": \"LYN\", \"target\": \"CDK2\", \"size\": 2.0}, {\"id\": 429, \"source\": \"STK35\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 430, \"source\": \"TGFR1\", \"target\": \"TSSK1\", \"size\": 0.5}, {\"id\": 431, \"source\": \"TGFR1\", \"target\": \"TSSK4\", \"size\": 0.5}, {\"id\": 432, \"source\": \"RAF1\", \"target\": \"STK3\", \"size\": 1.0}, {\"id\": 433, \"source\": \"LATS1\", \"target\": \"STK4\", \"size\": 0.5}, {\"id\": 434, \"source\": \"LATS2\", \"target\": \"STK3\", \"size\": 2.0}, {\"id\": 435, \"source\": \"KPCL\", \"target\": \"CDK2\", \"size\": 0.5}, {\"id\": 436, \"source\": \"FAK1\", \"target\": \"RIPK1\", \"size\": 0.5}, {\"id\": 437, \"source\": \"CDK2\", \"target\": \"CDC7\", \"size\": 1.0}, {\"id\": 438, \"source\": \"EGFR\", \"target\": \"PAK1\", \"size\": 7.0}, {\"id\": 439, \"source\": \"CDK7\", \"target\": \"CDK2\", \"size\": 1.0}, {\"id\": 440, \"source\": \"MP2K6\", \"target\": \"M3K5\", \"size\": 4.0}, {\"id\": 441, \"source\": \"PGFRB\", \"target\": \"SRC\", \"size\": 5.0}, {\"id\": 442, \"source\": \"M3K14\", \"target\": \"MK03\", \"size\": 6.0}, {\"id\": 443, \"source\": \"VGFR3\", \"target\": \"VGFR2\", \"size\": 5.0}, {\"id\": 444, \"source\": \"MP2K3\", \"target\": \"DYR1B\", \"size\": 0.5}, {\"id\": 445, \"source\": \"PDPK1\", \"target\": \"ILK\", \"size\": 3.0}, {\"id\": 446, \"source\": \"FAK2\", \"target\": \"ERBB3\", \"size\": 1.0}, {\"id\": 447, \"source\": \"FAK2\", \"target\": \"FGFR3\", \"size\": 0.5}, {\"id\": 448, \"source\": \"PLK3\", \"target\": \"MP2K1\", \"size\": 1.0}, {\"id\": 449, \"source\": \"PLK3\", \"target\": \"MK01\", \"size\": 2.0}, {\"id\": 450, \"source\": \"M3K7\", \"target\": \"HIPK2\", \"size\": 0.5}, {\"id\": 451, \"source\": \"MP2K5\", \"target\": \"M3K2\", \"size\": 2.0}, {\"id\": 452, \"source\": \"M3K14\", \"target\": \"IKKA\", \"size\": 10.0}, {\"id\": 453, \"source\": \"MP2K5\", \"target\": \"M3K3\", \"size\": 2.0}, {\"id\": 454, \"source\": \"M3K14\", \"target\": \"IKKB\", \"size\": 10.0}, {\"id\": 455, \"source\": \"NDKA\", \"target\": \"NDKM\", \"size\": 2.0}, {\"id\": 456, \"source\": \"CLK2\", \"target\": \"CLK3\", \"size\": 0.5}, {\"id\": 457, \"source\": \"MK03\", \"target\": \"RAF1\", \"size\": 66.0}, {\"id\": 458, \"source\": \"MK03\", \"target\": \"KPCD\", \"size\": 10.0}, {\"id\": 459, \"source\": \"MK01\", \"target\": \"KPCD\", \"size\": 12.0}, {\"id\": 460, \"source\": \"MK08\", \"target\": \"MK14\", \"size\": 34.0}, {\"id\": 461, \"source\": \"MK08\", \"target\": \"MK03\", \"size\": 41.0}, {\"id\": 462, \"source\": \"MK08\", \"target\": \"MK01\", \"size\": 57.0}, {\"id\": 463, \"source\": \"PAK1\", \"target\": \"KPCD\", \"size\": 2.0}, {\"id\": 464, \"source\": \"MK03\", \"target\": \"KPCE\", \"size\": 7.0}, {\"id\": 465, \"source\": \"MK03\", \"target\": \"KPCZ\", \"size\": 10.0}, {\"id\": 466, \"source\": \"MK01\", \"target\": \"KPCZ\", \"size\": 13.0}, {\"id\": 467, \"source\": \"JAK2\", \"target\": \"FES\", \"size\": 0.5}, {\"id\": 468, \"source\": \"KS6B1\", \"target\": \"MK01\", \"size\": 18.0}, {\"id\": 469, \"source\": \"EPHB2\", \"target\": \"KALRN\", \"size\": 0.5}, {\"id\": 470, \"source\": \"EPHA4\", \"target\": \"FGFR1\", \"size\": 0.5}, {\"id\": 471, \"source\": \"EPHA4\", \"target\": \"FGFR2\", \"size\": 0.5}, {\"id\": 472, \"source\": \"EPHA4\", \"target\": \"FGFR3\", \"size\": 0.5}, {\"id\": 473, \"source\": \"EPHB2\", \"target\": \"FAK1\", \"size\": 1.0}, {\"id\": 474, \"source\": \"SRC\", \"target\": \"VGFR2\", \"size\": 7.0}, {\"id\": 475, \"source\": \"VGFR2\", \"target\": \"BMX\", \"size\": 0.5}, {\"id\": 476, \"source\": \"VGFR1\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 477, \"source\": \"VGFR1\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 478, \"source\": \"FAK2\", \"target\": \"VGFR1\", \"size\": 0.5}, {\"id\": 479, \"source\": \"FAK1\", \"target\": \"VGFR1\", \"size\": 3.0}, {\"id\": 480, \"source\": \"EGFR\", \"target\": \"MET\", \"size\": 14.0}, {\"id\": 481, \"source\": \"EGFR\", \"target\": \"ERBB4\", \"size\": 4.0}, {\"id\": 482, \"source\": \"VGFR3\", \"target\": \"FAK1\", \"size\": 2.0}, {\"id\": 483, \"source\": \"VGFR2\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 484, \"source\": \"VGFR2\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 485, \"source\": \"FAK2\", \"target\": \"M3K4\", \"size\": 1.0}, {\"id\": 486, \"source\": \"FAK2\", \"target\": \"PDPK1\", \"size\": 0.5}, {\"id\": 487, \"source\": \"EGFR\", \"target\": \"MP2K1\", \"size\": 31.0}, {\"id\": 488, \"source\": \"EGFR\", \"target\": \"EPHA2\", \"size\": 3.0}, {\"id\": 489, \"source\": \"EGFR\", \"target\": \"MK01\", \"size\": 34.0}, {\"id\": 490, \"source\": \"EGFR\", \"target\": \"KPCD1\", \"size\": 1.0}, {\"id\": 491, \"source\": \"FGFR1\", \"target\": \"KS6A1\", \"size\": 1.0}, {\"id\": 492, \"source\": \"FYN\", \"target\": \"KIT\", \"size\": 1.0}, {\"id\": 493, \"source\": \"HCK\", \"target\": \"KIT\", \"size\": 0.5}, {\"id\": 494, \"source\": \"IGF1R\", \"target\": \"INSR\", \"size\": 12.0}, {\"id\": 495, \"source\": \"IGF1R\", \"target\": \"JAK2\", \"size\": 3.0}, {\"id\": 496, \"source\": \"IGF1R\", \"target\": \"M3K5\", \"size\": 0.5}, {\"id\": 497, \"source\": \"INSR\", \"target\": \"JAK1\", \"size\": 1.0}, {\"id\": 498, \"source\": \"INSR\", \"target\": \"JAK2\", \"size\": 1.0}, {\"id\": 499, \"source\": \"INSR\", \"target\": \"SRC\", \"size\": 3.0}, {\"id\": 500, \"source\": \"JAK1\", \"target\": \"PGFRB\", \"size\": 5.0}, {\"id\": 501, \"source\": \"JAK1\", \"target\": \"PGFRA\", \"size\": 4.0}, {\"id\": 502, \"source\": \"JAK1\", \"target\": \"KPCZ\", \"size\": 1.0}, {\"id\": 503, \"source\": \"JAK1\", \"target\": \"FES\", \"size\": 0.5}, {\"id\": 504, \"source\": \"JAK2\", \"target\": \"PGFRB\", \"size\": 2.0}, {\"id\": 505, \"source\": \"JAK2\", \"target\": \"RON\", \"size\": 0.5}, {\"id\": 506, \"source\": \"LCK\", \"target\": \"FAK1\", \"size\": 1.0}, {\"id\": 507, \"source\": \"AKT1\", \"target\": \"RON\", \"size\": 0.5}, {\"id\": 508, \"source\": \"AKT1\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 509, \"source\": \"AKT1\", \"target\": \"PDK2\", \"size\": 0.5}, {\"id\": 510, \"source\": \"AKT1\", \"target\": \"PAK1\", \"size\": 10.0}, {\"id\": 511, \"source\": \"AKT1\", \"target\": \"IKKB\", \"size\": 33.0}, {\"id\": 512, \"source\": \"AKT1\", \"target\": \"WNK1\", \"size\": 0.5}, {\"id\": 513, \"source\": \"RAF1\", \"target\": \"KPCD\", \"size\": 7.0}, {\"id\": 514, \"source\": \"RAF1\", \"target\": \"MP2K2\", \"size\": 56.0}, {\"id\": 515, \"source\": \"YES\", \"target\": \"KIT\", \"size\": 0.5}, {\"id\": 516, \"source\": \"YES\", \"target\": \"PGFRB\", \"size\": 0.5}, {\"id\": 517, \"source\": \"KIT\", \"target\": \"KPCB\", \"size\": 4.0}, {\"id\": 518, \"source\": \"KIT\", \"target\": \"ABL1\", \"size\": 2.0}, {\"id\": 519, \"source\": \"KIT\", \"target\": \"BTK\", \"size\": 0.5}, {\"id\": 520, \"source\": \"KIT\", \"target\": \"PK3CG\", \"size\": 2.0}, {\"id\": 521, \"source\": \"LYN\", \"target\": \"TEC\", \"size\": 0.5}, {\"id\": 522, \"source\": \"PGFRB\", \"target\": \"TYK2\", \"size\": 1.0}, {\"id\": 523, \"source\": \"PGFRB\", \"target\": \"ARAF\", \"size\": 6.0}, {\"id\": 524, \"source\": \"E2AK2\", \"target\": \"M3K7\", \"size\": 3.0}, {\"id\": 525, \"source\": \"MP2K1\", \"target\": \"KPCZ\", \"size\": 6.0}, {\"id\": 526, \"source\": \"MP2K1\", \"target\": \"KPCI\", \"size\": 3.0}, {\"id\": 527, \"source\": \"MP2K1\", \"target\": \"MK14\", \"size\": 21.0}, {\"id\": 528, \"source\": \"FGFR2\", \"target\": \"FAK2\", \"size\": 0.5}, {\"id\": 529, \"source\": \"FGFR2\", \"target\": \"PAK4\", \"size\": 2.0}, {\"id\": 530, \"source\": \"MK01\", \"target\": \"PAK2\", \"size\": 8.0}, {\"id\": 531, \"source\": \"KPCB\", \"target\": \"IKKA\", \"size\": 8.0}, {\"id\": 532, \"source\": \"KPCB\", \"target\": \"IKKB\", \"size\": 11.0}, {\"id\": 533, \"source\": \"KPCD\", \"target\": \"SRC\", \"size\": 4.0}, {\"id\": 534, \"source\": \"KPCZ\", \"target\": \"GSK3B\", \"size\": 6.0}, {\"id\": 535, \"source\": \"KPCZ\", \"target\": \"GSK3A\", \"size\": 1.0}, {\"id\": 536, \"source\": \"FES\", \"target\": \"JAK3\", \"size\": 0.5}, {\"id\": 537, \"source\": \"SRC\", \"target\": \"IKKA\", \"size\": 6.0}, {\"id\": 538, \"source\": \"SRC\", \"target\": \"IKKB\", \"size\": 6.0}, {\"id\": 539, \"source\": \"NTRK1\", \"target\": \"MK03\", \"size\": 6.0}, {\"id\": 540, \"source\": \"KPCI\", \"target\": \"IRAK1\", \"size\": 0.5}, {\"id\": 541, \"source\": \"KPCI\", \"target\": \"IKKA\", \"size\": 1.0}, {\"id\": 542, \"source\": \"IRAK1\", \"target\": \"BTK\", \"size\": 1.0}, {\"id\": 543, \"source\": \"IRAK1\", \"target\": \"MK08\", \"size\": 7.0}, {\"id\": 544, \"source\": \"IRAK1\", \"target\": \"M3K7\", \"size\": 6.0}, {\"id\": 545, \"source\": \"IRAK1\", \"target\": \"RIPK2\", \"size\": 2.0}, {\"id\": 546, \"source\": \"BTK\", \"target\": \"PI51B\", \"size\": 0.5}, {\"id\": 547, \"source\": \"BTK\", \"target\": \"PI42B\", \"size\": 0.5}, {\"id\": 548, \"source\": \"BTK\", \"target\": \"PI51A\", \"size\": 0.5}, {\"id\": 549, \"source\": \"BTK\", \"target\": \"PI51C\", \"size\": 0.5}, {\"id\": 550, \"source\": \"BTK\", \"target\": \"PI42A\", \"size\": 0.5}, {\"id\": 551, \"source\": \"BTK\", \"target\": \"PI42C\", \"size\": 0.5}, {\"id\": 552, \"source\": \"KSYK\", \"target\": \"KS6A1\", \"size\": 0.5}, {\"id\": 553, \"source\": \"KSYK\", \"target\": \"MK03\", \"size\": 11.0}, {\"id\": 554, \"source\": \"KSYK\", \"target\": \"KPCD1\", \"size\": 0.5}, {\"id\": 555, \"source\": \"MK14\", \"target\": \"M3K7\", \"size\": 12.0}, {\"id\": 556, \"source\": \"MARK2\", \"target\": \"M3K3\", \"size\": 0.5}, {\"id\": 557, \"source\": \"TEC\", \"target\": \"PI51A\", \"size\": 0.5}, {\"id\": 558, \"source\": \"TEC\", \"target\": \"PI42A\", \"size\": 0.5}, {\"id\": 559, \"source\": \"FAK1\", \"target\": \"ROCK1\", \"size\": 7.0}, {\"id\": 560, \"source\": \"MP2K4\", \"target\": \"M3K14\", \"size\": 5.0}, {\"id\": 561, \"source\": \"MK03\", \"target\": \"PAK2\", \"size\": 8.0}, {\"id\": 562, \"source\": \"M3K3\", \"target\": \"IKKB\", \"size\": 3.0}, {\"id\": 563, \"source\": \"M3K3\", \"target\": \"WNK1\", \"size\": 0.5}, {\"id\": 564, \"source\": \"IKKB\", \"target\": \"TBK1\", \"size\": 13.0}, {\"id\": 565, \"source\": \"WNK1\", \"target\": \"M3K2\", \"size\": 0.5}, {\"id\": 566, \"source\": \"AVR2A\", \"target\": \"ACVL1\", \"size\": 0.5}, {\"id\": 567, \"source\": \"EF2K\", \"target\": \"KS6B2\", \"size\": 1.0}, {\"id\": 568, \"source\": \"DAPK1\", \"target\": \"MK01\", \"size\": 3.0}, {\"id\": 569, \"source\": \"TGFR2\", \"target\": \"TSSK1\", \"size\": 0.5}, {\"id\": 570, \"source\": \"BMR1B\", \"target\": \"SG196\", \"size\": 0.5}, {\"id\": 571, \"source\": \"SG196\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 572, \"source\": \"PAK1\", \"target\": \"TGFR2\", \"size\": 1.0}, {\"id\": 573, \"source\": \"KPCD\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 574, \"source\": \"KPCE\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 575, \"source\": \"KPCL\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 576, \"source\": \"KPCL\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 577, \"source\": \"KPCZ\", \"target\": \"FYN\", \"size\": 3.0}, {\"id\": 578, \"source\": \"STK11\", \"target\": \"SNRK\", \"size\": 0.5}, {\"id\": 579, \"source\": \"CDC7\", \"target\": \"CDK4\", \"size\": 1.0}, {\"id\": 580, \"source\": \"ABL1\", \"target\": \"KPCD1\", \"size\": 0.5}, {\"id\": 581, \"source\": \"FYN\", \"target\": \"CDK5\", \"size\": 1.0}, {\"id\": 582, \"source\": \"CDK5\", \"target\": \"MP2K1\", \"size\": 0.5}, {\"id\": 583, \"source\": \"ABL1\", \"target\": \"CDK5\", \"size\": 1.0}, {\"id\": 584, \"source\": \"CDK5\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 585, \"source\": \"CDK5\", \"target\": \"ERBB3\", \"size\": 0.5}, {\"id\": 586, \"source\": \"KC1D\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 587, \"source\": \"GAK\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 588, \"source\": \"CDK5\", \"target\": \"PAK1\", \"size\": 1.0}, {\"id\": 589, \"source\": \"CDK5\", \"target\": \"MK10\", \"size\": 0.5}, {\"id\": 590, \"source\": \"SGK1\", \"target\": \"GSK3B\", \"size\": 2.0}, {\"id\": 591, \"source\": \"KCC2B\", \"target\": \"KCC2D\", \"size\": 27.0}, {\"id\": 592, \"source\": \"ST38L\", \"target\": \"STK24\", \"size\": 0.5}, {\"id\": 593, \"source\": \"FAK2\", \"target\": \"FAK1\", \"size\": 7.0}, {\"id\": 594, \"source\": \"PLK1\", \"target\": \"BUB1\", \"size\": 3.0}, {\"id\": 595, \"source\": \"STK39\", \"target\": \"WNK4\", \"size\": 0.5}, {\"id\": 596, \"source\": \"M3K7\", \"target\": \"M3K3\", \"size\": 1.0}, {\"id\": 597, \"source\": \"FGFR4\", \"target\": \"EPHA4\", \"size\": 0.5}, {\"id\": 598, \"source\": \"CSK\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 599, \"source\": \"CSK\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 600, \"source\": \"IGF1R\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 601, \"source\": \"INSR\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 602, \"source\": \"CSK\", \"target\": \"LCK\", \"size\": 0.5}, {\"id\": 603, \"source\": \"HCK\", \"target\": \"AGK\", \"size\": 0.5}, {\"id\": 604, \"source\": \"CSK\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 605, \"source\": \"CSK\", \"target\": \"LYN\", \"size\": 1.0}, {\"id\": 606, \"source\": \"CSK\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 607, \"source\": \"FAK1\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 608, \"source\": \"KAPCA\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 609, \"source\": \"STK11\", \"target\": \"AAPK2\", \"size\": 8.0}, {\"id\": 610, \"source\": \"CSK\", \"target\": \"MK15\", \"size\": 0.5}, {\"id\": 611, \"source\": \"KSR1\", \"target\": \"RAF1\", \"size\": 2.0}, {\"id\": 612, \"source\": \"KSR1\", \"target\": \"MP2K1\", \"size\": 1.0}, {\"id\": 613, \"source\": \"NDKA\", \"target\": \"KSR1\", \"size\": 0.5}, {\"id\": 614, \"source\": \"EGFR\", \"target\": \"LYN\", \"size\": 1.0}, {\"id\": 615, \"source\": \"PAK2\", \"target\": \"LCK\", \"size\": 1.0}, {\"id\": 616, \"source\": \"PAK2\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 617, \"source\": \"PAK2\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 618, \"source\": \"PAK2\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 619, \"source\": \"PAK2\", \"target\": \"FYN\", \"size\": 3.0}, {\"id\": 620, \"source\": \"E2AK2\", \"target\": \"TYK2\", \"size\": 8.0}, {\"id\": 621, \"source\": \"E2AK2\", \"target\": \"JAK1\", \"size\": 9.0}, {\"id\": 622, \"source\": \"EGFR\", \"target\": \"P3C2A\", \"size\": 0.5}, {\"id\": 623, \"source\": \"ERBB2\", \"target\": \"P3C2A\", \"size\": 0.5}, {\"id\": 624, \"source\": \"CDK5\", \"target\": \"PI51C\", \"size\": 0.5}, {\"id\": 625, \"source\": \"PIM1\", \"target\": \"EPHA3\", \"size\": 0.5}, {\"id\": 626, \"source\": \"NEK11\", \"target\": \"NEK2\", \"size\": 0.5}, {\"id\": 627, \"source\": \"EGFR\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 628, \"source\": \"KPCE\", \"target\": \"KS6B2\", \"size\": 3.0}, {\"id\": 629, \"source\": \"PAK2\", \"target\": \"LIMK1\", \"size\": 2.0}, {\"id\": 630, \"source\": \"PAK2\", \"target\": \"RAF1\", \"size\": 8.0}, {\"id\": 631, \"source\": \"M3K8\", \"target\": \"RIPK1\", \"size\": 2.0}, {\"id\": 632, \"source\": \"KSR1\", \"target\": \"EPHB2\", \"size\": 0.5}, {\"id\": 633, \"source\": \"KSR1\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 634, \"source\": \"KSR1\", \"target\": \"MK01\", \"size\": 2.0}, {\"id\": 635, \"source\": \"GSK3B\", \"target\": \"CDK5\", \"size\": 2.0}, {\"id\": 636, \"source\": \"IKKA\", \"target\": \"IKKB\", \"size\": 39.0}, {\"id\": 637, \"source\": \"ERBB4\", \"target\": \"ERBB2\", \"size\": 3.0}, {\"id\": 638, \"source\": \"IRAK1\", \"target\": \"MK14\", \"size\": 8.0}, {\"id\": 639, \"source\": \"PK3CA\", \"target\": \"KS6B1\", \"size\": 19.0}, {\"id\": 640, \"source\": \"PDK1\", \"target\": \"KS6B1\", \"size\": 1.0}, {\"id\": 641, \"source\": \"MK03\", \"target\": \"KS6B1\", \"size\": 17.0}, {\"id\": 642, \"source\": \"MK08\", \"target\": \"KS6B1\", \"size\": 7.0}, {\"id\": 643, \"source\": \"MK09\", \"target\": \"KS6B1\", \"size\": 7.0}, {\"id\": 644, \"source\": \"MAPK5\", \"target\": \"MK04\", \"size\": 0.5}, {\"id\": 645, \"source\": \"MAPK5\", \"target\": \"MK06\", \"size\": 0.5}, {\"id\": 646, \"source\": \"JAK2\", \"target\": \"EGFR\", \"size\": 2.0}, {\"id\": 647, \"source\": \"EGFR\", \"target\": \"ERBB2\", \"size\": 17.0}, {\"id\": 648, \"source\": \"PGFRB\", \"target\": \"EGFR\", \"size\": 19.0}, {\"id\": 649, \"source\": \"FER\", \"target\": \"EGFR\", \"size\": 1.0}, {\"id\": 650, \"source\": \"KPCA\", \"target\": \"EGFR\", \"size\": 21.0}, {\"id\": 651, \"source\": \"KPCD\", \"target\": \"EGFR\", \"size\": 2.0}, {\"id\": 652, \"source\": \"SRC\", \"target\": \"EGFR\", \"size\": 16.0}, {\"id\": 653, \"source\": \"ERBB3\", \"target\": \"EGFR\", \"size\": 6.0}, {\"id\": 654, \"source\": \"FAK1\", \"target\": \"EGFR\", \"size\": 11.0}, {\"id\": 655, \"source\": \"FAK2\", \"target\": \"EGFR\", \"size\": 3.0}, {\"id\": 656, \"source\": \"KAPCA\", \"target\": \"EGFR\", \"size\": 12.0}, {\"id\": 657, \"source\": \"M4K1\", \"target\": \"EGFR\", \"size\": 1.0}, {\"id\": 658, \"source\": \"PTK6\", \"target\": \"EGFR\", \"size\": 0.5}, {\"id\": 659, \"source\": \"KCC2G\", \"target\": \"EGFR\", \"size\": 7.0}, {\"id\": 660, \"source\": \"RIPK1\", \"target\": \"EGFR\", \"size\": 1.0}, {\"id\": 661, \"source\": \"M3K14\", \"target\": \"EGFR\", \"size\": 2.0}, {\"id\": 662, \"source\": \"ACK1\", \"target\": \"EGFR\", \"size\": 0.5}, {\"id\": 663, \"source\": \"KCC2A\", \"target\": \"EGFR\", \"size\": 7.0}, {\"id\": 664, \"source\": \"JAK2\", \"target\": \"FYN\", \"size\": 2.0}, {\"id\": 665, \"source\": \"RAF1\", \"target\": \"FYN\", \"size\": 7.0}, {\"id\": 666, \"source\": \"CSF1R\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 667, \"source\": \"PGFRB\", \"target\": \"FYN\", \"size\": 2.0}, {\"id\": 668, \"source\": \"TYK2\", \"target\": \"FYN\", \"size\": 2.0}, {\"id\": 669, \"source\": \"EPHA8\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 670, \"source\": \"ZAP70\", \"target\": \"FYN\", \"size\": 2.0}, {\"id\": 671, \"source\": \"ITK\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 672, \"source\": \"FYN\", \"target\": \"TXK\", \"size\": 0.5}, {\"id\": 673, \"source\": \"KSYK\", \"target\": \"FYN\", \"size\": 5.0}, {\"id\": 674, \"source\": \"TYRO3\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 675, \"source\": \"KPCT\", \"target\": \"FYN\", \"size\": 2.0}, {\"id\": 676, \"source\": \"NTRK2\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 677, \"source\": \"FAK1\", \"target\": \"FYN\", \"size\": 4.0}, {\"id\": 678, \"source\": \"FAK2\", \"target\": \"FYN\", \"size\": 2.0}, {\"id\": 679, \"source\": \"EPHB3\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 680, \"source\": \"EPHA4\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 681, \"source\": \"ACK1\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 682, \"source\": \"ABL2\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 683, \"source\": \"ABL1\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 684, \"source\": \"BTK\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 685, \"source\": \"PK3CB\", \"target\": \"HCK\", \"size\": 3.0}, {\"id\": 686, \"source\": \"MERTK\", \"target\": \"ACK1\", \"size\": 0.5}, {\"id\": 687, \"source\": \"JAK1\", \"target\": \"IGF1R\", \"size\": 4.0}, {\"id\": 688, \"source\": \"SRC\", \"target\": \"IGF1R\", \"size\": 7.0}, {\"id\": 689, \"source\": \"INSRR\", \"target\": \"INSR\", \"size\": 2.0}, {\"id\": 690, \"source\": \"RAF1\", \"target\": \"INSR\", \"size\": 10.0}, {\"id\": 691, \"source\": \"KPCA\", \"target\": \"INSR\", \"size\": 7.0}, {\"id\": 692, \"source\": \"KPCD\", \"target\": \"INSR\", \"size\": 2.0}, {\"id\": 693, \"source\": \"INSR\", \"target\": \"FAK1\", \"size\": 3.0}, {\"id\": 694, \"source\": \"MK03\", \"target\": \"INSR\", \"size\": 14.0}, {\"id\": 695, \"source\": \"GSK3A\", \"target\": \"SGK1\", \"size\": 0.5}, {\"id\": 696, \"source\": \"RAF1\", \"target\": \"JAK1\", \"size\": 12.0}, {\"id\": 697, \"source\": \"JAK1\", \"target\": \"TYK2\", \"size\": 14.0}, {\"id\": 698, \"source\": \"FER\", \"target\": \"JAK1\", \"size\": 0.5}, {\"id\": 699, \"source\": \"ABL1\", \"target\": \"JAK1\", \"size\": 1.0}, {\"id\": 700, \"source\": \"BTK\", \"target\": \"JAK1\", \"size\": 1.0}, {\"id\": 701, \"source\": \"KSYK\", \"target\": \"JAK1\", \"size\": 6.0}, {\"id\": 702, \"source\": \"JAK3\", \"target\": \"JAK1\", \"size\": 10.0}, {\"id\": 703, \"source\": \"TEC\", \"target\": \"JAK1\", \"size\": 1.0}, {\"id\": 704, \"source\": \"FAK2\", \"target\": \"JAK1\", \"size\": 1.0}, {\"id\": 705, \"source\": \"JAK2\", \"target\": \"RAF1\", \"size\": 9.0}, {\"id\": 706, \"source\": \"ERBB2\", \"target\": \"JAK2\", \"size\": 1.0}, {\"id\": 707, \"source\": \"YES\", \"target\": \"JAK2\", \"size\": 0.5}, {\"id\": 708, \"source\": \"KIT\", \"target\": \"JAK2\", \"size\": 1.0}, {\"id\": 709, \"source\": \"LYN\", \"target\": \"JAK2\", \"size\": 2.0}, {\"id\": 710, \"source\": \"ABL1\", \"target\": \"JAK2\", \"size\": 0.5}, {\"id\": 711, \"source\": \"JAK3\", \"target\": \"JAK2\", \"size\": 8.0}, {\"id\": 712, \"source\": \"TEC\", \"target\": \"JAK2\", \"size\": 0.5}, {\"id\": 713, \"source\": \"FAK1\", \"target\": \"JAK2\", \"size\": 2.0}, {\"id\": 714, \"source\": \"FAK2\", \"target\": \"JAK2\", \"size\": 1.0}, {\"id\": 715, \"source\": \"RAF1\", \"target\": \"LCK\", \"size\": 2.0}, {\"id\": 716, \"source\": \"KIT\", \"target\": \"LCK\", \"size\": 0.5}, {\"id\": 717, \"source\": \"PK3CA\", \"target\": \"LCK\", \"size\": 4.0}, {\"id\": 718, \"source\": \"LCK\", \"target\": \"ZAP70\", \"size\": 6.0}, {\"id\": 719, \"source\": \"MK01\", \"target\": \"LCK\", \"size\": 5.0}, {\"id\": 720, \"source\": \"KPCA\", \"target\": \"LCK\", \"size\": 1.0}, {\"id\": 721, \"source\": \"LCK\", \"target\": \"KPCD\", \"size\": 0.5}, {\"id\": 722, \"source\": \"LCK\", \"target\": \"ITK\", \"size\": 1.0}, {\"id\": 723, \"source\": \"KSYK\", \"target\": \"LCK\", \"size\": 3.0}, {\"id\": 724, \"source\": \"JAK3\", \"target\": \"LCK\", \"size\": 4.0}, {\"id\": 725, \"source\": \"LCK\", \"target\": \"KPCT\", \"size\": 4.0}, {\"id\": 726, \"source\": \"FAK2\", \"target\": \"LCK\", \"size\": 1.0}, {\"id\": 727, \"source\": \"KAPCA\", \"target\": \"LCK\", \"size\": 1.0}, {\"id\": 728, \"source\": \"MK03\", \"target\": \"LCK\", \"size\": 5.0}, {\"id\": 729, \"source\": \"NDK3\", \"target\": \"NDKA\", \"size\": 2.0}, {\"id\": 730, \"source\": \"NDK3\", \"target\": \"NDKB\", \"size\": 2.0}, {\"id\": 731, \"source\": \"JAK3\", \"target\": \"ALK\", \"size\": 1.0}, {\"id\": 732, \"source\": \"HIPK3\", \"target\": \"LIMK2\", \"size\": 0.5}, {\"id\": 733, \"source\": \"ABL1\", \"target\": \"ABL2\", \"size\": 3.0}, {\"id\": 734, \"source\": \"EPHB2\", \"target\": \"ABL2\", \"size\": 0.5}, {\"id\": 735, \"source\": \"AKT2\", \"target\": \"AKT1\", \"size\": 80.0}, {\"id\": 736, \"source\": \"AKT1\", \"target\": \"RAF1\", \"size\": 54.0}, {\"id\": 737, \"source\": \"KPCZ\", \"target\": \"AKT1\", \"size\": 10.0}, {\"id\": 738, \"source\": \"SRC\", \"target\": \"AKT1\", \"size\": 17.0}, {\"id\": 739, \"source\": \"AKT1\", \"target\": \"M3K8\", \"size\": 4.0}, {\"id\": 740, \"source\": \"AKT1\", \"target\": \"IRAK1\", \"size\": 7.0}, {\"id\": 741, \"source\": \"AKT1\", \"target\": \"M3K11\", \"size\": 2.0}, {\"id\": 742, \"source\": \"KPCT\", \"target\": \"AKT1\", \"size\": 5.0}, {\"id\": 743, \"source\": \"AKT1\", \"target\": \"IKKA\", \"size\": 29.0}, {\"id\": 744, \"source\": \"AKT1\", \"target\": \"MP2K4\", \"size\": 12.0}, {\"id\": 745, \"source\": \"ILK\", \"target\": \"AKT1\", \"size\": 2.0}, {\"id\": 746, \"source\": \"AKT1\", \"target\": \"M3K5\", \"size\": 8.0}, {\"id\": 747, \"source\": \"PKN2\", \"target\": \"AKT1\", \"size\": 1.0}, {\"id\": 748, \"source\": \"AKT1\", \"target\": \"CHK1\", \"size\": 2.0}, {\"id\": 749, \"source\": \"PDPK1\", \"target\": \"AKT1\", \"size\": 22.0}, {\"id\": 750, \"source\": \"AKT1\", \"target\": \"GSK3A\", \"size\": 3.0}, {\"id\": 751, \"source\": \"TRIB3\", \"target\": \"AKT1\", \"size\": 1.0}, {\"id\": 752, \"source\": \"KS6B1\", \"target\": \"AKT1\", \"size\": 20.0}, {\"id\": 753, \"source\": \"KKCC1\", \"target\": \"AKT1\", \"size\": 0.5}, {\"id\": 754, \"source\": \"AKT2\", \"target\": \"IKKA\", \"size\": 29.0}, {\"id\": 755, \"source\": \"GSK3B\", \"target\": \"AKT2\", \"size\": 28.0}, {\"id\": 756, \"source\": \"PDPK1\", \"target\": \"AKT2\", \"size\": 22.0}, {\"id\": 757, \"source\": \"TRIB3\", \"target\": \"AKT2\", \"size\": 1.0}, {\"id\": 758, \"source\": \"PGFRB\", \"target\": \"RAF1\", \"size\": 17.0}, {\"id\": 759, \"source\": \"RAF1\", \"target\": \"MP2K1\", \"size\": 64.0}, {\"id\": 760, \"source\": \"MK01\", \"target\": \"RAF1\", \"size\": 67.0}, {\"id\": 761, \"source\": \"KPCA\", \"target\": \"RAF1\", \"size\": 33.0}, {\"id\": 762, \"source\": \"KPCE\", \"target\": \"RAF1\", \"size\": 6.0}, {\"id\": 763, \"source\": \"KPCZ\", \"target\": \"RAF1\", \"size\": 7.0}, {\"id\": 764, \"source\": \"KPYM\", \"target\": \"RAF1\", \"size\": 3.0}, {\"id\": 765, \"source\": \"SRC\", \"target\": \"RAF1\", \"size\": 21.0}, {\"id\": 766, \"source\": \"PAK3\", \"target\": \"RAF1\", \"size\": 7.0}, {\"id\": 767, \"source\": \"KAPCA\", \"target\": \"RAF1\", \"size\": 23.0}, {\"id\": 768, \"source\": \"M3K5\", \"target\": \"RAF1\", \"size\": 4.0}, {\"id\": 769, \"source\": \"MK07\", \"target\": \"RAF1\", \"size\": 6.0}, {\"id\": 770, \"source\": \"PAK1\", \"target\": \"RAF1\", \"size\": 13.0}, {\"id\": 771, \"source\": \"AAPK1\", \"target\": \"RAF1\", \"size\": 7.0}, {\"id\": 772, \"source\": \"DMPK\", \"target\": \"RAF1\", \"size\": 0.5}, {\"id\": 773, \"source\": \"MST4\", \"target\": \"RAF1\", \"size\": 0.5}, {\"id\": 774, \"source\": \"KSR2\", \"target\": \"RAF1\", \"size\": 1.0}, {\"id\": 775, \"source\": \"TOPK\", \"target\": \"RAF1\", \"size\": 0.5}, {\"id\": 776, \"source\": \"SRC\", \"target\": \"RET\", \"size\": 1.0}, {\"id\": 777, \"source\": \"YES\", \"target\": \"CSF1R\", \"size\": 0.5}, {\"id\": 778, \"source\": \"LYN\", \"target\": \"CSF1R\", \"size\": 0.5}, {\"id\": 779, \"source\": \"SRC\", \"target\": \"MET\", \"size\": 9.0}, {\"id\": 780, \"source\": \"SRC\", \"target\": \"ERBB2\", \"size\": 8.0}, {\"id\": 781, \"source\": \"ERBB3\", \"target\": \"ERBB2\", \"size\": 5.0}, {\"id\": 782, \"source\": \"MATK\", \"target\": \"ERBB2\", \"size\": 0.5}, {\"id\": 783, \"source\": \"FAK1\", \"target\": \"ERBB2\", \"size\": 6.0}, {\"id\": 784, \"source\": \"FAK2\", \"target\": \"ERBB2\", \"size\": 1.0}, {\"id\": 785, \"source\": \"EGFR\", \"target\": \"CSK\", \"size\": 1.0}, {\"id\": 786, \"source\": \"ERBB3\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 787, \"source\": \"IKKE\", \"target\": \"ROCK2\", \"size\": 0.5}, {\"id\": 788, \"source\": \"IKKE\", \"target\": \"DUSTY\", \"size\": 0.5}, {\"id\": 789, \"source\": \"LRRK1\", \"target\": \"PAK4\", \"size\": 0.5}, {\"id\": 790, \"source\": \"KCC2A\", \"target\": \"KCC2B\", \"size\": 27.0}, {\"id\": 791, \"source\": \"KCC2A\", \"target\": \"KCC2D\", \"size\": 27.0}, {\"id\": 792, \"source\": \"STK24\", \"target\": \"STK25\", \"size\": 0.5}, {\"id\": 793, \"source\": \"PASK\", \"target\": \"STK16\", \"size\": 0.5}, {\"id\": 794, \"source\": \"ROCK2\", \"target\": \"STK16\", \"size\": 0.5}, {\"id\": 795, \"source\": \"TTBK1\", \"target\": \"TTBK2\", \"size\": 0.5}, {\"id\": 796, \"source\": \"NEK6\", \"target\": \"NEK7\", \"size\": 0.5}, {\"id\": 797, \"source\": \"SNRK\", \"target\": \"STK16\", \"size\": 0.5}, {\"id\": 798, \"source\": \"CDK4\", \"target\": \"LYN\", \"size\": 2.0}, {\"id\": 799, \"source\": \"CHK1\", \"target\": \"CSK21\", \"size\": 0.5}, {\"id\": 800, \"source\": \"BMPR2\", \"target\": \"TGFR1\", \"size\": 3.0}, {\"id\": 801, \"source\": \"BMPR2\", \"target\": \"ACV1B\", \"size\": 3.0}, {\"id\": 802, \"source\": \"BMPR2\", \"target\": \"ACVR1\", \"size\": 4.0}, {\"id\": 803, \"source\": \"ATR\", \"target\": \"ABL1\", \"size\": 1.0}, {\"id\": 804, \"source\": \"ATR\", \"target\": \"ATM\", \"size\": 5.0}, {\"id\": 805, \"source\": \"PRKDC\", \"target\": \"CHK1\", \"size\": 1.0}, {\"id\": 806, \"source\": \"ATR\", \"target\": \"PK3CA\", \"size\": 3.0}, {\"id\": 807, \"source\": \"JAK1\", \"target\": \"ABL2\", \"size\": 0.5}, {\"id\": 808, \"source\": \"MK01\", \"target\": \"MAPK2\", \"size\": 6.0}, {\"id\": 809, \"source\": \"STK39\", \"target\": \"LMTK1\", \"size\": 0.5}, {\"id\": 810, \"source\": \"M3K8\", \"target\": \"KSR2\", \"size\": 0.5}, {\"id\": 811, \"source\": \"CDK5\", \"target\": \"LMTK2\", \"size\": 0.5}, {\"id\": 812, \"source\": \"YES\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 813, \"source\": \"SGK1\", \"target\": \"KKCC2\", \"size\": 0.5}, {\"id\": 814, \"source\": \"AKT1\", \"target\": \"MK14\", \"size\": 30.0}, {\"id\": 815, \"source\": \"CDK2\", \"target\": \"CDK6\", \"size\": 10.0}, {\"id\": 816, \"source\": \"M3K1\", \"target\": \"MK08\", \"size\": 14.0}, {\"id\": 817, \"source\": \"MK01\", \"target\": \"INSR\", \"size\": 16.0}, {\"id\": 818, \"source\": \"MK14\", \"target\": \"EGFR\", \"size\": 9.0}, {\"id\": 819, \"source\": \"SRC\", \"target\": \"FYN\", \"size\": 4.0}, {\"id\": 820, \"source\": \"SRC\", \"target\": \"LYN\", \"size\": 5.0}, {\"id\": 821, \"source\": \"M4K2\", \"target\": \"M3K1\", \"size\": 1.0}, {\"id\": 822, \"source\": \"M4K2\", \"target\": \"MP2K4\", \"size\": 1.0}, {\"id\": 823, \"source\": \"PK3CD\", \"target\": \"PK3CG\", \"size\": 5.0}, {\"id\": 824, \"source\": \"KAPCA\", \"target\": \"KKCC2\", \"size\": 4.0}, {\"id\": 825, \"source\": \"PRKDC\", \"target\": \"IKKB\", \"size\": 0.5}, {\"id\": 826, \"source\": \"M4K4\", \"target\": \"M3K1\", \"size\": 1.0}, {\"id\": 827, \"source\": \"PRKDC\", \"target\": \"AKT2\", \"size\": 0.5}, {\"id\": 828, \"source\": \"EGFR\", \"target\": \"IGF1R\", \"size\": 16.0}, {\"id\": 829, \"source\": \"BTK\", \"target\": \"KS6B1\", \"size\": 0.5}, {\"id\": 830, \"source\": \"CSK21\", \"target\": \"KS6B1\", \"size\": 0.5}, {\"id\": 831, \"source\": \"LYN\", \"target\": \"KS6B1\", \"size\": 1.0}, {\"id\": 832, \"source\": \"KPCZ\", \"target\": \"KS6B1\", \"size\": 3.0}, {\"id\": 833, \"source\": \"SRC\", \"target\": \"KS6B1\", \"size\": 4.0}, {\"id\": 834, \"source\": \"KSYK\", \"target\": \"KS6B1\", \"size\": 2.0}, {\"id\": 835, \"source\": \"BTK\", \"target\": \"KS6B2\", \"size\": 0.5}, {\"id\": 836, \"source\": \"LYN\", \"target\": \"KS6B2\", \"size\": 1.0}, {\"id\": 837, \"source\": \"SRC\", \"target\": \"KS6B2\", \"size\": 4.0}, {\"id\": 838, \"source\": \"KSYK\", \"target\": \"KS6B2\", \"size\": 2.0}, {\"id\": 839, \"source\": \"AKT1\", \"target\": \"PAK6\", \"size\": 5.0}, {\"id\": 840, \"source\": \"PDK1\", \"target\": \"PKN2\", \"size\": 0.5}, {\"id\": 841, \"source\": \"PDK1\", \"target\": \"PKN1\", \"size\": 0.5}, {\"id\": 842, \"source\": \"LCK\", \"target\": \"PI4KA\", \"size\": 0.5}, {\"id\": 843, \"source\": \"BTK\", \"target\": \"FYN\", \"size\": 3.0}, {\"id\": 844, \"source\": \"IGF1R\", \"target\": \"FAK1\", \"size\": 6.0}, {\"id\": 845, \"source\": \"M3K8\", \"target\": \"MP2K1\", \"size\": 4.0}, {\"id\": 846, \"source\": \"MK14\", \"target\": \"CSK21\", \"size\": 1.0}, {\"id\": 847, \"source\": \"KPCA\", \"target\": \"GSK3B\", \"size\": 12.0}, {\"id\": 848, \"source\": \"CSF1R\", \"target\": \"SRC\", \"size\": 2.0}, {\"id\": 849, \"source\": \"IRAK1\", \"target\": \"IKKB\", \"size\": 6.0}, {\"id\": 850, \"source\": \"IRAK1\", \"target\": \"IKKA\", \"size\": 6.0}, {\"id\": 851, \"source\": \"ITK\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 852, \"source\": \"PRKDC\", \"target\": \"MK09\", \"size\": 0.5}, {\"id\": 853, \"source\": \"FAK1\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 854, \"source\": \"RAF1\", \"target\": \"M3K1\", \"size\": 7.0}, {\"id\": 855, \"source\": \"MP2K1\", \"target\": \"M3K1\", \"size\": 9.0}, {\"id\": 856, \"source\": \"MK01\", \"target\": \"M3K1\", \"size\": 14.0}, {\"id\": 857, \"source\": \"M3K11\", \"target\": \"MP2K4\", \"size\": 1.0}, {\"id\": 858, \"source\": \"MK14\", \"target\": \"KS6A3\", \"size\": 3.0}, {\"id\": 859, \"source\": \"MK14\", \"target\": \"KS6A5\", \"size\": 4.0}, {\"id\": 860, \"source\": \"M3K13\", \"target\": \"MP2K7\", \"size\": 1.0}, {\"id\": 861, \"source\": \"ACV1B\", \"target\": \"AVR2A\", \"size\": 3.0}, {\"id\": 862, \"source\": \"ACV1B\", \"target\": \"ACVR1\", \"size\": 3.0}, {\"id\": 863, \"source\": \"MK14\", \"target\": \"MP2K7\", \"size\": 12.0}, {\"id\": 864, \"source\": \"M3K1\", \"target\": \"MP2K4\", \"size\": 7.0}, {\"id\": 865, \"source\": \"RAF1\", \"target\": \"LTK\", \"size\": 0.5}, {\"id\": 866, \"source\": \"M3K1\", \"target\": \"IKKB\", \"size\": 14.0}, {\"id\": 867, \"source\": \"PK3CA\", \"target\": \"SGK1\", \"size\": 4.0}, {\"id\": 868, \"source\": \"PDPK1\", \"target\": \"MK08\", \"size\": 12.0}, {\"id\": 869, \"source\": \"TGFR1\", \"target\": \"M3K7\", \"size\": 3.0}, {\"id\": 870, \"source\": \"TGFR1\", \"target\": \"MK14\", \"size\": 8.0}, {\"id\": 871, \"source\": \"SRC\", \"target\": \"EPHA3\", \"size\": 1.0}, {\"id\": 872, \"source\": \"SRC\", \"target\": \"EPHA4\", \"size\": 1.0}, {\"id\": 873, \"source\": \"EPHB2\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 874, \"source\": \"FYN\", \"target\": \"EPHA3\", \"size\": 1.0}, {\"id\": 875, \"source\": \"TGFR2\", \"target\": \"ACVR1\", \"size\": 2.0}, {\"id\": 876, \"source\": \"RIPK1\", \"target\": \"M3K7\", \"size\": 6.0}, {\"id\": 877, \"source\": \"MLKL\", \"target\": \"CDK1\", \"size\": 0.5}, {\"id\": 878, \"source\": \"AKT1\", \"target\": \"MARK2\", \"size\": 0.5}, {\"id\": 879, \"source\": \"ABL1\", \"target\": \"EPHA3\", \"size\": 1.0}, {\"id\": 880, \"source\": \"BRD4\", \"target\": \"CDK9\", \"size\": 0.5}, {\"id\": 881, \"source\": \"MARK2\", \"target\": \"MARK1\", \"size\": 0.5}, {\"id\": 882, \"source\": \"MARK2\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 883, \"source\": \"MARK2\", \"target\": \"KPCI\", \"size\": 0.5}, {\"id\": 884, \"source\": \"MARK2\", \"target\": \"MARK4\", \"size\": 0.5}, {\"id\": 885, \"source\": \"CDK9\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 886, \"source\": \"ATM\", \"target\": \"TAOK3\", \"size\": 0.5}, {\"id\": 887, \"source\": \"VRK2\", \"target\": \"M3K7\", \"size\": 0.5}, {\"id\": 888, \"source\": \"VRK2\", \"target\": \"MK08\", \"size\": 0.5}, {\"id\": 889, \"source\": \"VRK2\", \"target\": \"MP2K7\", \"size\": 0.5}, {\"id\": 890, \"source\": \"UHMK1\", \"target\": \"ABL1\", \"size\": 0.5}, {\"id\": 891, \"source\": \"ABL1\", \"target\": \"CDKL5\", \"size\": 0.5}, {\"id\": 892, \"source\": \"WNK2\", \"target\": \"ABL1\", \"size\": 0.5}, {\"id\": 893, \"source\": \"NEK8\", \"target\": \"ABL1\", \"size\": 0.5}, {\"id\": 894, \"source\": \"KPCZ\", \"target\": \"KPCI\", \"size\": 7.0}, {\"id\": 895, \"source\": \"M3K3\", \"target\": \"K6PL\", \"size\": 0.5}, {\"id\": 896, \"source\": \"M3K3\", \"target\": \"ALK\", \"size\": 0.5}, {\"id\": 897, \"source\": \"K6PL\", \"target\": \"IKKE\", \"size\": 0.5}, {\"id\": 898, \"source\": \"ABL2\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 899, \"source\": \"SRC\", \"target\": \"M4K1\", \"size\": 0.5}, {\"id\": 900, \"source\": \"RIPK3\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 901, \"source\": \"M3K8\", \"target\": \"K6PL\", \"size\": 0.5}, {\"id\": 902, \"source\": \"M3K3\", \"target\": \"M3K2\", \"size\": 2.0}, {\"id\": 903, \"source\": \"M3K3\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 904, \"source\": \"M3K3\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 905, \"source\": \"M3K3\", \"target\": \"MYLK2\", \"size\": 0.5}, {\"id\": 906, \"source\": \"IKKA\", \"target\": \"M3K3\", \"size\": 2.0}, {\"id\": 907, \"source\": \"M3K1\", \"target\": \"MYLK2\", \"size\": 0.5}, {\"id\": 908, \"source\": \"FYN\", \"target\": \"ABL2\", \"size\": 1.0}, {\"id\": 909, \"source\": \"FYN\", \"target\": \"NEK8\", \"size\": 0.5}, {\"id\": 910, \"source\": \"CDKL5\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 911, \"source\": \"FYN\", \"target\": \"MOS\", \"size\": 0.5}, {\"id\": 912, \"source\": \"WNK2\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 913, \"source\": \"GUC2D\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 914, \"source\": \"M4K1\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 915, \"source\": \"FYN\", \"target\": \"ABL1\", \"size\": 3.0}, {\"id\": 916, \"source\": \"M4K5\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 917, \"source\": \"MP2K1\", \"target\": \"TRIB3\", \"size\": 0.5}, {\"id\": 918, \"source\": \"MP2K7\", \"target\": \"TRIB3\", \"size\": 0.5}, {\"id\": 919, \"source\": \"LMTK1\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 920, \"source\": \"NLK\", \"target\": \"M3K7\", \"size\": 3.0}, {\"id\": 921, \"source\": \"PKN1\", \"target\": \"MK14\", \"size\": 1.0}, {\"id\": 922, \"source\": \"MP2K3\", \"target\": \"PKN1\", \"size\": 0.5}, {\"id\": 923, \"source\": \"MLTK\", \"target\": \"PKN1\", \"size\": 0.5}, {\"id\": 924, \"source\": \"EGFR\", \"target\": \"YES\", \"size\": 1.0}, {\"id\": 925, \"source\": \"EGFR\", \"target\": \"EPHB4\", \"size\": 0.5}, {\"id\": 926, \"source\": \"BMX\", \"target\": \"PIM1\", \"size\": 0.5}, {\"id\": 927, \"source\": \"RIPK3\", \"target\": \"DAPK1\", \"size\": 0.5}, {\"id\": 928, \"source\": \"WEE1\", \"target\": \"NEK6\", \"size\": 0.5}, {\"id\": 929, \"source\": \"PAK2\", \"target\": \"KAD2\", \"size\": 0.5}, {\"id\": 930, \"source\": \"ILK\", \"target\": \"KHK\", \"size\": 0.5}, {\"id\": 931, \"source\": \"TNIK\", \"target\": \"MK01\", \"size\": 0.5}, {\"id\": 932, \"source\": \"NDKB\", \"target\": \"KAD2\", \"size\": 1.0}, {\"id\": 933, \"source\": \"PAK2\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 934, \"source\": \"IKKE\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 935, \"source\": \"IKKE\", \"target\": \"PDXK\", \"size\": 0.5}, {\"id\": 936, \"source\": \"IKKE\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 937, \"source\": \"MELK\", \"target\": \"STK16\", \"size\": 0.5}, {\"id\": 938, \"source\": \"IKKE\", \"target\": \"SLK\", \"size\": 0.5}, {\"id\": 939, \"source\": \"IKKE\", \"target\": \"KAD2\", \"size\": 0.5}, {\"id\": 940, \"source\": \"GSK3B\", \"target\": \"MP2K5\", \"size\": 1.0}, {\"id\": 941, \"source\": \"IKKE\", \"target\": \"STK16\", \"size\": 0.5}, {\"id\": 942, \"source\": \"KSR1\", \"target\": \"MP2K2\", \"size\": 1.0}, {\"id\": 943, \"source\": \"ROR1\", \"target\": \"SRC\", \"size\": 0.5}, {\"id\": 944, \"source\": \"KPCZ\", \"target\": \"KPCT\", \"size\": 1.0}, {\"id\": 945, \"source\": \"M3K7\", \"target\": \"MP2K7\", \"size\": 7.0}, {\"id\": 946, \"source\": \"VRK1\", \"target\": \"PLK3\", \"size\": 0.5}, {\"id\": 947, \"source\": \"VRK1\", \"target\": \"VRK3\", \"size\": 0.5}, {\"id\": 948, \"source\": \"RIPK1\", \"target\": \"KC1A\", \"size\": 0.5}, {\"id\": 949, \"source\": \"AKT1\", \"target\": \"P4K2B\", \"size\": 0.5}, {\"id\": 950, \"source\": \"K6PF\", \"target\": \"MK03\", \"size\": 1.0}, {\"id\": 951, \"source\": \"MK13\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 952, \"source\": \"MK13\", \"target\": \"KPCD1\", \"size\": 1.0}, {\"id\": 953, \"source\": \"MK13\", \"target\": \"PGK1\", \"size\": 0.5}, {\"id\": 954, \"source\": \"NDKB\", \"target\": \"NDKA\", \"size\": 2.0}, {\"id\": 955, \"source\": \"GSK3A\", \"target\": \"M3K11\", \"size\": 1.0}, {\"id\": 956, \"source\": \"STK25\", \"target\": \"MST4\", \"size\": 0.5}, {\"id\": 957, \"source\": \"CSK22\", \"target\": \"CSK21\", \"size\": 8.0}, {\"id\": 958, \"source\": \"STK24\", \"target\": \"MST4\", \"size\": 0.5}, {\"id\": 959, \"source\": \"ERBB3\", \"target\": \"PK3CA\", \"size\": 4.0}, {\"id\": 960, \"source\": \"JAK2\", \"target\": \"ERBB3\", \"size\": 1.0}, {\"id\": 961, \"source\": \"OXSR1\", \"target\": \"WNK4\", \"size\": 0.5}, {\"id\": 962, \"source\": \"OXSR1\", \"target\": \"WNK1\", \"size\": 0.5}, {\"id\": 963, \"source\": \"ABL1\", \"target\": \"EGFR\", \"size\": 4.0}, {\"id\": 964, \"source\": \"ABL1\", \"target\": \"ERBB2\", \"size\": 3.0}, {\"id\": 965, \"source\": \"ABL1\", \"target\": \"ERBB3\", \"size\": 2.0}, {\"id\": 966, \"source\": \"ABL1\", \"target\": \"KPCD\", \"size\": 1.0}, {\"id\": 967, \"source\": \"ABL1\", \"target\": \"ERBB4\", \"size\": 1.0}, {\"id\": 968, \"source\": \"FES\", \"target\": \"EGFR\", \"size\": 0.5}, {\"id\": 969, \"source\": \"HCK\", \"target\": \"ERBB3\", \"size\": 0.5}, {\"id\": 970, \"source\": \"FGR\", \"target\": \"ERBB2\", \"size\": 0.5}, {\"id\": 971, \"source\": \"FGFR1\", \"target\": \"ERBB3\", \"size\": 1.0}, {\"id\": 972, \"source\": \"SRC\", \"target\": \"ERBB3\", \"size\": 4.0}, {\"id\": 973, \"source\": \"FER\", \"target\": \"ERBB2\", \"size\": 1.0}, {\"id\": 974, \"source\": \"FER\", \"target\": \"ERBB3\", \"size\": 0.5}, {\"id\": 975, \"source\": \"KPCA\", \"target\": \"JAK1\", \"size\": 5.0}, {\"id\": 976, \"source\": \"KPCA\", \"target\": \"TYK2\", \"size\": 1.0}, {\"id\": 977, \"source\": \"KAPCA\", \"target\": \"LIMK1\", \"size\": 0.5}, {\"id\": 978, \"source\": \"JAK1\", \"target\": \"ERBB2\", \"size\": 3.0}, {\"id\": 979, \"source\": \"MARK3\", \"target\": \"IKKB\", \"size\": 0.5}, {\"id\": 980, \"source\": \"AKT1\", \"target\": \"STK4\", \"size\": 5.0}, {\"id\": 981, \"source\": \"TEC\", \"target\": \"ERBB2\", \"size\": 0.5}, {\"id\": 982, \"source\": \"TXK\", \"target\": \"ERBB2\", \"size\": 0.5}, {\"id\": 983, \"source\": \"TXK\", \"target\": \"ERBB3\", \"size\": 0.5}, {\"id\": 984, \"source\": \"ABL2\", \"target\": \"EGFR\", \"size\": 2.0}, {\"id\": 985, \"source\": \"ABL2\", \"target\": \"ERBB2\", \"size\": 1.0}, {\"id\": 986, \"source\": \"ABL2\", \"target\": \"ERBB3\", \"size\": 1.0}, {\"id\": 987, \"source\": \"ABL2\", \"target\": \"ERBB4\", \"size\": 1.0}, {\"id\": 988, \"source\": \"ZAP70\", \"target\": \"EGFR\", \"size\": 1.0}, {\"id\": 989, \"source\": \"ZAP70\", \"target\": \"ERBB3\", \"size\": 0.5}, {\"id\": 990, \"source\": \"KSYK\", \"target\": \"EGFR\", \"size\": 2.0}, {\"id\": 991, \"source\": \"KSYK\", \"target\": \"ERBB2\", \"size\": 0.5}, {\"id\": 992, \"source\": \"KSYK\", \"target\": \"ERBB3\", \"size\": 0.5}, {\"id\": 993, \"source\": \"KSYK\", \"target\": \"ERBB4\", \"size\": 0.5}, {\"id\": 994, \"source\": \"BRAF\", \"target\": \"MP2K2\", \"size\": 28.0}, {\"id\": 995, \"source\": \"KC1A\", \"target\": \"KPCD2\", \"size\": 0.5}, {\"id\": 996, \"source\": \"MAPK2\", \"target\": \"LIMK1\", \"size\": 0.5}, {\"id\": 997, \"source\": \"BLK\", \"target\": \"EGFR\", \"size\": 0.5}, {\"id\": 998, \"source\": \"BLK\", \"target\": \"ERBB2\", \"size\": 0.5}, {\"id\": 999, \"source\": \"BMX\", \"target\": \"EGFR\", \"size\": 0.5}, {\"id\": 1000, \"source\": \"BMX\", \"target\": \"ERBB2\", \"size\": 0.5}, {\"id\": 1001, \"source\": \"JAK3\", \"target\": \"ERBB3\", \"size\": 0.5}, {\"id\": 1002, \"source\": \"KPCE\", \"target\": \"KPCA\", \"size\": 7.0}, {\"id\": 1003, \"source\": \"KPCE\", \"target\": \"KS6A2\", \"size\": 1.0}, {\"id\": 1004, \"source\": \"ITK\", \"target\": \"ERBB2\", \"size\": 0.5}, {\"id\": 1005, \"source\": \"ITK\", \"target\": \"ERBB3\", \"size\": 0.5}, {\"id\": 1006, \"source\": \"M3K1\", \"target\": \"MP2K7\", \"size\": 8.0}, {\"id\": 1007, \"source\": \"PDK1\", \"target\": \"SGK3\", \"size\": 0.5}, {\"id\": 1008, \"source\": \"KS6A2\", \"target\": \"KPCA\", \"size\": 3.0}, {\"id\": 1009, \"source\": \"MK14\", \"target\": \"LIMK1\", \"size\": 0.5}, {\"id\": 1010, \"source\": \"MK14\", \"target\": \"EPHB2\", \"size\": 0.5}, {\"id\": 1011, \"source\": \"KC1D\", \"target\": \"KPCD2\", \"size\": 0.5}, {\"id\": 1012, \"source\": \"KC1E\", \"target\": \"KPCD2\", \"size\": 0.5}, {\"id\": 1013, \"source\": \"KPCD2\", \"target\": \"CSKP\", \"size\": 0.5}, {\"id\": 1014, \"source\": \"TBK1\", \"target\": \"IKKE\", \"size\": 12.0}, {\"id\": 1015, \"source\": \"KSYK\", \"target\": \"KS6A2\", \"size\": 0.5}, {\"id\": 1016, \"source\": \"ACVR1\", \"target\": \"AVR2A\", \"size\": 4.0}, {\"id\": 1017, \"source\": \"CDK4\", \"target\": \"CDK7\", \"size\": 1.0}, {\"id\": 1018, \"source\": \"CDK7\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 1019, \"source\": \"ERBB2\", \"target\": \"PTK6\", \"size\": 0.5}, {\"id\": 1020, \"source\": \"ILK\", \"target\": \"PDK1\", \"size\": 1.0}, {\"id\": 1021, \"source\": \"AKT2\", \"target\": \"ROCK1\", \"size\": 8.0}, {\"id\": 1022, \"source\": \"SGK3\", \"target\": \"M4K4\", \"size\": 0.5}, {\"id\": 1023, \"source\": \"IGF1R\", \"target\": \"HIPK1\", \"size\": 0.5}, {\"id\": 1024, \"source\": \"PK3CB\", \"target\": \"M4K4\", \"size\": 0.5}, {\"id\": 1025, \"source\": \"AKT2\", \"target\": \"MARK2\", \"size\": 0.5}, {\"id\": 1026, \"source\": \"KAPCA\", \"target\": \"SIK3\", \"size\": 0.5}, {\"id\": 1027, \"source\": \"MYLK\", \"target\": \"KPCD2\", \"size\": 0.5}, {\"id\": 1028, \"source\": \"KALRN\", \"target\": \"KPCD2\", \"size\": 0.5}, {\"id\": 1029, \"source\": \"EPHB1\", \"target\": \"PGFRB\", \"size\": 0.5}, {\"id\": 1030, \"source\": \"M3K11\", \"target\": \"MP2K1\", \"size\": 1.0}, {\"id\": 1031, \"source\": \"ALK\", \"target\": \"GAK\", \"size\": 0.5}, {\"id\": 1032, \"source\": \"ALK\", \"target\": \"MYLK\", \"size\": 0.5}, {\"id\": 1033, \"source\": \"ALK\", \"target\": \"EPHB2\", \"size\": 0.5}, {\"id\": 1034, \"source\": \"ALK\", \"target\": \"EPHA1\", \"size\": 0.5}, {\"id\": 1035, \"source\": \"ALK\", \"target\": \"M3K1\", \"size\": 0.5}, {\"id\": 1036, \"source\": \"ALK\", \"target\": \"M3K5\", \"size\": 0.5}, {\"id\": 1037, \"source\": \"ALK\", \"target\": \"M3K4\", \"size\": 0.5}, {\"id\": 1038, \"source\": \"ALK\", \"target\": \"MP2K7\", \"size\": 0.5}, {\"id\": 1039, \"source\": \"ALK\", \"target\": \"JAK2\", \"size\": 0.5}, {\"id\": 1040, \"source\": \"ALK\", \"target\": \"MK01\", \"size\": 1.0}, {\"id\": 1041, \"source\": \"ALK\", \"target\": \"PK3CB\", \"size\": 1.0}, {\"id\": 1042, \"source\": \"NEK9\", \"target\": \"CHK1\", \"size\": 0.5}, {\"id\": 1043, \"source\": \"STK3\", \"target\": \"STK4\", \"size\": 1.0}, {\"id\": 1044, \"source\": \"ULK2\", \"target\": \"KC1D\", \"size\": 0.5}, {\"id\": 1045, \"source\": \"MRCKB\", \"target\": \"MP2K5\", \"size\": 0.5}, {\"id\": 1046, \"source\": \"P3C2A\", \"target\": \"PGK1\", \"size\": 0.5}, {\"id\": 1047, \"source\": \"RIPK1\", \"target\": \"MRCKB\", \"size\": 0.5}, {\"id\": 1048, \"source\": \"ULK2\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 1049, \"source\": \"WNK2\", \"target\": \"WNK1\", \"size\": 0.5}, {\"id\": 1050, \"source\": \"ULK1\", \"target\": \"AAPK1\", \"size\": 4.0}, {\"id\": 1051, \"source\": \"STK4\", \"target\": \"TAOK1\", \"size\": 1.0}, {\"id\": 1052, \"source\": \"STK3\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 1053, \"source\": \"MKNK1\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1054, \"source\": \"KKCC2\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1055, \"source\": \"ULK2\", \"target\": \"MK03\", \"size\": 2.0}, {\"id\": 1056, \"source\": \"HCK\", \"target\": \"M4K5\", \"size\": 0.5}, {\"id\": 1057, \"source\": \"CSK22\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1058, \"source\": \"CDK5\", \"target\": \"MAST1\", \"size\": 0.5}, {\"id\": 1059, \"source\": \"MP2K1\", \"target\": \"WNK1\", \"size\": 0.5}, {\"id\": 1060, \"source\": \"LRRK1\", \"target\": \"ABL1\", \"size\": 0.5}, {\"id\": 1061, \"source\": \"VRK2\", \"target\": \"MP2K1\", \"size\": 0.5}, {\"id\": 1062, \"source\": \"AAPK2\", \"target\": \"MAST3\", \"size\": 0.5}, {\"id\": 1063, \"source\": \"DYR1B\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 1064, \"source\": \"ULK2\", \"target\": \"AAPK2\", \"size\": 2.0}, {\"id\": 1065, \"source\": \"AAPK2\", \"target\": \"PK3CG\", \"size\": 3.0}, {\"id\": 1066, \"source\": \"ULK2\", \"target\": \"AAPK1\", \"size\": 2.0}, {\"id\": 1067, \"source\": \"AAPK2\", \"target\": \"AAPK1\", \"size\": 18.0}, {\"id\": 1068, \"source\": \"BTK\", \"target\": \"MYLK2\", \"size\": 1.0}, {\"id\": 1069, \"source\": \"AAPK2\", \"target\": \"M3K6\", \"size\": 0.5}, {\"id\": 1070, \"source\": \"VRK2\", \"target\": \"KSR1\", \"size\": 0.5}, {\"id\": 1071, \"source\": \"AAPK2\", \"target\": \"M3K5\", \"size\": 3.0}, {\"id\": 1072, \"source\": \"KKCC2\", \"target\": \"MK14\", \"size\": 0.5}, {\"id\": 1073, \"source\": \"M3KL4\", \"target\": \"M3K10\", \"size\": 0.5}, {\"id\": 1074, \"source\": \"KKCC2\", \"target\": \"AAPK2\", \"size\": 5.0}, {\"id\": 1075, \"source\": \"AAPK2\", \"target\": \"ULK1\", \"size\": 4.0}, {\"id\": 1076, \"source\": \"BUB1\", \"target\": \"BUB1B\", \"size\": 9.0}, {\"id\": 1077, \"source\": \"ABL2\", \"target\": \"M3K10\", \"size\": 0.5}, {\"id\": 1078, \"source\": \"KPCE\", \"target\": \"M4K4\", \"size\": 0.5}, {\"id\": 1079, \"source\": \"GSK3A\", \"target\": \"GSK3B\", \"size\": 3.0}, {\"id\": 1080, \"source\": \"PAK3\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 1081, \"source\": \"PAK1\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 1082, \"source\": \"DYR1B\", \"target\": \"HIPK2\", \"size\": 0.5}, {\"id\": 1083, \"source\": \"DYR1A\", \"target\": \"HIPK2\", \"size\": 0.5}, {\"id\": 1084, \"source\": \"ERBB2\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 1085, \"source\": \"PAK2\", \"target\": \"ACK1\", \"size\": 0.5}, {\"id\": 1086, \"source\": \"CDK9\", \"target\": \"ATR\", \"size\": 0.5}, {\"id\": 1087, \"source\": \"M3K1\", \"target\": \"DYR1A\", \"size\": 0.5}, {\"id\": 1088, \"source\": \"SRPK1\", \"target\": \"SRPK2\", \"size\": 0.5}, {\"id\": 1089, \"source\": \"M3K1\", \"target\": \"HIPK2\", \"size\": 0.5}, {\"id\": 1090, \"source\": \"LATS1\", \"target\": \"NUAK1\", \"size\": 0.5}, {\"id\": 1091, \"source\": \"LRRK2\", \"target\": \"AKT1\", \"size\": 0.5}, {\"id\": 1092, \"source\": \"M3K1\", \"target\": \"DYR1B\", \"size\": 0.5}, {\"id\": 1093, \"source\": \"PLK1\", \"target\": \"NEK9\", \"size\": 0.5}, {\"id\": 1094, \"source\": \"MET\", \"target\": \"PASK\", \"size\": 0.5}, {\"id\": 1095, \"source\": \"SRC\", \"target\": \"JAK2\", \"size\": 5.0}, {\"id\": 1096, \"source\": \"NDKM\", \"target\": \"NDKB\", \"size\": 2.0}, {\"id\": 1097, \"source\": \"ARAF\", \"target\": \"WNK1\", \"size\": 0.5}, {\"id\": 1098, \"source\": \"TGFR2\", \"target\": \"PGFRA\", \"size\": 5.0}, {\"id\": 1099, \"source\": \"EGFR\", \"target\": \"MAST1\", \"size\": 0.5}, {\"id\": 1100, \"source\": \"CDK9\", \"target\": \"CDC7\", \"size\": 0.5}, {\"id\": 1101, \"source\": \"CSK21\", \"target\": \"SRC\", \"size\": 2.0}, {\"id\": 1102, \"source\": \"NDK7\", \"target\": \"M4K4\", \"size\": 0.5}, {\"id\": 1103, \"source\": \"MAPK3\", \"target\": \"MK11\", \"size\": 2.0}, {\"id\": 1104, \"source\": \"PAK6\", \"target\": \"NEK6\", \"size\": 0.5}, {\"id\": 1105, \"source\": \"EGFR\", \"target\": \"M3K12\", \"size\": 1.0}, {\"id\": 1106, \"source\": \"K6PL\", \"target\": \"TESK1\", \"size\": 0.5}, {\"id\": 1107, \"source\": \"PAK2\", \"target\": \"RIOK3\", \"size\": 0.5}, {\"id\": 1108, \"source\": \"CSKP\", \"target\": \"CDK9\", \"size\": 0.5}, {\"id\": 1109, \"source\": \"HIPK2\", \"target\": \"MKNK1\", \"size\": 0.5}, {\"id\": 1110, \"source\": \"IRAK3\", \"target\": \"NTRK3\", \"size\": 1.0}, {\"id\": 1111, \"source\": \"ARAF\", \"target\": \"TESK1\", \"size\": 0.5}, {\"id\": 1112, \"source\": \"WNK1\", \"target\": \"K6PP\", \"size\": 0.5}, {\"id\": 1113, \"source\": \"PLK2\", \"target\": \"CSKP\", \"size\": 0.5}, {\"id\": 1114, \"source\": \"NUAK1\", \"target\": \"STK11\", \"size\": 0.5}, {\"id\": 1115, \"source\": \"PDK3\", \"target\": \"EGFR\", \"size\": 0.5}, {\"id\": 1116, \"source\": \"MK08\", \"target\": \"RAF1\", \"size\": 26.0}, {\"id\": 1117, \"source\": \"MKNK2\", \"target\": \"MK08\", \"size\": 2.0}, {\"id\": 1118, \"source\": \"ARBK1\", \"target\": \"EPHA2\", \"size\": 0.5}, {\"id\": 1119, \"source\": \"KS6A5\", \"target\": \"MLTK\", \"size\": 0.5}, {\"id\": 1120, \"source\": \"MP2K3\", \"target\": \"M3K5\", \"size\": 3.0}, {\"id\": 1121, \"source\": \"KAPCB\", \"target\": \"ACV1B\", \"size\": 0.5}, {\"id\": 1122, \"source\": \"ATR\", \"target\": \"CLK2\", \"size\": 0.5}, {\"id\": 1123, \"source\": \"AAPK1\", \"target\": \"NUAK1\", \"size\": 0.5}, {\"id\": 1124, \"source\": \"AAPK1\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 1125, \"source\": \"AAPK1\", \"target\": \"MARK1\", \"size\": 0.5}, {\"id\": 1126, \"source\": \"IKKA\", \"target\": \"KPCA\", \"size\": 6.0}, {\"id\": 1127, \"source\": \"IKKA\", \"target\": \"KPCD\", \"size\": 2.0}, {\"id\": 1128, \"source\": \"RYK\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1129, \"source\": \"RYK\", \"target\": \"MK01\", \"size\": 1.0}, {\"id\": 1130, \"source\": \"RYK\", \"target\": \"MK03\", \"size\": 1.0}, {\"id\": 1131, \"source\": \"FGFR1\", \"target\": \"JAK2\", \"size\": 2.0}, {\"id\": 1132, \"source\": \"AAPK1\", \"target\": \"MARK2\", \"size\": 0.5}, {\"id\": 1133, \"source\": \"AAPK1\", \"target\": \"BRSK2\", \"size\": 0.5}, {\"id\": 1134, \"source\": \"ABL1\", \"target\": \"STK4\", \"size\": 2.0}, {\"id\": 1135, \"source\": \"MK14\", \"target\": \"P4K2B\", \"size\": 0.5}, {\"id\": 1136, \"source\": \"AAPK1\", \"target\": \"SIK3\", \"size\": 0.5}, {\"id\": 1137, \"source\": \"AAPK1\", \"target\": \"SIK2\", \"size\": 1.0}, {\"id\": 1138, \"source\": \"PDPK1\", \"target\": \"KPCT\", \"size\": 3.0}, {\"id\": 1139, \"source\": \"AAPK1\", \"target\": \"NUAK2\", \"size\": 0.5}, {\"id\": 1140, \"source\": \"RYK\", \"target\": \"EPHA4\", \"size\": 1.0}, {\"id\": 1141, \"source\": \"KKCC2\", \"target\": \"IRAK1\", \"size\": 0.5}, {\"id\": 1142, \"source\": \"IGF1R\", \"target\": \"ERBB2\", \"size\": 9.0}, {\"id\": 1143, \"source\": \"IKKB\", \"target\": \"KPCI\", \"size\": 2.0}, {\"id\": 1144, \"source\": \"CDK1\", \"target\": \"TOPK\", \"size\": 0.5}, {\"id\": 1145, \"source\": \"CDK1\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 1146, \"source\": \"BMPR2\", \"target\": \"KGP1\", \"size\": 0.5}, {\"id\": 1147, \"source\": \"PGFRB\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 1148, \"source\": \"AAPK1\", \"target\": \"SIK1\", \"size\": 1.0}, {\"id\": 1149, \"source\": \"PDK1\", \"target\": \"SGK1\", \"size\": 0.5}, {\"id\": 1150, \"source\": \"KPCE\", \"target\": \"BRAF\", \"size\": 1.0}, {\"id\": 1151, \"source\": \"AAPK1\", \"target\": \"SNRK\", \"size\": 0.5}, {\"id\": 1152, \"source\": \"BRAF\", \"target\": \"M3K1\", \"size\": 2.0}, {\"id\": 1153, \"source\": \"PDPK1\", \"target\": \"MTOR\", \"size\": 10.0}, {\"id\": 1154, \"source\": \"MTOR\", \"target\": \"STK38\", \"size\": 0.5}, {\"id\": 1155, \"source\": \"RYK\", \"target\": \"PTK7\", \"size\": 0.5}, {\"id\": 1156, \"source\": \"HCK\", \"target\": \"SRC\", \"size\": 2.0}, {\"id\": 1157, \"source\": \"E2AK2\", \"target\": \"CDK1\", \"size\": 3.0}, {\"id\": 1158, \"source\": \"AAPK1\", \"target\": \"BRSK1\", \"size\": 0.5}, {\"id\": 1159, \"source\": \"FGFR1\", \"target\": \"SRC\", \"size\": 4.0}, {\"id\": 1160, \"source\": \"IKKB\", \"target\": \"KPCD\", \"size\": 5.0}, {\"id\": 1161, \"source\": \"IKKB\", \"target\": \"KPCA\", \"size\": 8.0}, {\"id\": 1162, \"source\": \"AAPK1\", \"target\": \"MARK4\", \"size\": 0.5}, {\"id\": 1163, \"source\": \"RYK\", \"target\": \"AGK\", \"size\": 0.5}, {\"id\": 1164, \"source\": \"BRAF\", \"target\": \"KPCA\", \"size\": 15.0}, {\"id\": 1165, \"source\": \"SRC\", \"target\": \"ACK1\", \"size\": 0.5}, {\"id\": 1166, \"source\": \"PAK6\", \"target\": \"MK14\", \"size\": 1.0}, {\"id\": 1167, \"source\": \"MK11\", \"target\": \"MK14\", \"size\": 45.0}, {\"id\": 1168, \"source\": \"KS6A1\", \"target\": \"TTK\", \"size\": 0.5}, {\"id\": 1169, \"source\": \"GSK3B\", \"target\": \"NRBP\", \"size\": 0.5}, {\"id\": 1170, \"source\": \"MK03\", \"target\": \"KS6A6\", \"size\": 6.0}, {\"id\": 1171, \"source\": \"MK06\", \"target\": \"M3K12\", \"size\": 0.5}, {\"id\": 1172, \"source\": \"MK06\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 1173, \"source\": \"GSK3B\", \"target\": \"PIM2\", \"size\": 0.5}, {\"id\": 1174, \"source\": \"MK06\", \"target\": \"DDR1\", \"size\": 0.5}, {\"id\": 1175, \"source\": \"MK06\", \"target\": \"TTK\", \"size\": 0.5}, {\"id\": 1176, \"source\": \"KC1E\", \"target\": \"TAOK1\", \"size\": 0.5}, {\"id\": 1177, \"source\": \"PLK1\", \"target\": \"VRK3\", \"size\": 0.5}, {\"id\": 1178, \"source\": \"MK06\", \"target\": \"MOK\", \"size\": 0.5}, {\"id\": 1179, \"source\": \"CDK4\", \"target\": \"KPYM\", \"size\": 3.0}, {\"id\": 1180, \"source\": \"MK08\", \"target\": \"BMPR2\", \"size\": 1.0}, {\"id\": 1181, \"source\": \"MK06\", \"target\": \"M3K7\", \"size\": 1.0}, {\"id\": 1182, \"source\": \"BRAF\", \"target\": \"KS6A2\", \"size\": 5.0}, {\"id\": 1183, \"source\": \"RAF1\", \"target\": \"KGP1\", \"size\": 4.0}, {\"id\": 1184, \"source\": \"LATS2\", \"target\": \"LATS1\", \"size\": 2.0}, {\"id\": 1185, \"source\": \"KPCT\", \"target\": \"M3K7\", \"size\": 4.0}, {\"id\": 1186, \"source\": \"FYN\", \"target\": \"CDK1\", \"size\": 0.5}, {\"id\": 1187, \"source\": \"ATM\", \"target\": \"DYRK2\", \"size\": 0.5}, {\"id\": 1188, \"source\": \"IRAK2\", \"target\": \"FAKD5\", \"size\": 0.5}, {\"id\": 1189, \"source\": \"MTOR\", \"target\": \"ABL1\", \"size\": 3.0}, {\"id\": 1190, \"source\": \"MK14\", \"target\": \"IKKB\", \"size\": 21.0}, {\"id\": 1191, \"source\": \"ALK\", \"target\": \"CDK13\", \"size\": 0.5}, {\"id\": 1192, \"source\": \"KS6B1\", \"target\": \"MTOR\", \"size\": 19.0}, {\"id\": 1193, \"source\": \"MTOR\", \"target\": \"AKT1\", \"size\": 29.0}, {\"id\": 1194, \"source\": \"CDK5\", \"target\": \"CDK16\", \"size\": 0.5}, {\"id\": 1195, \"source\": \"MAPK5\", \"target\": \"MAPK2\", \"size\": 1.0}, {\"id\": 1196, \"source\": \"BRD4\", \"target\": \"BRD2\", \"size\": 0.5}, {\"id\": 1197, \"source\": \"MTOR\", \"target\": \"KPCA\", \"size\": 12.0}, {\"id\": 1198, \"source\": \"KPCD\", \"target\": \"MTOR\", \"size\": 3.0}, {\"id\": 1199, \"source\": \"RIPK2\", \"target\": \"RIPK1\", \"size\": 1.0}, {\"id\": 1200, \"source\": \"KGP1\", \"target\": \"ANPRA\", \"size\": 3.0}, {\"id\": 1201, \"source\": \"BRD4\", \"target\": \"KCRM\", \"size\": 0.5}, {\"id\": 1202, \"source\": \"KPCI\", \"target\": \"CDK7\", \"size\": 0.5}, {\"id\": 1203, \"source\": \"AKT1\", \"target\": \"BRAF\", \"size\": 27.0}, {\"id\": 1204, \"source\": \"SGK1\", \"target\": \"RAF1\", \"size\": 3.0}, {\"id\": 1205, \"source\": \"MAPK2\", \"target\": \"MK03\", \"size\": 6.0}, {\"id\": 1206, \"source\": \"LYN\", \"target\": \"CDK1\", \"size\": 2.0}, {\"id\": 1207, \"source\": \"KPCB\", \"target\": \"CDK1\", \"size\": 1.0}, {\"id\": 1208, \"source\": \"AKT1\", \"target\": \"ERBB3\", \"size\": 3.0}, {\"id\": 1209, \"source\": \"GSK3B\", \"target\": \"MTOR\", \"size\": 12.0}, {\"id\": 1210, \"source\": \"CSK21\", \"target\": \"CDK1\", \"size\": 2.0}, {\"id\": 1211, \"source\": \"RYK\", \"target\": \"CDK1\", \"size\": 0.5}, {\"id\": 1212, \"source\": \"KAPCG\", \"target\": \"CDK17\", \"size\": 0.5}, {\"id\": 1213, \"source\": \"IRAK2\", \"target\": \"ADCK3\", \"size\": 0.5}, {\"id\": 1214, \"source\": \"IRAK4\", \"target\": \"IRAK2\", \"size\": 2.0}, {\"id\": 1215, \"source\": \"AAPK1\", \"target\": \"MTOR\", \"size\": 10.0}, {\"id\": 1216, \"source\": \"PAK1\", \"target\": \"CD11A\", \"size\": 0.5}, {\"id\": 1217, \"source\": \"IRAK1\", \"target\": \"ADCK3\", \"size\": 0.5}, {\"id\": 1218, \"source\": \"ROS1\", \"target\": \"EGFR\", \"size\": 0.5}, {\"id\": 1219, \"source\": \"IRAK2\", \"target\": \"ARAF\", \"size\": 0.5}, {\"id\": 1220, \"source\": \"CDK1\", \"target\": \"JAK3\", \"size\": 2.0}, {\"id\": 1221, \"source\": \"EGFR\", \"target\": \"ROR1\", \"size\": 0.5}, {\"id\": 1222, \"source\": \"PAK6\", \"target\": \"CDK1\", \"size\": 0.5}, {\"id\": 1223, \"source\": \"EGFR\", \"target\": \"CDK1\", \"size\": 1.0}, {\"id\": 1224, \"source\": \"BRAF\", \"target\": \"PAK2\", \"size\": 5.0}, {\"id\": 1225, \"source\": \"CD11A\", \"target\": \"CSK21\", \"size\": 0.5}, {\"id\": 1226, \"source\": \"CDK20\", \"target\": \"MAK\", \"size\": 0.5}, {\"id\": 1227, \"source\": \"MP2K1\", \"target\": \"MP2K2\", \"size\": 60.0}, {\"id\": 1228, \"source\": \"BRD4\", \"target\": \"BRD3\", \"size\": 0.5}, {\"id\": 1229, \"source\": \"PAK1\", \"target\": \"CD11B\", \"size\": 0.5}, {\"id\": 1230, \"source\": \"CDK2\", \"target\": \"CDK15\", \"size\": 0.5}, {\"id\": 1231, \"source\": \"RIPK2\", \"target\": \"M3K7\", \"size\": 1.0}, {\"id\": 1232, \"source\": \"CDK1\", \"target\": \"LATS1\", \"size\": 0.5}, {\"id\": 1233, \"source\": \"CDK1\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 1234, \"source\": \"EPHA2\", \"target\": \"CDK17\", \"size\": 0.5}, {\"id\": 1235, \"source\": \"CDK19\", \"target\": \"CDK8\", \"size\": 0.5}, {\"id\": 1236, \"source\": \"PMYT1\", \"target\": \"CDK1\", \"size\": 3.0}, {\"id\": 1237, \"source\": \"BRAF\", \"target\": \"LIMK1\", \"size\": 1.0}, {\"id\": 1238, \"source\": \"TBK1\", \"target\": \"MRCKG\", \"size\": 0.5}, {\"id\": 1239, \"source\": \"BRAF\", \"target\": \"ARAF\", \"size\": 28.0}, {\"id\": 1240, \"source\": \"CDK7\", \"target\": \"CDK9\", \"size\": 0.5}, {\"id\": 1241, \"source\": \"BRAF\", \"target\": \"RAF1\", \"size\": 35.0}, {\"id\": 1242, \"source\": \"BRD4\", \"target\": \"KAD1\", \"size\": 0.5}, {\"id\": 1243, \"source\": \"IRAK3\", \"target\": \"IRAK4\", \"size\": 1.0}, {\"id\": 1244, \"source\": \"E2AK2\", \"target\": \"CDK3\", \"size\": 0.5}, {\"id\": 1245, \"source\": \"BRAF\", \"target\": \"MP2K1\", \"size\": 35.0}, {\"id\": 1246, \"source\": \"EPHA7\", \"target\": \"EPHA3\", \"size\": 1.0}, {\"id\": 1247, \"source\": \"EPHA7\", \"target\": \"EPHA2\", \"size\": 1.0}, {\"id\": 1248, \"source\": \"KPCT\", \"target\": \"M4K3\", \"size\": 0.5}, {\"id\": 1249, \"source\": \"MLKL\", \"target\": \"RIPK3\", \"size\": 2.0}, {\"id\": 1250, \"source\": \"CSK21\", \"target\": \"KAPCB\", \"size\": 2.0}, {\"id\": 1251, \"source\": \"RIOK2\", \"target\": \"CSK21\", \"size\": 1.0}, {\"id\": 1252, \"source\": \"TITIN\", \"target\": \"NEK9\", \"size\": 0.5}, {\"id\": 1253, \"source\": \"MRCKA\", \"target\": \"MRCKB\", \"size\": 0.5}, {\"id\": 1254, \"source\": \"LRRK2\", \"target\": \"DAPK1\", \"size\": 0.5}, {\"id\": 1255, \"source\": \"PAK1\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 1256, \"source\": \"VGFR2\", \"target\": \"MET\", \"size\": 8.0}, {\"id\": 1257, \"source\": \"ERBB3\", \"target\": \"ROR1\", \"size\": 0.5}, {\"id\": 1258, \"source\": \"LRRK1\", \"target\": \"DAPK1\", \"size\": 0.5}, {\"id\": 1259, \"source\": \"FAK1\", \"target\": \"PK3CA\", \"size\": 19.0}, {\"id\": 1260, \"source\": \"LRRK1\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 1261, \"source\": \"LYN\", \"target\": \"MK01\", \"size\": 10.0}, {\"id\": 1262, \"source\": \"TITIN\", \"target\": \"MAST2\", \"size\": 0.5}, {\"id\": 1263, \"source\": \"MP2K7\", \"target\": \"M3K4\", \"size\": 2.0}, {\"id\": 1264, \"source\": \"CSK21\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1265, \"source\": \"EGFR\", \"target\": \"RIOK1\", \"size\": 0.5}, {\"id\": 1266, \"source\": \"M3K7\", \"target\": \"AAPK1\", \"size\": 3.0}, {\"id\": 1267, \"source\": \"LATS2\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 1268, \"source\": \"CDK1\", \"target\": \"BUB1\", \"size\": 3.0}, {\"id\": 1269, \"source\": \"PINK1\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1270, \"source\": \"M3K3\", \"target\": \"MP2K3\", \"size\": 2.0}, {\"id\": 1271, \"source\": \"ICK\", \"target\": \"CDC7\", \"size\": 0.5}, {\"id\": 1272, \"source\": \"AKT1\", \"target\": \"HXK1\", \"size\": 4.0}, {\"id\": 1273, \"source\": \"LRRK2\", \"target\": \"RIPK2\", \"size\": 0.5}, {\"id\": 1274, \"source\": \"LRRK2\", \"target\": \"RIPK1\", \"size\": 0.5}, {\"id\": 1275, \"source\": \"MP2K4\", \"target\": \"M3K5\", \"size\": 3.0}, {\"id\": 1276, \"source\": \"BMPR2\", \"target\": \"TRIB3\", \"size\": 0.5}, {\"id\": 1277, \"source\": \"LRRK2\", \"target\": \"STK24\", \"size\": 0.5}, {\"id\": 1278, \"source\": \"AAPK1\", \"target\": \"STK11\", \"size\": 8.0}, {\"id\": 1279, \"source\": \"TIF1B\", \"target\": \"ERBB4\", \"size\": 0.5}, {\"id\": 1280, \"source\": \"PGFRA\", \"target\": \"KIT\", \"size\": 8.0}, {\"id\": 1281, \"source\": \"KC1D\", \"target\": \"VGFR2\", \"size\": 0.5}, {\"id\": 1282, \"source\": \"CHK2\", \"target\": \"LATS2\", \"size\": 0.5}, {\"id\": 1283, \"source\": \"ACK1\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 1284, \"source\": \"CDK2\", \"target\": \"HXK1\", \"size\": 0.5}, {\"id\": 1285, \"source\": \"CDK20\", \"target\": \"ICK\", \"size\": 0.5}, {\"id\": 1286, \"source\": \"KPCB\", \"target\": \"EGFR\", \"size\": 18.0}, {\"id\": 1287, \"source\": \"CHK2\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1288, \"source\": \"ACK1\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 1289, \"source\": \"FES\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1290, \"source\": \"GRK5\", \"target\": \"STK38\", \"size\": 0.5}, {\"id\": 1291, \"source\": \"EGFR\", \"target\": \"JAK1\", \"size\": 6.0}, {\"id\": 1292, \"source\": \"STK38\", \"target\": \"M3K2\", \"size\": 0.5}, {\"id\": 1293, \"source\": \"M3K1\", \"target\": \"IKKA\", \"size\": 12.0}, {\"id\": 1294, \"source\": \"CDK2\", \"target\": \"CDK1\", \"size\": 8.0}, {\"id\": 1295, \"source\": \"KPCE\", \"target\": \"MARK2\", \"size\": 0.5}, {\"id\": 1296, \"source\": \"MP2K6\", \"target\": \"MP2K4\", \"size\": 8.0}, {\"id\": 1297, \"source\": \"LATS1\", \"target\": \"RAF1\", \"size\": 0.5}, {\"id\": 1298, \"source\": \"JAK2\", \"target\": \"M3K5\", \"size\": 0.5}, {\"id\": 1299, \"source\": \"AKT1\", \"target\": \"KCC2A\", \"size\": 11.0}, {\"id\": 1300, \"source\": \"MK01\", \"target\": \"MP2K7\", \"size\": 15.0}, {\"id\": 1301, \"source\": \"M3K2\", \"target\": \"MP2K3\", \"size\": 2.0}, {\"id\": 1302, \"source\": \"CHK1\", \"target\": \"AKT2\", \"size\": 2.0}, {\"id\": 1303, \"source\": \"LATS2\", \"target\": \"DYR1A\", \"size\": 0.5}, {\"id\": 1304, \"source\": \"PAK1\", \"target\": \"M3K1\", \"size\": 3.0}, {\"id\": 1305, \"source\": \"ABL1\", \"target\": \"BMP2K\", \"size\": 0.5}, {\"id\": 1306, \"source\": \"GRK5\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1307, \"source\": \"KSYK\", \"target\": \"PK3CG\", \"size\": 3.0}, {\"id\": 1308, \"source\": \"LRRK2\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1309, \"source\": \"LRRK2\", \"target\": \"KPCZ\", \"size\": 0.5}, {\"id\": 1310, \"source\": \"LRRK2\", \"target\": \"MP2K3\", \"size\": 0.5}, {\"id\": 1311, \"source\": \"LRRK2\", \"target\": \"MP2K6\", \"size\": 0.5}, {\"id\": 1312, \"source\": \"LRRK2\", \"target\": \"MP2K7\", \"size\": 0.5}, {\"id\": 1313, \"source\": \"IKKB\", \"target\": \"IKKE\", \"size\": 11.0}, {\"id\": 1314, \"source\": \"PIM1\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 1315, \"source\": \"STK11\", \"target\": \"SIK1\", \"size\": 0.5}, {\"id\": 1316, \"source\": \"CSK21\", \"target\": \"IKKA\", \"size\": 4.0}, {\"id\": 1317, \"source\": \"TBK1\", \"target\": \"SRC\", \"size\": 3.0}, {\"id\": 1318, \"source\": \"ACK1\", \"target\": \"ALK\", \"size\": 0.5}, {\"id\": 1319, \"source\": \"ICK\", \"target\": \"MK01\", \"size\": 0.5}, {\"id\": 1320, \"source\": \"SGK1\", \"target\": \"WNK4\", \"size\": 0.5}, {\"id\": 1321, \"source\": \"IRAK1\", \"target\": \"KPCD\", \"size\": 1.0}, {\"id\": 1322, \"source\": \"ACK1\", \"target\": \"UFO\", \"size\": 0.5}, {\"id\": 1323, \"source\": \"IKKA\", \"target\": \"CHK1\", \"size\": 1.0}, {\"id\": 1324, \"source\": \"M3K4\", \"target\": \"RIPK2\", \"size\": 0.5}, {\"id\": 1325, \"source\": \"ACK1\", \"target\": \"PGFRB\", \"size\": 0.5}, {\"id\": 1326, \"source\": \"MK01\", \"target\": \"GSK3B\", \"size\": 31.0}, {\"id\": 1327, \"source\": \"M3K7\", \"target\": \"ATM\", \"size\": 1.0}, {\"id\": 1328, \"source\": \"LYN\", \"target\": \"FGFR2\", \"size\": 0.5}, {\"id\": 1329, \"source\": \"STK38\", \"target\": \"M3K1\", \"size\": 0.5}, {\"id\": 1330, \"source\": \"FYN\", \"target\": \"FGFR2\", \"size\": 0.5}, {\"id\": 1331, \"source\": \"LRRK2\", \"target\": \"MP2K4\", \"size\": 0.5}, {\"id\": 1332, \"source\": \"WNK2\", \"target\": \"SGK1\", \"size\": 0.5}, {\"id\": 1333, \"source\": \"LATS1\", \"target\": \"MAST2\", \"size\": 0.5}, {\"id\": 1334, \"source\": \"IKKA\", \"target\": \"IKKE\", \"size\": 11.0}, {\"id\": 1335, \"source\": \"GRK5\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1336, \"source\": \"LRRK2\", \"target\": \"STK25\", \"size\": 0.5}, {\"id\": 1337, \"source\": \"FYN\", \"target\": \"FRK\", \"size\": 0.5}, {\"id\": 1338, \"source\": \"TGFR2\", \"target\": \"M3K7\", \"size\": 3.0}, {\"id\": 1339, \"source\": \"LRRK2\", \"target\": \"STK3\", \"size\": 0.5}, {\"id\": 1340, \"source\": \"DAPK3\", \"target\": \"CHK2\", \"size\": 0.5}, {\"id\": 1341, \"source\": \"MK08\", \"target\": \"MP2K2\", \"size\": 21.0}, {\"id\": 1342, \"source\": \"MK08\", \"target\": \"MP2K1\", \"size\": 27.0}, {\"id\": 1343, \"source\": \"CDK2\", \"target\": \"PGK1\", \"size\": 0.5}, {\"id\": 1344, \"source\": \"LATS1\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 1345, \"source\": \"CDK2\", \"target\": \"KPYM\", \"size\": 5.0}, {\"id\": 1346, \"source\": \"GRK5\", \"target\": \"M4K4\", \"size\": 0.5}, {\"id\": 1347, \"source\": \"CDK2\", \"target\": \"PRKDC\", \"size\": 1.0}, {\"id\": 1348, \"source\": \"ULK1\", \"target\": \"MTOR\", \"size\": 4.0}, {\"id\": 1349, \"source\": \"CDK1\", \"target\": \"WEE1\", \"size\": 1.0}, {\"id\": 1350, \"source\": \"BUB1B\", \"target\": \"PLK1\", \"size\": 1.0}, {\"id\": 1351, \"source\": \"CDK20\", \"target\": \"CDK2\", \"size\": 0.5}, {\"id\": 1352, \"source\": \"GSK3B\", \"target\": \"M3K1\", \"size\": 6.0}, {\"id\": 1353, \"source\": \"OXSR1\", \"target\": \"TGFR2\", \"size\": 0.5}, {\"id\": 1354, \"source\": \"ATM\", \"target\": \"KC1D\", \"size\": 0.5}, {\"id\": 1355, \"source\": \"ATM\", \"target\": \"MK14\", \"size\": 2.0}, {\"id\": 1356, \"source\": \"MARK2\", \"target\": \"PINK1\", \"size\": 0.5}, {\"id\": 1357, \"source\": \"EPHB6\", \"target\": \"EPHB4\", \"size\": 1.0}, {\"id\": 1358, \"source\": \"AKT1\", \"target\": \"WNK4\", \"size\": 0.5}, {\"id\": 1359, \"source\": \"STK3\", \"target\": \"LATS1\", \"size\": 2.0}, {\"id\": 1360, \"source\": \"CDK2\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 1361, \"source\": \"PLK3\", \"target\": \"BUB1B\", \"size\": 0.5}, {\"id\": 1362, \"source\": \"GRK5\", \"target\": \"PI42A\", \"size\": 0.5}, {\"id\": 1363, \"source\": \"M3K1\", \"target\": \"MK09\", \"size\": 14.0}, {\"id\": 1364, \"source\": \"CHK1\", \"target\": \"LATS2\", \"size\": 0.5}, {\"id\": 1365, \"source\": \"ACK1\", \"target\": \"LTK\", \"size\": 0.5}, {\"id\": 1366, \"source\": \"ACK1\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 1367, \"source\": \"PLK1\", \"target\": \"IKKB\", \"size\": 1.0}, {\"id\": 1368, \"source\": \"LRRK2\", \"target\": \"TAOK3\", \"size\": 0.5}, {\"id\": 1369, \"source\": \"LRRK1\", \"target\": \"M4K1\", \"size\": 0.5}, {\"id\": 1370, \"source\": \"ROR2\", \"target\": \"M3K7\", \"size\": 0.5}, {\"id\": 1371, \"source\": \"MK08\", \"target\": \"MTOR\", \"size\": 12.0}, {\"id\": 1372, \"source\": \"IKKA\", \"target\": \"RIPK1\", \"size\": 9.0}, {\"id\": 1373, \"source\": \"WNK1\", \"target\": \"SGK1\", \"size\": 0.5}, {\"id\": 1374, \"source\": \"AURKB\", \"target\": \"HASP\", \"size\": 0.5}, {\"id\": 1375, \"source\": \"CDK7\", \"target\": \"CDK6\", \"size\": 1.0}, {\"id\": 1376, \"source\": \"STK11\", \"target\": \"GSK3B\", \"size\": 2.0}, {\"id\": 1377, \"source\": \"AURKB\", \"target\": \"BUB1B\", \"size\": 0.5}, {\"id\": 1378, \"source\": \"M3K3\", \"target\": \"MP2K4\", \"size\": 3.0}, {\"id\": 1379, \"source\": \"TTK\", \"target\": \"CDK2\", \"size\": 1.0}, {\"id\": 1380, \"source\": \"M3K4\", \"target\": \"MK08\", \"size\": 2.0}, {\"id\": 1381, \"source\": \"CDK2\", \"target\": \"LATS2\", \"size\": 0.5}, {\"id\": 1382, \"source\": \"CDK2\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1383, \"source\": \"GRK5\", \"target\": \"AKT2\", \"size\": 1.0}, {\"id\": 1384, \"source\": \"KSR1\", \"target\": \"BRAF\", \"size\": 0.5}, {\"id\": 1385, \"source\": \"RIPK1\", \"target\": \"IKKB\", \"size\": 9.0}, {\"id\": 1386, \"source\": \"CSK22\", \"target\": \"TOPK\", \"size\": 0.5}, {\"id\": 1387, \"source\": \"VGFR1\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 1388, \"source\": \"MK03\", \"target\": \"TIE2\", \"size\": 4.0}, {\"id\": 1389, \"source\": \"CDK9\", \"target\": \"CDK15\", \"size\": 0.5}, {\"id\": 1390, \"source\": \"KAPCB\", \"target\": \"DYR1A\", \"size\": 0.5}, {\"id\": 1391, \"source\": \"MK04\", \"target\": \"K6PP\", \"size\": 0.5}, {\"id\": 1392, \"source\": \"EGFR\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 1393, \"source\": \"STK4\", \"target\": \"CDK3\", \"size\": 0.5}, {\"id\": 1394, \"source\": \"KSR2\", \"target\": \"BRAF\", \"size\": 0.5}, {\"id\": 1395, \"source\": \"STK25\", \"target\": \"TAOK1\", \"size\": 0.5}, {\"id\": 1396, \"source\": \"KAPCA\", \"target\": \"DYR1A\", \"size\": 0.5}, {\"id\": 1397, \"source\": \"KS6A1\", \"target\": \"KS6A2\", \"size\": 7.0}, {\"id\": 1398, \"source\": \"CSK22\", \"target\": \"PI42A\", \"size\": 0.5}, {\"id\": 1399, \"source\": \"KPYM\", \"target\": \"DAPK1\", \"size\": 0.5}, {\"id\": 1400, \"source\": \"KCC2D\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1401, \"source\": \"ILK\", \"target\": \"RAF1\", \"size\": 3.0}, {\"id\": 1402, \"source\": \"IKKA\", \"target\": \"SRPK1\", \"size\": 1.0}, {\"id\": 1403, \"source\": \"CDK20\", \"target\": \"NDKB\", \"size\": 0.5}, {\"id\": 1404, \"source\": \"PRP4B\", \"target\": \"MK12\", \"size\": 0.5}, {\"id\": 1405, \"source\": \"CDK4\", \"target\": \"CDK6\", \"size\": 17.0}, {\"id\": 1406, \"source\": \"MK09\", \"target\": \"MK10\", \"size\": 57.0}, {\"id\": 1407, \"source\": \"KS6A1\", \"target\": \"GWL\", \"size\": 0.5}, {\"id\": 1408, \"source\": \"SRPK1\", \"target\": \"CLK4\", \"size\": 0.5}, {\"id\": 1409, \"source\": \"HIPK4\", \"target\": \"K6PP\", \"size\": 0.5}, {\"id\": 1410, \"source\": \"STK3\", \"target\": \"CDK3\", \"size\": 0.5}, {\"id\": 1411, \"source\": \"KPCD\", \"target\": \"KPCB\", \"size\": 7.0}, {\"id\": 1412, \"source\": \"CDK14\", \"target\": \"KCC1A\", \"size\": 0.5}, {\"id\": 1413, \"source\": \"ILK\", \"target\": \"K6PP\", \"size\": 0.5}, {\"id\": 1414, \"source\": \"DYRK2\", \"target\": \"DYRK4\", \"size\": 0.5}, {\"id\": 1415, \"source\": \"CDK5\", \"target\": \"CDK18\", \"size\": 0.5}, {\"id\": 1416, \"source\": \"MK11\", \"target\": \"MKNK1\", \"size\": 1.0}, {\"id\": 1417, \"source\": \"MK12\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1418, \"source\": \"SRPK1\", \"target\": \"VGFR1\", \"size\": 0.5}, {\"id\": 1419, \"source\": \"CSK22\", \"target\": \"CD11B\", \"size\": 0.5}, {\"id\": 1420, \"source\": \"MK03\", \"target\": \"MK01\", \"size\": 97.0}, {\"id\": 1421, \"source\": \"LIMK1\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1422, \"source\": \"KS6A1\", \"target\": \"KS6A3\", \"size\": 7.0}, {\"id\": 1423, \"source\": \"SRPK1\", \"target\": \"CDK7\", \"size\": 0.5}, {\"id\": 1424, \"source\": \"MK11\", \"target\": \"MAPK2\", \"size\": 5.0}, {\"id\": 1425, \"source\": \"CSK\", \"target\": \"FRK\", \"size\": 0.5}, {\"id\": 1426, \"source\": \"TITIN\", \"target\": \"SRPK2\", \"size\": 0.5}, {\"id\": 1427, \"source\": \"KC1E\", \"target\": \"KC1D\", \"size\": 3.0}, {\"id\": 1428, \"source\": \"CDK9\", \"target\": \"FGFR1\", \"size\": 0.5}, {\"id\": 1429, \"source\": \"SRPK1\", \"target\": \"PAK4\", \"size\": 0.5}, {\"id\": 1430, \"source\": \"SRPK1\", \"target\": \"CHK2\", \"size\": 0.5}, {\"id\": 1431, \"source\": \"STYK1\", \"target\": \"GSK3B\", \"size\": 0.5}, {\"id\": 1432, \"source\": \"CDK20\", \"target\": \"CDK12\", \"size\": 0.5}, {\"id\": 1433, \"source\": \"DYRK2\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 1434, \"source\": \"MK04\", \"target\": \"FAKD5\", \"size\": 0.5}, {\"id\": 1435, \"source\": \"ERBB2\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1436, \"source\": \"CSK22\", \"target\": \"CD11A\", \"size\": 0.5}, {\"id\": 1437, \"source\": \"SRPK1\", \"target\": \"MK14\", \"size\": 0.5}, {\"id\": 1438, \"source\": \"HIPK4\", \"target\": \"ARAF\", \"size\": 0.5}, {\"id\": 1439, \"source\": \"MST4\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1440, \"source\": \"CDK5\", \"target\": \"DCLK3\", \"size\": 0.5}, {\"id\": 1441, \"source\": \"KAPCA\", \"target\": \"KAPCG\", \"size\": 63.0}, {\"id\": 1442, \"source\": \"MK15\", \"target\": \"MK12\", \"size\": 1.0}, {\"id\": 1443, \"source\": \"CDK6\", \"target\": \"CDKL3\", \"size\": 0.5}, {\"id\": 1444, \"source\": \"SRPK2\", \"target\": \"CLK3\", \"size\": 0.5}, {\"id\": 1445, \"source\": \"PHKG2\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1446, \"source\": \"SRPK2\", \"target\": \"CLK1\", \"size\": 0.5}, {\"id\": 1447, \"source\": \"MK03\", \"target\": \"M3K3\", \"size\": 3.0}, {\"id\": 1448, \"source\": \"PAK1\", \"target\": \"PAK2\", \"size\": 8.0}, {\"id\": 1449, \"source\": \"PGFRA\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1450, \"source\": \"NLK\", \"target\": \"PASK\", \"size\": 0.5}, {\"id\": 1451, \"source\": \"KS6A1\", \"target\": \"TLK2\", \"size\": 0.5}, {\"id\": 1452, \"source\": \"ILK\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1453, \"source\": \"KC1A\", \"target\": \"KC1D\", \"size\": 1.0}, {\"id\": 1454, \"source\": \"KC1E\", \"target\": \"STK3\", \"size\": 2.0}, {\"id\": 1455, \"source\": \"KAPCA\", \"target\": \"KAPCB\", \"size\": 63.0}, {\"id\": 1456, \"source\": \"MK01\", \"target\": \"MK12\", \"size\": 46.0}, {\"id\": 1457, \"source\": \"MST4\", \"target\": \"TAOK1\", \"size\": 0.5}, {\"id\": 1458, \"source\": \"KPCD\", \"target\": \"KPCT\", \"size\": 4.0}, {\"id\": 1459, \"source\": \"KC1A\", \"target\": \"KC1E\", \"size\": 2.0}, {\"id\": 1460, \"source\": \"NLK\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1461, \"source\": \"M3K3\", \"target\": \"MK01\", \"size\": 3.0}, {\"id\": 1462, \"source\": \"SRPK2\", \"target\": \"AAPK1\", \"size\": 0.5}, {\"id\": 1463, \"source\": \"ABL1\", \"target\": \"SRPK2\", \"size\": 0.5}, {\"id\": 1464, \"source\": \"MKNK2\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1465, \"source\": \"CDK4\", \"target\": \"CDK13\", \"size\": 0.5}, {\"id\": 1466, \"source\": \"SRPK2\", \"target\": \"PRP4B\", \"size\": 0.5}, {\"id\": 1467, \"source\": \"SRPK2\", \"target\": \"MAPK5\", \"size\": 0.5}, {\"id\": 1468, \"source\": \"DYR1B\", \"target\": \"KAPCA\", \"size\": 0.5}, {\"id\": 1469, \"source\": \"SRPK3\", \"target\": \"PRP4B\", \"size\": 0.5}, {\"id\": 1470, \"source\": \"SRPK1\", \"target\": \"KS6B2\", \"size\": 0.5}, {\"id\": 1471, \"source\": \"TBK1\", \"target\": \"M3K14\", \"size\": 2.0}, {\"id\": 1472, \"source\": \"EPHA3\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1473, \"source\": \"CSK22\", \"target\": \"BRD2\", \"size\": 0.5}, {\"id\": 1474, \"source\": \"CDK2\", \"target\": \"CDK13\", \"size\": 0.5}, {\"id\": 1475, \"source\": \"CSK22\", \"target\": \"PI42C\", \"size\": 0.5}, {\"id\": 1476, \"source\": \"SRPK2\", \"target\": \"CDK7\", \"size\": 0.5}, {\"id\": 1477, \"source\": \"LRRK2\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1478, \"source\": \"CDK5\", \"target\": \"CDK3\", \"size\": 0.5}, {\"id\": 1479, \"source\": \"AURKC\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1480, \"source\": \"CDK16\", \"target\": \"CSK22\", \"size\": 0.5}, {\"id\": 1481, \"source\": \"CDK2\", \"target\": \"CDK3\", \"size\": 0.5}, {\"id\": 1482, \"source\": \"SRPK1\", \"target\": \"SRPK3\", \"size\": 0.5}, {\"id\": 1483, \"source\": \"SRPK2\", \"target\": \"VRK1\", \"size\": 0.5}, {\"id\": 1484, \"source\": \"FAK1\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1485, \"source\": \"SRPK2\", \"target\": \"CSKP\", \"size\": 0.5}, {\"id\": 1486, \"source\": \"SRPK1\", \"target\": \"PDPK1\", \"size\": 0.5}, {\"id\": 1487, \"source\": \"PAK4\", \"target\": \"SRPK2\", \"size\": 0.5}, {\"id\": 1488, \"source\": \"CDK9\", \"target\": \"CDK12\", \"size\": 0.5}, {\"id\": 1489, \"source\": \"SRPK2\", \"target\": \"IKKA\", \"size\": 0.5}, {\"id\": 1490, \"source\": \"ARBK1\", \"target\": \"ARBK2\", \"size\": 0.5}, {\"id\": 1491, \"source\": \"CLK1\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1492, \"source\": \"CDK9\", \"target\": \"FGFR4\", \"size\": 0.5}, {\"id\": 1493, \"source\": \"ERN1\", \"target\": \"SRPK2\", \"size\": 0.5}, {\"id\": 1494, \"source\": \"CDKL3\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1495, \"source\": \"CDK2\", \"target\": \"MK15\", \"size\": 0.5}, {\"id\": 1496, \"source\": \"CSK22\", \"target\": \"PI42B\", \"size\": 0.5}, {\"id\": 1497, \"source\": \"CDKL5\", \"target\": \"KGP2\", \"size\": 0.5}, {\"id\": 1498, \"source\": \"BRD3\", \"target\": \"SRPK2\", \"size\": 0.5}, {\"id\": 1499, \"source\": \"MAPK5\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 1500, \"source\": \"MK09\", \"target\": \"MK08\", \"size\": 57.0}, {\"id\": 1501, \"source\": \"ARBK1\", \"target\": \"PHKG2\", \"size\": 0.5}, {\"id\": 1502, \"source\": \"E2AK2\", \"target\": \"STK4\", \"size\": 0.5}, {\"id\": 1503, \"source\": \"FGFR1\", \"target\": \"PTK6\", \"size\": 0.5}, {\"id\": 1504, \"source\": \"MK09\", \"target\": \"PKN1\", \"size\": 1.0}, {\"id\": 1505, \"source\": \"ILK\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 1506, \"source\": \"KAPCB\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1507, \"source\": \"AAPK1\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 1508, \"source\": \"KC1E\", \"target\": \"KS6A1\", \"size\": 0.5}, {\"id\": 1509, \"source\": \"M3K7\", \"target\": \"TAOK1\", \"size\": 1.0}, {\"id\": 1510, \"source\": \"RIOK2\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1511, \"source\": \"KPCD\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 1512, \"source\": \"STK24\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 1513, \"source\": \"EGFR\", \"target\": \"ATR\", \"size\": 1.0}, {\"id\": 1514, \"source\": \"CDK1\", \"target\": \"CDK7\", \"size\": 1.0}, {\"id\": 1515, \"source\": \"CSK22\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1516, \"source\": \"CDK9\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1517, \"source\": \"LATS1\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 1518, \"source\": \"STK4\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 1519, \"source\": \"ILK\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 1520, \"source\": \"CDK2\", \"target\": \"CSK21\", \"size\": 3.0}, {\"id\": 1521, \"source\": \"CDK2\", \"target\": \"CSK22\", \"size\": 3.0}, {\"id\": 1522, \"source\": \"MST4\", \"target\": \"CSK21\", \"size\": 0.5}, {\"id\": 1523, \"source\": \"BRAF\", \"target\": \"MK01\", \"size\": 36.0}, {\"id\": 1524, \"source\": \"KS6B2\", \"target\": \"BRAF\", \"size\": 9.0}, {\"id\": 1525, \"source\": \"KC1A\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1526, \"source\": \"KC1E\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1527, \"source\": \"CDK5\", \"target\": \"KAPCB\", \"size\": 1.0}, {\"id\": 1528, \"source\": \"MK07\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1529, \"source\": \"KC1A\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 1530, \"source\": \"KC1A\", \"target\": \"PAK2\", \"size\": 0.5}, {\"id\": 1531, \"source\": \"KPCE\", \"target\": \"IKKB\", \"size\": 3.0}, {\"id\": 1532, \"source\": \"FGFR1\", \"target\": \"ITK\", \"size\": 0.5}, {\"id\": 1533, \"source\": \"CDK5\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 1534, \"source\": \"K6PL\", \"target\": \"K6PP\", \"size\": 9.0}, {\"id\": 1535, \"source\": \"CDK4\", \"target\": \"MK01\", \"size\": 17.0}, {\"id\": 1536, \"source\": \"MST4\", \"target\": \"KPCD\", \"size\": 0.5}, {\"id\": 1537, \"source\": \"CDK4\", \"target\": \"MP2K2\", \"size\": 13.0}, {\"id\": 1538, \"source\": \"ILK\", \"target\": \"IRAK1\", \"size\": 0.5}, {\"id\": 1539, \"source\": \"CLK2\", \"target\": \"AKT1\", \"size\": 0.5}, {\"id\": 1540, \"source\": \"EGFR\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1541, \"source\": \"EGFR\", \"target\": \"PK3CB\", \"size\": 26.0}, {\"id\": 1542, \"source\": \"EGFR\", \"target\": \"K6PP\", \"size\": 1.0}, {\"id\": 1543, \"source\": \"EGFR\", \"target\": \"K6PL\", \"size\": 2.0}, {\"id\": 1544, \"source\": \"AKT1\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 1545, \"source\": \"AAPK1\", \"target\": \"ALK\", \"size\": 0.5}, {\"id\": 1546, \"source\": \"KSYK\", \"target\": \"TBK1\", \"size\": 2.0}, {\"id\": 1547, \"source\": \"MK14\", \"target\": \"CDK4\", \"size\": 4.0}, {\"id\": 1548, \"source\": \"ILK\", \"target\": \"ADCK4\", \"size\": 0.5}, {\"id\": 1549, \"source\": \"CDK9\", \"target\": \"ULK1\", \"size\": 0.5}, {\"id\": 1550, \"source\": \"CDK9\", \"target\": \"KCC1A\", \"size\": 0.5}, {\"id\": 1551, \"source\": \"CDK13\", \"target\": \"MK14\", \"size\": 0.5}, {\"id\": 1552, \"source\": \"PRPK\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1553, \"source\": \"PKN1\", \"target\": \"MK11\", \"size\": 1.0}, {\"id\": 1554, \"source\": \"PHKG2\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 1555, \"source\": \"LYN\", \"target\": \"PAK1\", \"size\": 3.0}, {\"id\": 1556, \"source\": \"IKKA\", \"target\": \"M3K4\", \"size\": 1.0}, {\"id\": 1557, \"source\": \"ILK\", \"target\": \"FAKD5\", \"size\": 0.5}, {\"id\": 1558, \"source\": \"PHKG2\", \"target\": \"MST4\", \"size\": 0.5}, {\"id\": 1559, \"source\": \"KAPCA\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1560, \"source\": \"MP2K4\", \"target\": \"MP2K7\", \"size\": 10.0}, {\"id\": 1561, \"source\": \"MP2K4\", \"target\": \"MK01\", \"size\": 13.0}, {\"id\": 1562, \"source\": \"CDK13\", \"target\": \"CDK12\", \"size\": 0.5}, {\"id\": 1563, \"source\": \"MK09\", \"target\": \"M3K10\", \"size\": 0.5}, {\"id\": 1564, \"source\": \"EF2K\", \"target\": \"PRPK\", \"size\": 0.5}, {\"id\": 1565, \"source\": \"PK3C3\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1566, \"source\": \"CDK12\", \"target\": \"TIF1A\", \"size\": 0.5}, {\"id\": 1567, \"source\": \"KPCL\", \"target\": \"GSK3A\", \"size\": 0.5}, {\"id\": 1568, \"source\": \"PRKDC\", \"target\": \"CHK2\", \"size\": 1.0}, {\"id\": 1569, \"source\": \"ILK\", \"target\": \"SIK2\", \"size\": 0.5}, {\"id\": 1570, \"source\": \"AAPK1\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1571, \"source\": \"KCC1A\", \"target\": \"CDK4\", \"size\": 0.5}, {\"id\": 1572, \"source\": \"KC1E\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1573, \"source\": \"LYN\", \"target\": \"KPCB\", \"size\": 5.0}, {\"id\": 1574, \"source\": \"KC1E\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1575, \"source\": \"AKT3\", \"target\": \"GSK3B\", \"size\": 28.0}, {\"id\": 1576, \"source\": \"EGFR\", \"target\": \"MTOR\", \"size\": 16.0}, {\"id\": 1577, \"source\": \"ILK\", \"target\": \"PI4KA\", \"size\": 0.5}, {\"id\": 1578, \"source\": \"ILK\", \"target\": \"K6PL\", \"size\": 0.5}, {\"id\": 1579, \"source\": \"PHKG2\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1580, \"source\": \"AKT2\", \"target\": \"M3K5\", \"size\": 8.0}, {\"id\": 1581, \"source\": \"MK01\", \"target\": \"M3K10\", \"size\": 0.5}, {\"id\": 1582, \"source\": \"CDK9\", \"target\": \"OXSR1\", \"size\": 0.5}, {\"id\": 1583, \"source\": \"AAPK1\", \"target\": \"STK4\", \"size\": 1.0}, {\"id\": 1584, \"source\": \"DYR1A\", \"target\": \"M3K5\", \"size\": 0.5}, {\"id\": 1585, \"source\": \"MK07\", \"target\": \"MYLK2\", \"size\": 1.0}, {\"id\": 1586, \"source\": \"PAK1\", \"target\": \"LRRK1\", \"size\": 0.5}, {\"id\": 1587, \"source\": \"CDK4\", \"target\": \"ULK1\", \"size\": 0.5}, {\"id\": 1588, \"source\": \"PHKG2\", \"target\": \"FAK1\", \"size\": 1.0}, {\"id\": 1589, \"source\": \"MST4\", \"target\": \"TAOK3\", \"size\": 0.5}, {\"id\": 1590, \"source\": \"KSYK\", \"target\": \"M3K7\", \"size\": 3.0}, {\"id\": 1591, \"source\": \"KS6A1\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 1592, \"source\": \"TAOK2\", \"target\": \"M3K7\", \"size\": 1.0}, {\"id\": 1593, \"source\": \"PRKDC\", \"target\": \"GSK3B\", \"size\": 1.0}, {\"id\": 1594, \"source\": \"PRKDC\", \"target\": \"GSK3A\", \"size\": 0.5}, {\"id\": 1595, \"source\": \"OXSR1\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1596, \"source\": \"OXSR1\", \"target\": \"KAPCB\", \"size\": 0.5}, {\"id\": 1597, \"source\": \"KS6A1\", \"target\": \"PHKG1\", \"size\": 0.5}, {\"id\": 1598, \"source\": \"CHK1\", \"target\": \"NEK2\", \"size\": 0.5}, {\"id\": 1599, \"source\": \"EF2K\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1600, \"source\": \"CDK4\", \"target\": \"STK3\", \"size\": 0.5}, {\"id\": 1601, \"source\": \"STK3\", \"target\": \"AKT1\", \"size\": 1.0}, {\"id\": 1602, \"source\": \"KC1A\", \"target\": \"PI51A\", \"size\": 0.5}, {\"id\": 1603, \"source\": \"TOPK\", \"target\": \"CSK21\", \"size\": 0.5}, {\"id\": 1604, \"source\": \"PINK1\", \"target\": \"M3K7\", \"size\": 0.5}, {\"id\": 1605, \"source\": \"MK08\", \"target\": \"PMYT1\", \"size\": 1.0}, {\"id\": 1606, \"source\": \"KAPCA\", \"target\": \"SIK1\", \"size\": 1.0}, {\"id\": 1607, \"source\": \"AAPK1\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1608, \"source\": \"CDK9\", \"target\": \"FGFR2\", \"size\": 0.5}, {\"id\": 1609, \"source\": \"RIOK2\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 1610, \"source\": \"PINK1\", \"target\": \"IRAK1\", \"size\": 0.5}, {\"id\": 1611, \"source\": \"CDK9\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 1612, \"source\": \"JAK3\", \"target\": \"TYK2\", \"size\": 6.0}, {\"id\": 1613, \"source\": \"MK10\", \"target\": \"PMYT1\", \"size\": 1.0}, {\"id\": 1614, \"source\": \"NUAK2\", \"target\": \"LATS1\", \"size\": 0.5}, {\"id\": 1615, \"source\": \"PRPK\", \"target\": \"KAPCB\", \"size\": 0.5}, {\"id\": 1616, \"source\": \"PRPK\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1617, \"source\": \"MK14\", \"target\": \"M3K10\", \"size\": 0.5}, {\"id\": 1618, \"source\": \"PAK1\", \"target\": \"NEK9\", \"size\": 0.5}, {\"id\": 1619, \"source\": \"KC1A\", \"target\": \"RIOK2\", \"size\": 0.5}, {\"id\": 1620, \"source\": \"TOPK\", \"target\": \"GSK3B\", \"size\": 0.5}, {\"id\": 1621, \"source\": \"CDK5\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 1622, \"source\": \"MK14\", \"target\": \"NDKA\", \"size\": 0.5}, {\"id\": 1623, \"source\": \"M3K3\", \"target\": \"IRAK1\", \"size\": 1.0}, {\"id\": 1624, \"source\": \"RIOK2\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1625, \"source\": \"RIOK2\", \"target\": \"PAK2\", \"size\": 0.5}, {\"id\": 1626, \"source\": \"RIOK2\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 1627, \"source\": \"RIOK2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1628, \"source\": \"PAK1\", \"target\": \"MP2K3\", \"size\": 1.0}, {\"id\": 1629, \"source\": \"KCC1A\", \"target\": \"KCC1G\", \"size\": 2.0}, {\"id\": 1630, \"source\": \"ACVR1\", \"target\": \"BMR1A\", \"size\": 4.0}, {\"id\": 1631, \"source\": \"ILK\", \"target\": \"ARAF\", \"size\": 1.0}, {\"id\": 1632, \"source\": \"GSK3B\", \"target\": \"M3K11\", \"size\": 1.0}, {\"id\": 1633, \"source\": \"ILK\", \"target\": \"ALK\", \"size\": 0.5}, {\"id\": 1634, \"source\": \"MK14\", \"target\": \"KPCD\", \"size\": 5.0}, {\"id\": 1635, \"source\": \"PINK1\", \"target\": \"AKT1\", \"size\": 0.5}, {\"id\": 1636, \"source\": \"K6PF\", \"target\": \"K6PP\", \"size\": 9.0}, {\"id\": 1637, \"source\": \"KCC1A\", \"target\": \"KAPCA\", \"size\": 2.0}, {\"id\": 1638, \"source\": \"KCC1A\", \"target\": \"KPCD\", \"size\": 0.5}, {\"id\": 1639, \"source\": \"KCC1A\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1640, \"source\": \"STK4\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 1641, \"source\": \"STK25\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 1642, \"source\": \"STK4\", \"target\": \"CDK9\", \"size\": 0.5}, {\"id\": 1643, \"source\": \"KPCD\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1644, \"source\": \"AURKB\", \"target\": \"AURKC\", \"size\": 0.5}, {\"id\": 1645, \"source\": \"IKKA\", \"target\": \"RIPK2\", \"size\": 2.0}, {\"id\": 1646, \"source\": \"STK25\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1647, \"source\": \"KS6A1\", \"target\": \"GSK3B\", \"size\": 3.0}, {\"id\": 1648, \"source\": \"MK09\", \"target\": \"STK25\", \"size\": 0.5}, {\"id\": 1649, \"source\": \"VRK1\", \"target\": \"E2AK2\", \"size\": 0.5}, {\"id\": 1650, \"source\": \"KCC1A\", \"target\": \"MST4\", \"size\": 0.5}, {\"id\": 1651, \"source\": \"CDK5\", \"target\": \"FGFR2\", \"size\": 0.5}, {\"id\": 1652, \"source\": \"EF2K\", \"target\": \"CHK1\", \"size\": 0.5}, {\"id\": 1653, \"source\": \"ILK\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1654, \"source\": \"CDK4\", \"target\": \"CSK21\", \"size\": 1.0}, {\"id\": 1655, \"source\": \"EF2K\", \"target\": \"KC1E\", \"size\": 0.5}, {\"id\": 1656, \"source\": \"GSK3B\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 1657, \"source\": \"TXK\", \"target\": \"KIT\", \"size\": 0.5}, {\"id\": 1658, \"source\": \"KPYM\", \"target\": \"VGFR2\", \"size\": 0.5}, {\"id\": 1659, \"source\": \"KPYM\", \"target\": \"VGFR3\", \"size\": 0.5}, {\"id\": 1660, \"source\": \"AKT1\", \"target\": \"KPYM\", \"size\": 4.0}, {\"id\": 1661, \"source\": \"FGFR1\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1662, \"source\": \"KIT\", \"target\": \"KSYK\", \"size\": 2.0}, {\"id\": 1663, \"source\": \"KS6A2\", \"target\": \"KPYM\", \"size\": 2.0}, {\"id\": 1664, \"source\": \"BRSK1\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1665, \"source\": \"NEK1\", \"target\": \"LRRK1\", \"size\": 0.5}, {\"id\": 1666, \"source\": \"JAK3\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1667, \"source\": \"M4K2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1668, \"source\": \"FGFR4\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1669, \"source\": \"MAPK5\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1670, \"source\": \"STK4\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 1671, \"source\": \"ERBB3\", \"target\": \"PK3CB\", \"size\": 3.0}, {\"id\": 1672, \"source\": \"MET\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 1673, \"source\": \"KPYM\", \"target\": \"RET\", \"size\": 1.0}, {\"id\": 1674, \"source\": \"KCC2B\", \"target\": \"KPYM\", \"size\": 2.0}, {\"id\": 1675, \"source\": \"KGP2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1676, \"source\": \"LRRK1\", \"target\": \"GAK\", \"size\": 0.5}, {\"id\": 1677, \"source\": \"NTRK3\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1678, \"source\": \"LRRK1\", \"target\": \"EPHA8\", \"size\": 0.5}, {\"id\": 1679, \"source\": \"BLK\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1680, \"source\": \"FER\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1681, \"source\": \"AAPK2\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1682, \"source\": \"KIT\", \"target\": \"PTK6\", \"size\": 0.5}, {\"id\": 1683, \"source\": \"LRRK1\", \"target\": \"MATK\", \"size\": 0.5}, {\"id\": 1684, \"source\": \"MK03\", \"target\": \"KPYM\", \"size\": 6.0}, {\"id\": 1685, \"source\": \"NEK6\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1686, \"source\": \"KPCD3\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1687, \"source\": \"KPYM\", \"target\": \"PDPK1\", \"size\": 0.5}, {\"id\": 1688, \"source\": \"KAPCA\", \"target\": \"LRRK2\", \"size\": 1.0}, {\"id\": 1689, \"source\": \"KPYM\", \"target\": \"TAOK2\", \"size\": 0.5}, {\"id\": 1690, \"source\": \"KPYM\", \"target\": \"TBK1\", \"size\": 1.0}, {\"id\": 1691, \"source\": \"KPYM\", \"target\": \"RON\", \"size\": 0.5}, {\"id\": 1692, \"source\": \"LRRK2\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 1693, \"source\": \"STK33\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 1694, \"source\": \"EPHB4\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1695, \"source\": \"IKKA\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1696, \"source\": \"LRRK2\", \"target\": \"TTK\", \"size\": 0.5}, {\"id\": 1697, \"source\": \"ABL2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1698, \"source\": \"FGFR2\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1699, \"source\": \"LYN\", \"target\": \"MET\", \"size\": 1.0}, {\"id\": 1700, \"source\": \"MET\", \"target\": \"BTK\", \"size\": 0.5}, {\"id\": 1701, \"source\": \"HIPK1\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1702, \"source\": \"BMX\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1703, \"source\": \"BLK\", \"target\": \"KIT\", \"size\": 0.5}, {\"id\": 1704, \"source\": \"IKKE\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1705, \"source\": \"KIT\", \"target\": \"ABL2\", \"size\": 1.0}, {\"id\": 1706, \"source\": \"EPHB3\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1707, \"source\": \"KPYM\", \"target\": \"TYRO3\", \"size\": 0.5}, {\"id\": 1708, \"source\": \"LRRK2\", \"target\": \"K6PP\", \"size\": 0.5}, {\"id\": 1709, \"source\": \"BLK\", \"target\": \"MET\", \"size\": 0.5}, {\"id\": 1710, \"source\": \"MP2K3\", \"target\": \"MP2K6\", \"size\": 12.0}, {\"id\": 1711, \"source\": \"LRRK2\", \"target\": \"PAK6\", \"size\": 0.5}, {\"id\": 1712, \"source\": \"KIT\", \"target\": \"ZAP70\", \"size\": 1.0}, {\"id\": 1713, \"source\": \"MET\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 1714, \"source\": \"LRRK1\", \"target\": \"EGFR\", \"size\": 0.5}, {\"id\": 1715, \"source\": \"MARK2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1716, \"source\": \"DYRK3\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1717, \"source\": \"NTRK2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1718, \"source\": \"KIT\", \"target\": \"FES\", \"size\": 0.5}, {\"id\": 1719, \"source\": \"FYN\", \"target\": \"ERBB2\", \"size\": 2.0}, {\"id\": 1720, \"source\": \"LRRK1\", \"target\": \"RET\", \"size\": 0.5}, {\"id\": 1721, \"source\": \"JAK2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1722, \"source\": \"LRRK2\", \"target\": \"KCC2G\", \"size\": 0.5}, {\"id\": 1723, \"source\": \"MKNK2\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 1724, \"source\": \"ALK\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1725, \"source\": \"M3K2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1726, \"source\": \"LTK\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1727, \"source\": \"LRRK1\", \"target\": \"VGFR3\", \"size\": 0.5}, {\"id\": 1728, \"source\": \"KPYM\", \"target\": \"STK4\", \"size\": 0.5}, {\"id\": 1729, \"source\": \"KPYM\", \"target\": \"PAK2\", \"size\": 0.5}, {\"id\": 1730, \"source\": \"EPHA8\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1731, \"source\": \"KPCE\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1732, \"source\": \"CDK8\", \"target\": \"CDK9\", \"size\": 0.5}, {\"id\": 1733, \"source\": \"KPCD1\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1734, \"source\": \"KPYM\", \"target\": \"PAK6\", \"size\": 0.5}, {\"id\": 1735, \"source\": \"MK03\", \"target\": \"BRAF\", \"size\": 36.0}, {\"id\": 1736, \"source\": \"LRRK2\", \"target\": \"CDK2\", \"size\": 0.5}, {\"id\": 1737, \"source\": \"M3K11\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1738, \"source\": \"EPHA2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1739, \"source\": \"ABL1\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 1740, \"source\": \"LRRK2\", \"target\": \"STK40\", \"size\": 0.5}, {\"id\": 1741, \"source\": \"KS6A5\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1742, \"source\": \"CHK1\", \"target\": \"KPYM\", \"size\": 2.0}, {\"id\": 1743, \"source\": \"MET\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1744, \"source\": \"MET\", \"target\": \"YES\", \"size\": 1.0}, {\"id\": 1745, \"source\": \"CHK2\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1746, \"source\": \"LRRK1\", \"target\": \"PAK6\", \"size\": 0.5}, {\"id\": 1747, \"source\": \"MET\", \"target\": \"FES\", \"size\": 1.0}, {\"id\": 1748, \"source\": \"KS6A3\", \"target\": \"KPYM\", \"size\": 2.0}, {\"id\": 1749, \"source\": \"LRRK2\", \"target\": \"MATK\", \"size\": 0.5}, {\"id\": 1750, \"source\": \"DYR1B\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1751, \"source\": \"FGFR3\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1752, \"source\": \"KSYK\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1753, \"source\": \"KKCC2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1754, \"source\": \"TEC\", \"target\": \"MET\", \"size\": 0.5}, {\"id\": 1755, \"source\": \"KPYM\", \"target\": \"TIE2\", \"size\": 0.5}, {\"id\": 1756, \"source\": \"TXK\", \"target\": \"MET\", \"size\": 0.5}, {\"id\": 1757, \"source\": \"KPYM\", \"target\": \"STK33\", \"size\": 0.5}, {\"id\": 1758, \"source\": \"LRRK2\", \"target\": \"NEK1\", \"size\": 0.5}, {\"id\": 1759, \"source\": \"KPYM\", \"target\": \"VGFR1\", \"size\": 0.5}, {\"id\": 1760, \"source\": \"MP2K2\", \"target\": \"KPYM\", \"size\": 2.0}, {\"id\": 1761, \"source\": \"AKT3\", \"target\": \"KPYM\", \"size\": 4.0}, {\"id\": 1762, \"source\": \"GSK3A\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1763, \"source\": \"KPYM\", \"target\": \"TSSK2\", \"size\": 0.5}, {\"id\": 1764, \"source\": \"EPHA1\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1765, \"source\": \"M3K3\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1766, \"source\": \"AURKC\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 1767, \"source\": \"STK3\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 1768, \"source\": \"FGFR2\", \"target\": \"LRRK1\", \"size\": 0.5}, {\"id\": 1769, \"source\": \"TRIB2\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 1770, \"source\": \"LRRK2\", \"target\": \"AKT2\", \"size\": 0.5}, {\"id\": 1771, \"source\": \"LCK\", \"target\": \"MET\", \"size\": 0.5}, {\"id\": 1772, \"source\": \"EPHA5\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1773, \"source\": \"KPYM\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 1774, \"source\": \"GAK\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 1775, \"source\": \"FAK1\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1776, \"source\": \"MET\", \"target\": \"KSYK\", \"size\": 1.0}, {\"id\": 1777, \"source\": \"MET\", \"target\": \"ZAP70\", \"size\": 1.0}, {\"id\": 1778, \"source\": \"KPYM\", \"target\": \"PAK7\", \"size\": 0.5}, {\"id\": 1779, \"source\": \"CSF1R\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1780, \"source\": \"PRKDC\", \"target\": \"MTOR\", \"size\": 0.5}, {\"id\": 1781, \"source\": \"LRRK2\", \"target\": \"HXK1\", \"size\": 0.5}, {\"id\": 1782, \"source\": \"MP2K1\", \"target\": \"KPYM\", \"size\": 4.0}, {\"id\": 1783, \"source\": \"ERBB2\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1784, \"source\": \"KIT\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1785, \"source\": \"KIT\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 1786, \"source\": \"LRRK2\", \"target\": \"ABL2\", \"size\": 0.5}, {\"id\": 1787, \"source\": \"DCLK2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1788, \"source\": \"MK12\", \"target\": \"KPYM\", \"size\": 2.0}, {\"id\": 1789, \"source\": \"CDK19\", \"target\": \"CDK9\", \"size\": 0.5}, {\"id\": 1790, \"source\": \"LRRK2\", \"target\": \"KCC1D\", \"size\": 0.5}, {\"id\": 1791, \"source\": \"LRRK2\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1792, \"source\": \"KPYM\", \"target\": \"ROS1\", \"size\": 0.5}, {\"id\": 1793, \"source\": \"MK03\", \"target\": \"M3K1\", \"size\": 9.0}, {\"id\": 1794, \"source\": \"MAPK2\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1795, \"source\": \"PTK6\", \"target\": \"MET\", \"size\": 0.5}, {\"id\": 1796, \"source\": \"MERTK\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1797, \"source\": \"IKKB\", \"target\": \"KPYM\", \"size\": 2.0}, {\"id\": 1798, \"source\": \"NEK1\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1799, \"source\": \"MAPK3\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1800, \"source\": \"KPYM\", \"target\": \"WNK2\", \"size\": 0.5}, {\"id\": 1801, \"source\": \"MET\", \"target\": \"ABL2\", \"size\": 1.0}, {\"id\": 1802, \"source\": \"MET\", \"target\": \"MATK\", \"size\": 0.5}, {\"id\": 1803, \"source\": \"KPYM\", \"target\": \"PGFRA\", \"size\": 1.0}, {\"id\": 1804, \"source\": \"KPCT\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 1805, \"source\": \"EGFR\", \"target\": \"KPYM\", \"size\": 2.0}, {\"id\": 1806, \"source\": \"MET\", \"target\": \"ITK\", \"size\": 0.5}, {\"id\": 1807, \"source\": \"LRRK2\", \"target\": \"ADCK3\", \"size\": 0.5}, {\"id\": 1808, \"source\": \"ABL1\", \"target\": \"KPYM\", \"size\": 1.0}, {\"id\": 1809, \"source\": \"M3K1\", \"target\": \"EPHA1\", \"size\": 0.5}, {\"id\": 1810, \"source\": \"EGFR\", \"target\": \"VRK1\", \"size\": 0.5}, {\"id\": 1811, \"source\": \"EGFR\", \"target\": \"AKT2\", \"size\": 26.0}, {\"id\": 1812, \"source\": \"MP2K6\", \"target\": \"MK01\", \"size\": 15.0}, {\"id\": 1813, \"source\": \"FGFR1\", \"target\": \"KS6A3\", \"size\": 1.0}, {\"id\": 1814, \"source\": \"MOK\", \"target\": \"INSR\", \"size\": 0.5}, {\"id\": 1815, \"source\": \"TRIB2\", \"target\": \"KS6B1\", \"size\": 0.5}, {\"id\": 1816, \"source\": \"HIPK4\", \"target\": \"RAF1\", \"size\": 1.0}, {\"id\": 1817, \"source\": \"CSK\", \"target\": \"ZAP70\", \"size\": 0.5}, {\"id\": 1818, \"source\": \"EGFR\", \"target\": \"AAPK1\", \"size\": 3.0}, {\"id\": 1819, \"source\": \"EGFR\", \"target\": \"K6PF\", \"size\": 1.0}, {\"id\": 1820, \"source\": \"EGFR\", \"target\": \"PLK1\", \"size\": 1.0}, {\"id\": 1821, \"source\": \"EGFR\", \"target\": \"PDK1\", \"size\": 2.0}, {\"id\": 1822, \"source\": \"LATS2\", \"target\": \"STK4\", \"size\": 0.5}, {\"id\": 1823, \"source\": \"SRPK3\", \"target\": \"MK12\", \"size\": 0.5}, {\"id\": 1824, \"source\": \"KCC1A\", \"target\": \"MARK2\", \"size\": 0.5}, {\"id\": 1825, \"source\": \"MK07\", \"target\": \"M3K2\", \"size\": 3.0}, {\"id\": 1826, \"source\": \"CDK15\", \"target\": \"ROCK1\", \"size\": 0.5}, {\"id\": 1827, \"source\": \"ATM\", \"target\": \"CDK9\", \"size\": 1.0}, {\"id\": 1828, \"source\": \"ATM\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1829, \"source\": \"AURKB\", \"target\": \"MARK2\", \"size\": 0.5}, {\"id\": 1830, \"source\": \"EGFR\", \"target\": \"MP2K2\", \"size\": 29.0}, {\"id\": 1831, \"source\": \"EGFR\", \"target\": \"MP2K3\", \"size\": 3.0}, {\"id\": 1832, \"source\": \"EGFR\", \"target\": \"E2AK2\", \"size\": 2.0}, {\"id\": 1833, \"source\": \"CDK20\", \"target\": \"RAF1\", \"size\": 0.5}, {\"id\": 1834, \"source\": \"EGFR\", \"target\": \"KS6A3\", \"size\": 1.0}, {\"id\": 1835, \"source\": \"EGFR\", \"target\": \"MP2K4\", \"size\": 5.0}, {\"id\": 1836, \"source\": \"LATS2\", \"target\": \"PAK4\", \"size\": 0.5}, {\"id\": 1837, \"source\": \"ACK1\", \"target\": \"NTRK2\", \"size\": 0.5}, {\"id\": 1838, \"source\": \"KPCG\", \"target\": \"EPHB1\", \"size\": 0.5}, {\"id\": 1839, \"source\": \"EGFR\", \"target\": \"MST4\", \"size\": 0.5}, {\"id\": 1840, \"source\": \"ABL1\", \"target\": \"LATS2\", \"size\": 0.5}, {\"id\": 1841, \"source\": \"M3K3\", \"target\": \"MP2K7\", \"size\": 3.0}, {\"id\": 1842, \"source\": \"RIPK3\", \"target\": \"EPHA4\", \"size\": 0.5}, {\"id\": 1843, \"source\": \"ROCK1\", \"target\": \"IKKB\", \"size\": 4.0}, {\"id\": 1844, \"source\": \"EGFR\", \"target\": \"TBK1\", \"size\": 3.0}, {\"id\": 1845, \"source\": \"EGFR\", \"target\": \"HXK1\", \"size\": 2.0}, {\"id\": 1846, \"source\": \"EGFR\", \"target\": \"HXK2\", \"size\": 2.0}, {\"id\": 1847, \"source\": \"LYN\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1848, \"source\": \"ACK1\", \"target\": \"NTRK3\", \"size\": 0.5}, {\"id\": 1849, \"source\": \"EGFR\", \"target\": \"OXSR1\", \"size\": 0.5}, {\"id\": 1850, \"source\": \"MP2K6\", \"target\": \"MAPK2\", \"size\": 3.0}, {\"id\": 1851, \"source\": \"LATS2\", \"target\": \"NDK7\", \"size\": 0.5}, {\"id\": 1852, \"source\": \"KCC1D\", \"target\": \"KCC1A\", \"size\": 2.0}, {\"id\": 1853, \"source\": \"NUAK1\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 1854, \"source\": \"LATS2\", \"target\": \"TBK1\", \"size\": 0.5}, {\"id\": 1855, \"source\": \"SRPK2\", \"target\": \"CDK13\", \"size\": 0.5}, {\"id\": 1856, \"source\": \"EGFR\", \"target\": \"KT3K\", \"size\": 0.5}, {\"id\": 1857, \"source\": \"EGFR\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 1858, \"source\": \"ACK1\", \"target\": \"NTRK1\", \"size\": 0.5}, {\"id\": 1859, \"source\": \"CDK4\", \"target\": \"JAK3\", \"size\": 5.0}, {\"id\": 1860, \"source\": \"EGFR\", \"target\": \"RIOK2\", \"size\": 0.5}, {\"id\": 1861, \"source\": \"PK3CA\", \"target\": \"AKT1\", \"size\": 71.0}, {\"id\": 1862, \"source\": \"KIT\", \"target\": \"JAK3\", \"size\": 1.0}, {\"id\": 1863, \"source\": \"EGFR\", \"target\": \"KC1A\", \"size\": 2.0}, {\"id\": 1864, \"source\": \"EGFR\", \"target\": \"CSK21\", \"size\": 1.0}, {\"id\": 1865, \"source\": \"SIK1\", \"target\": \"M3K7\", \"size\": 0.5}, {\"id\": 1866, \"source\": \"SIK3\", \"target\": \"M3K7\", \"size\": 0.5}, {\"id\": 1867, \"source\": \"SIK2\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 1868, \"source\": \"MK09\", \"target\": \"KPCT\", \"size\": 7.0}, {\"id\": 1869, \"source\": \"PK3CB\", \"target\": \"PI42A\", \"size\": 3.0}, {\"id\": 1870, \"source\": \"FER\", \"target\": \"YES\", \"size\": 1.0}, {\"id\": 1871, \"source\": \"MK14\", \"target\": \"RIPK2\", \"size\": 4.0}, {\"id\": 1872, \"source\": \"JAK2\", \"target\": \"LCK\", \"size\": 2.0}, {\"id\": 1873, \"source\": \"PK3CA\", \"target\": \"KPCI\", \"size\": 4.0}, {\"id\": 1874, \"source\": \"VGFR3\", \"target\": \"PK3CA\", \"size\": 5.0}, {\"id\": 1875, \"source\": \"BUB1\", \"target\": \"KS6A1\", \"size\": 2.0}, {\"id\": 1876, \"source\": \"BTK\", \"target\": \"JAK2\", \"size\": 0.5}, {\"id\": 1877, \"source\": \"MK09\", \"target\": \"KPCZ\", \"size\": 8.0}, {\"id\": 1878, \"source\": \"PK3CG\", \"target\": \"PI51B\", \"size\": 2.0}, {\"id\": 1879, \"source\": \"BUB1B\", \"target\": \"CHK1\", \"size\": 2.0}, {\"id\": 1880, \"source\": \"KAPCB\", \"target\": \"KPCG\", \"size\": 29.0}, {\"id\": 1881, \"source\": \"PK3CD\", \"target\": \"PI51C\", \"size\": 7.0}, {\"id\": 1882, \"source\": \"JAK1\", \"target\": \"PK3CG\", \"size\": 2.0}, {\"id\": 1883, \"source\": \"VGFR2\", \"target\": \"FAK1\", \"size\": 5.0}, {\"id\": 1884, \"source\": \"MYLK\", \"target\": \"PAK3\", \"size\": 2.0}, {\"id\": 1885, \"source\": \"PI42C\", \"target\": \"ROCK2\", \"size\": 1.0}, {\"id\": 1886, \"source\": \"PDPK1\", \"target\": \"PK3CB\", \"size\": 22.0}, {\"id\": 1887, \"source\": \"IKKB\", \"target\": \"IRAK2\", \"size\": 1.0}, {\"id\": 1888, \"source\": \"AKT2\", \"target\": \"PK3CD\", \"size\": 71.0}, {\"id\": 1889, \"source\": \"PK3CB\", \"target\": \"TYK2\", \"size\": 8.0}, {\"id\": 1890, \"source\": \"PK3CB\", \"target\": \"KPCI\", \"size\": 4.0}, {\"id\": 1891, \"source\": \"EPHA5\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 1892, \"source\": \"AKT1\", \"target\": \"PDK1\", \"size\": 2.0}, {\"id\": 1893, \"source\": \"VGFR1\", \"target\": \"PK3CD\", \"size\": 5.0}, {\"id\": 1894, \"source\": \"BMR1B\", \"target\": \"ERBB2\", \"size\": 0.5}, {\"id\": 1895, \"source\": \"FGR\", \"target\": \"LCK\", \"size\": 0.5}, {\"id\": 1896, \"source\": \"MP2K4\", \"target\": \"PAK7\", \"size\": 0.5}, {\"id\": 1897, \"source\": \"MP2K2\", \"target\": \"KPCD\", \"size\": 5.0}, {\"id\": 1898, \"source\": \"NTRK1\", \"target\": \"PK3CA\", \"size\": 5.0}, {\"id\": 1899, \"source\": \"AVR2A\", \"target\": \"BMPR2\", \"size\": 4.0}, {\"id\": 1900, \"source\": \"JAK3\", \"target\": \"PK3CB\", \"size\": 9.0}, {\"id\": 1901, \"source\": \"CSF1R\", \"target\": \"PK3CG\", \"size\": 1.0}, {\"id\": 1902, \"source\": \"KS6A2\", \"target\": \"KS6A3\", \"size\": 7.0}, {\"id\": 1903, \"source\": \"FYN\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 1904, \"source\": \"MP2K2\", \"target\": \"M3K1\", \"size\": 7.0}, {\"id\": 1905, \"source\": \"MK03\", \"target\": \"PRKX\", \"size\": 0.5}, {\"id\": 1906, \"source\": \"MYLK2\", \"target\": \"PAK6\", \"size\": 2.0}, {\"id\": 1907, \"source\": \"PDPK1\", \"target\": \"PK3CG\", \"size\": 2.0}, {\"id\": 1908, \"source\": \"M3K5\", \"target\": \"M4K4\", \"size\": 1.0}, {\"id\": 1909, \"source\": \"EPHA7\", \"target\": \"LCK\", \"size\": 0.5}, {\"id\": 1910, \"source\": \"HCK\", \"target\": \"FAK1\", \"size\": 1.0}, {\"id\": 1911, \"source\": \"ACVR1\", \"target\": \"ACV1C\", \"size\": 2.0}, {\"id\": 1912, \"source\": \"PK3CG\", \"target\": \"PI42A\", \"size\": 1.0}, {\"id\": 1913, \"source\": \"VGFR2\", \"target\": \"M3K13\", \"size\": 0.5}, {\"id\": 1914, \"source\": \"MK07\", \"target\": \"KS6A3\", \"size\": 2.0}, {\"id\": 1915, \"source\": \"KPCZ\", \"target\": \"RIPK2\", \"size\": 0.5}, {\"id\": 1916, \"source\": \"MOS\", \"target\": \"PMYT1\", \"size\": 2.0}, {\"id\": 1917, \"source\": \"AKT3\", \"target\": \"IKKB\", \"size\": 33.0}, {\"id\": 1918, \"source\": \"KS6A2\", \"target\": \"KS6A6\", \"size\": 7.0}, {\"id\": 1919, \"source\": \"M3K2\", \"target\": \"PAK1\", \"size\": 1.0}, {\"id\": 1920, \"source\": \"P4K2B\", \"target\": \"P3C2A\", \"size\": 2.0}, {\"id\": 1921, \"source\": \"IGF1R\", \"target\": \"PK3CD\", \"size\": 21.0}, {\"id\": 1922, \"source\": \"KPCT\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 1923, \"source\": \"VGFR3\", \"target\": \"PK3CD\", \"size\": 5.0}, {\"id\": 1924, \"source\": \"EPHA5\", \"target\": \"EPHA7\", \"size\": 1.0}, {\"id\": 1925, \"source\": \"GSK3B\", \"target\": \"KAPCG\", \"size\": 11.0}, {\"id\": 1926, \"source\": \"PCKGM\", \"target\": \"AAPK2\", \"size\": 7.0}, {\"id\": 1927, \"source\": \"KPCZ\", \"target\": \"RIPK1\", \"size\": 0.5}, {\"id\": 1928, \"source\": \"FYN\", \"target\": \"PK3CB\", \"size\": 11.0}, {\"id\": 1929, \"source\": \"ERBB4\", \"target\": \"PK3CB\", \"size\": 2.0}, {\"id\": 1930, \"source\": \"MK13\", \"target\": \"MK14\", \"size\": 45.0}, {\"id\": 1931, \"source\": \"MP2K1\", \"target\": \"SRC\", \"size\": 19.0}, {\"id\": 1932, \"source\": \"CSF1R\", \"target\": \"PK3CB\", \"size\": 6.0}, {\"id\": 1933, \"source\": \"PK3CD\", \"target\": \"KPCI\", \"size\": 4.0}, {\"id\": 1934, \"source\": \"FES\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 1935, \"source\": \"MK07\", \"target\": \"KPCD\", \"size\": 2.0}, {\"id\": 1936, \"source\": \"KCC2A\", \"target\": \"JAK1\", \"size\": 2.0}, {\"id\": 1937, \"source\": \"MET\", \"target\": \"PK3CG\", \"size\": 1.0}, {\"id\": 1938, \"source\": \"MK03\", \"target\": \"KAPCG\", \"size\": 31.0}, {\"id\": 1939, \"source\": \"PI4KA\", \"target\": \"P3C2A\", \"size\": 2.0}, {\"id\": 1940, \"source\": \"MET\", \"target\": \"PK3CB\", \"size\": 12.0}, {\"id\": 1941, \"source\": \"PDK1\", \"target\": \"KPCZ\", \"size\": 1.0}, {\"id\": 1942, \"source\": \"INSR\", \"target\": \"KPCI\", \"size\": 2.0}, {\"id\": 1943, \"source\": \"KKCC1\", \"target\": \"AAPK1\", \"size\": 0.5}, {\"id\": 1944, \"source\": \"IRAK1\", \"target\": \"M3K1\", \"size\": 3.0}, {\"id\": 1945, \"source\": \"FYN\", \"target\": \"JAK1\", \"size\": 2.0}, {\"id\": 1946, \"source\": \"M3K1\", \"target\": \"RIPK1\", \"size\": 5.0}, {\"id\": 1947, \"source\": \"IKKB\", \"target\": \"M3K8\", \"size\": 4.0}, {\"id\": 1948, \"source\": \"MP2K1\", \"target\": \"PK3CA\", \"size\": 56.0}, {\"id\": 1949, \"source\": \"VGFR2\", \"target\": \"PK3CD\", \"size\": 8.0}, {\"id\": 1950, \"source\": \"PI42B\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 1951, \"source\": \"MP2K1\", \"target\": \"PK3CD\", \"size\": 55.0}, {\"id\": 1952, \"source\": \"IGF1R\", \"target\": \"PK3CG\", \"size\": 1.0}, {\"id\": 1953, \"source\": \"NTRK1\", \"target\": \"PK3CB\", \"size\": 5.0}, {\"id\": 1954, \"source\": \"PI42A\", \"target\": \"PI51A\", \"size\": 3.0}, {\"id\": 1955, \"source\": \"PK3CA\", \"target\": \"SRC\", \"size\": 21.0}, {\"id\": 1956, \"source\": \"KCC2B\", \"target\": \"M3K5\", \"size\": 1.0}, {\"id\": 1957, \"source\": \"MP2K6\", \"target\": \"TAOK1\", \"size\": 1.0}, {\"id\": 1958, \"source\": \"IKKB\", \"target\": \"RIPK2\", \"size\": 3.0}, {\"id\": 1959, \"source\": \"PAK6\", \"target\": \"RAF1\", \"size\": 7.0}, {\"id\": 1960, \"source\": \"FGR\", \"target\": \"PK3CA\", \"size\": 2.0}, {\"id\": 1961, \"source\": \"MP2K4\", \"target\": \"ROCK2\", \"size\": 0.5}, {\"id\": 1962, \"source\": \"CDK5\", \"target\": \"EPHA5\", \"size\": 1.0}, {\"id\": 1963, \"source\": \"MP2K6\", \"target\": \"M3K2\", \"size\": 2.0}, {\"id\": 1964, \"source\": \"P3C2A\", \"target\": \"PI51B\", \"size\": 2.0}, {\"id\": 1965, \"source\": \"AKT1\", \"target\": \"PK3CD\", \"size\": 71.0}, {\"id\": 1966, \"source\": \"KS6A4\", \"target\": \"KS6A5\", \"size\": 2.0}, {\"id\": 1967, \"source\": \"ABL1\", \"target\": \"EPHA8\", \"size\": 1.0}, {\"id\": 1968, \"source\": \"M3K1\", \"target\": \"M4K1\", \"size\": 1.0}, {\"id\": 1969, \"source\": \"IGF1R\", \"target\": \"PRKX\", \"size\": 0.5}, {\"id\": 1970, \"source\": \"PK3CA\", \"target\": \"KSYK\", \"size\": 11.0}, {\"id\": 1971, \"source\": \"MK12\", \"target\": \"RIPK2\", \"size\": 4.0}, {\"id\": 1972, \"source\": \"VGFR2\", \"target\": \"PK3CG\", \"size\": 1.0}, {\"id\": 1973, \"source\": \"ERBB2\", \"target\": \"TGFR1\", \"size\": 3.0}, {\"id\": 1974, \"source\": \"KPCG\", \"target\": \"RAF1\", \"size\": 26.0}, {\"id\": 1975, \"source\": \"LCK\", \"target\": \"KPCZ\", \"size\": 0.5}, {\"id\": 1976, \"source\": \"FYN\", \"target\": \"LCK\", \"size\": 3.0}, {\"id\": 1977, \"source\": \"PK3CG\", \"target\": \"PI42B\", \"size\": 1.0}, {\"id\": 1978, \"source\": \"TAOK1\", \"target\": \"TAOK2\", \"size\": 1.0}, {\"id\": 1979, \"source\": \"ERBB3\", \"target\": \"PK3CD\", \"size\": 3.0}, {\"id\": 1980, \"source\": \"SRC\", \"target\": \"YES\", \"size\": 1.0}, {\"id\": 1981, \"source\": \"HCK\", \"target\": \"PK3CA\", \"size\": 3.0}, {\"id\": 1982, \"source\": \"PDK1\", \"target\": \"PK3CB\", \"size\": 3.0}, {\"id\": 1983, \"source\": \"PDPK1\", \"target\": \"PK3CD\", \"size\": 22.0}, {\"id\": 1984, \"source\": \"P3C2A\", \"target\": \"PI51A\", \"size\": 2.0}, {\"id\": 1985, \"source\": \"AVR2A\", \"target\": \"AVR2B\", \"size\": 4.0}, {\"id\": 1986, \"source\": \"PMYT1\", \"target\": \"KS6A1\", \"size\": 2.0}, {\"id\": 1987, \"source\": \"PK3CB\", \"target\": \"SRC\", \"size\": 21.0}, {\"id\": 1988, \"source\": \"PK3CB\", \"target\": \"PI51C\", \"size\": 7.0}, {\"id\": 1989, \"source\": \"PDK1\", \"target\": \"PK3CA\", \"size\": 3.0}, {\"id\": 1990, \"source\": \"KPCG\", \"target\": \"FAK1\", \"size\": 10.0}, {\"id\": 1991, \"source\": \"IGF1R\", \"target\": \"KAPCB\", \"size\": 10.0}, {\"id\": 1992, \"source\": \"PK3CB\", \"target\": \"ZAP70\", \"size\": 3.0}, {\"id\": 1993, \"source\": \"PK3CD\", \"target\": \"PI42B\", \"size\": 3.0}, {\"id\": 1994, \"source\": \"EPHB1\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 1995, \"source\": \"MYLK\", \"target\": \"PAK6\", \"size\": 2.0}, {\"id\": 1996, \"source\": \"M3K2\", \"target\": \"KPCD\", \"size\": 1.0}, {\"id\": 1997, \"source\": \"ARAF\", \"target\": \"KPCG\", \"size\": 11.0}, {\"id\": 1998, \"source\": \"ERBB4\", \"target\": \"PK3CD\", \"size\": 2.0}, {\"id\": 1999, \"source\": \"M3K1\", \"target\": \"M3K7\", \"size\": 7.0}, {\"id\": 2000, \"source\": \"MK07\", \"target\": \"KS6A1\", \"size\": 2.0}, {\"id\": 2001, \"source\": \"ERBB4\", \"target\": \"PK3CG\", \"size\": 0.5}, {\"id\": 2002, \"source\": \"PK3CA\", \"target\": \"STK11\", \"size\": 6.0}, {\"id\": 2003, \"source\": \"AKT2\", \"target\": \"PK3CB\", \"size\": 71.0}, {\"id\": 2004, \"source\": \"ABL1\", \"target\": \"NTRK3\", \"size\": 1.0}, {\"id\": 2005, \"source\": \"JAK3\", \"target\": \"MK14\", \"size\": 4.0}, {\"id\": 2006, \"source\": \"KCC2A\", \"target\": \"M3K7\", \"size\": 1.0}, {\"id\": 2007, \"source\": \"KPCG\", \"target\": \"FAK2\", \"size\": 4.0}, {\"id\": 2008, \"source\": \"PMYT1\", \"target\": \"KS6A2\", \"size\": 2.0}, {\"id\": 2009, \"source\": \"PK3CB\", \"target\": \"FAK1\", \"size\": 19.0}, {\"id\": 2010, \"source\": \"ERBB4\", \"target\": \"PK3CA\", \"size\": 2.0}, {\"id\": 2011, \"source\": \"BUB1\", \"target\": \"KS6A2\", \"size\": 2.0}, {\"id\": 2012, \"source\": \"AVR2B\", \"target\": \"BMPR2\", \"size\": 4.0}, {\"id\": 2013, \"source\": \"ERBB3\", \"target\": \"PK3CG\", \"size\": 0.5}, {\"id\": 2014, \"source\": \"JAK1\", \"target\": \"PK3CB\", \"size\": 16.0}, {\"id\": 2015, \"source\": \"PK3CD\", \"target\": \"PI42A\", \"size\": 3.0}, {\"id\": 2016, \"source\": \"KS6A2\", \"target\": \"KS6A4\", \"size\": 1.0}, {\"id\": 2017, \"source\": \"BTK\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 2018, \"source\": \"IGF1R\", \"target\": \"MK03\", \"size\": 21.0}, {\"id\": 2019, \"source\": \"ERBB2\", \"target\": \"MK03\", \"size\": 16.0}, {\"id\": 2020, \"source\": \"MP2K2\", \"target\": \"MOS\", \"size\": 2.0}, {\"id\": 2021, \"source\": \"MP2K4\", \"target\": \"KPCD\", \"size\": 1.0}, {\"id\": 2022, \"source\": \"CSF1R\", \"target\": \"PK3CA\", \"size\": 6.0}, {\"id\": 2023, \"source\": \"KCC2B\", \"target\": \"JAK2\", \"size\": 3.0}, {\"id\": 2024, \"source\": \"FGR\", \"target\": \"PK3CB\", \"size\": 2.0}, {\"id\": 2025, \"source\": \"PI4KA\", \"target\": \"PI51C\", \"size\": 2.0}, {\"id\": 2026, \"source\": \"BMR1B\", \"target\": \"M3K7\", \"size\": 1.0}, {\"id\": 2027, \"source\": \"MP2K6\", \"target\": \"TAOK3\", \"size\": 1.0}, {\"id\": 2028, \"source\": \"PK3CD\", \"target\": \"TYK2\", \"size\": 8.0}, {\"id\": 2029, \"source\": \"BTK\", \"target\": \"LCK\", \"size\": 3.0}, {\"id\": 2030, \"source\": \"MK03\", \"target\": \"MK07\", \"size\": 6.0}, {\"id\": 2031, \"source\": \"EPHA1\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 2032, \"source\": \"MK03\", \"target\": \"KAPCA\", \"size\": 32.0}, {\"id\": 2033, \"source\": \"KCC2A\", \"target\": \"MK03\", \"size\": 16.0}, {\"id\": 2034, \"source\": \"PI42A\", \"target\": \"PI51B\", \"size\": 3.0}, {\"id\": 2035, \"source\": \"VGFR1\", \"target\": \"PK3CA\", \"size\": 5.0}, {\"id\": 2036, \"source\": \"AKT3\", \"target\": \"PDK1\", \"size\": 2.0}, {\"id\": 2037, \"source\": \"PK3CA\", \"target\": \"ZAP70\", \"size\": 3.0}, {\"id\": 2038, \"source\": \"EPHB2\", \"target\": \"LCK\", \"size\": 0.5}, {\"id\": 2039, \"source\": \"JAK3\", \"target\": \"PK3CD\", \"size\": 9.0}, {\"id\": 2040, \"source\": \"FGR\", \"target\": \"PK3CG\", \"size\": 0.5}, {\"id\": 2041, \"source\": \"GSK3B\", \"target\": \"PRKX\", \"size\": 0.5}, {\"id\": 2042, \"source\": \"PGFRA\", \"target\": \"SRC\", \"size\": 6.0}, {\"id\": 2043, \"source\": \"PK3CD\", \"target\": \"PI51A\", \"size\": 6.0}, {\"id\": 2044, \"source\": \"FER\", \"target\": \"PGFRB\", \"size\": 0.5}, {\"id\": 2045, \"source\": \"M3K1\", \"target\": \"M3K11\", \"size\": 2.0}, {\"id\": 2046, \"source\": \"M3K12\", \"target\": \"MK14\", \"size\": 1.0}, {\"id\": 2047, \"source\": \"IGF1R\", \"target\": \"KAPCG\", \"size\": 10.0}, {\"id\": 2048, \"source\": \"FGR\", \"target\": \"PK3CD\", \"size\": 2.0}, {\"id\": 2049, \"source\": \"M3K3\", \"target\": \"KPCD\", \"size\": 2.0}, {\"id\": 2050, \"source\": \"BUB1\", \"target\": \"KS6A3\", \"size\": 2.0}, {\"id\": 2051, \"source\": \"PK3CB\", \"target\": \"KPCZ\", \"size\": 12.0}, {\"id\": 2052, \"source\": \"ABL1\", \"target\": \"EPHB6\", \"size\": 1.0}, {\"id\": 2053, \"source\": \"KPCL\", \"target\": \"KPCT\", \"size\": 2.0}, {\"id\": 2054, \"source\": \"MP2K1\", \"target\": \"PK3CB\", \"size\": 55.0}, {\"id\": 2055, \"source\": \"PI42B\", \"target\": \"ROCK2\", \"size\": 1.0}, {\"id\": 2056, \"source\": \"KPCZ\", \"target\": \"ROCK2\", \"size\": 5.0}, {\"id\": 2057, \"source\": \"HCK\", \"target\": \"KSYK\", \"size\": 2.0}, {\"id\": 2058, \"source\": \"BTK\", \"target\": \"PK3CB\", \"size\": 4.0}, {\"id\": 2059, \"source\": \"CDK2\", \"target\": \"PMYT1\", \"size\": 3.0}, {\"id\": 2060, \"source\": \"JAK1\", \"target\": \"MK14\", \"size\": 12.0}, {\"id\": 2061, \"source\": \"ACVR1\", \"target\": \"AVR2B\", \"size\": 4.0}, {\"id\": 2062, \"source\": \"PK3CG\", \"target\": \"KPCI\", \"size\": 1.0}, {\"id\": 2063, \"source\": \"MYLK2\", \"target\": \"PAK4\", \"size\": 2.0}, {\"id\": 2064, \"source\": \"HCK\", \"target\": \"PK3CG\", \"size\": 0.5}, {\"id\": 2065, \"source\": \"KCC2B\", \"target\": \"JAK1\", \"size\": 2.0}, {\"id\": 2066, \"source\": \"P4K2B\", \"target\": \"PI51B\", \"size\": 2.0}, {\"id\": 2067, \"source\": \"JAK3\", \"target\": \"MP2K1\", \"size\": 4.0}, {\"id\": 2068, \"source\": \"KPCL\", \"target\": \"RAF1\", \"size\": 1.0}, {\"id\": 2069, \"source\": \"M3K4\", \"target\": \"KPCD\", \"size\": 1.0}, {\"id\": 2070, \"source\": \"AKT1\", \"target\": \"JAK1\", \"size\": 17.0}, {\"id\": 2071, \"source\": \"JAK1\", \"target\": \"MK09\", \"size\": 15.0}, {\"id\": 2072, \"source\": \"JAK3\", \"target\": \"MK03\", \"size\": 7.0}, {\"id\": 2073, \"source\": \"BUB1\", \"target\": \"KS6A6\", \"size\": 2.0}, {\"id\": 2074, \"source\": \"AKT1\", \"target\": \"PK3CG\", \"size\": 8.0}, {\"id\": 2075, \"source\": \"JAK3\", \"target\": \"PK3CG\", \"size\": 1.0}, {\"id\": 2076, \"source\": \"M3K7\", \"target\": \"MK09\", \"size\": 14.0}, {\"id\": 2077, \"source\": \"PI42C\", \"target\": \"PI51B\", \"size\": 3.0}, {\"id\": 2078, \"source\": \"MK14\", \"target\": \"SRC\", \"size\": 14.0}, {\"id\": 2079, \"source\": \"MP2K6\", \"target\": \"M3K6\", \"size\": 1.0}, {\"id\": 2080, \"source\": \"IGF1R\", \"target\": \"PK3CB\", \"size\": 21.0}, {\"id\": 2081, \"source\": \"HCK\", \"target\": \"PK3CD\", \"size\": 3.0}, {\"id\": 2082, \"source\": \"PMYT1\", \"target\": \"KS6A6\", \"size\": 2.0}, {\"id\": 2083, \"source\": \"PK3CB\", \"target\": \"PK3CG\", \"size\": 5.0}, {\"id\": 2084, \"source\": \"JAK3\", \"target\": \"KSYK\", \"size\": 3.0}, {\"id\": 2085, \"source\": \"PI4KA\", \"target\": \"PI51A\", \"size\": 2.0}, {\"id\": 2086, \"source\": \"PI42C\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 2087, \"source\": \"MP2K1\", \"target\": \"MP2K4\", \"size\": 9.0}, {\"id\": 2088, \"source\": \"PMYT1\", \"target\": \"KS6A3\", \"size\": 2.0}, {\"id\": 2089, \"source\": \"AKT2\", \"target\": \"PK3CG\", \"size\": 8.0}, {\"id\": 2090, \"source\": \"FGR\", \"target\": \"MK14\", \"size\": 1.0}, {\"id\": 2091, \"source\": \"PGFRB\", \"target\": \"KPCD\", \"size\": 0.5}, {\"id\": 2092, \"source\": \"PI4KA\", \"target\": \"PI51B\", \"size\": 2.0}, {\"id\": 2093, \"source\": \"PAK4\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2094, \"source\": \"AKT3\", \"target\": \"PK3CA\", \"size\": 71.0}, {\"id\": 2095, \"source\": \"AKT3\", \"target\": \"PK3CG\", \"size\": 8.0}, {\"id\": 2096, \"source\": \"IGF1R\", \"target\": \"KAPCA\", \"size\": 10.0}, {\"id\": 2097, \"source\": \"KCC2B\", \"target\": \"MP2K6\", \"size\": 2.0}, {\"id\": 2098, \"source\": \"PI42A\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 2099, \"source\": \"PK3CA\", \"target\": \"TYK2\", \"size\": 8.0}, {\"id\": 2100, \"source\": \"ABL1\", \"target\": \"EPHB3\", \"size\": 1.0}, {\"id\": 2101, \"source\": \"PAK7\", \"target\": \"RAF1\", \"size\": 0.5}, {\"id\": 2102, \"source\": \"TAOK1\", \"target\": \"TAOK3\", \"size\": 1.0}, {\"id\": 2103, \"source\": \"JAK1\", \"target\": \"PK3CD\", \"size\": 16.0}, {\"id\": 2104, \"source\": \"M3K2\", \"target\": \"SRC\", \"size\": 2.0}, {\"id\": 2105, \"source\": \"KS6A4\", \"target\": \"KS6A6\", \"size\": 1.0}, {\"id\": 2106, \"source\": \"JAK1\", \"target\": \"JAK2\", \"size\": 14.0}, {\"id\": 2107, \"source\": \"AVR2B\", \"target\": \"BMR1B\", \"size\": 4.0}, {\"id\": 2108, \"source\": \"HCK\", \"target\": \"FAK2\", \"size\": 1.0}, {\"id\": 2109, \"source\": \"JAK2\", \"target\": \"PK3CA\", \"size\": 11.0}, {\"id\": 2110, \"source\": \"VGFR2\", \"target\": \"FAK2\", \"size\": 0.5}, {\"id\": 2111, \"source\": \"VGFR1\", \"target\": \"PK3CB\", \"size\": 5.0}, {\"id\": 2112, \"source\": \"IGF1R\", \"target\": \"KS6B1\", \"size\": 11.0}, {\"id\": 2113, \"source\": \"IKKB\", \"target\": \"M4K4\", \"size\": 1.0}, {\"id\": 2114, \"source\": \"BMR1B\", \"target\": \"TGFR2\", \"size\": 3.0}, {\"id\": 2115, \"source\": \"AKT1\", \"target\": \"JAK3\", \"size\": 8.0}, {\"id\": 2116, \"source\": \"KPCD\", \"target\": \"KPCL\", \"size\": 2.0}, {\"id\": 2117, \"source\": \"HCK\", \"target\": \"MK14\", \"size\": 1.0}, {\"id\": 2118, \"source\": \"FGR\", \"target\": \"HCK\", \"size\": 1.0}, {\"id\": 2119, \"source\": \"IGF1R\", \"target\": \"PK3CA\", \"size\": 21.0}, {\"id\": 2120, \"source\": \"ABL1\", \"target\": \"EPHA7\", \"size\": 1.0}, {\"id\": 2121, \"source\": \"MK03\", \"target\": \"KS6A5\", \"size\": 6.0}, {\"id\": 2122, \"source\": \"NTRK1\", \"target\": \"PK3CD\", \"size\": 5.0}, {\"id\": 2123, \"source\": \"PDK1\", \"target\": \"PK3CD\", \"size\": 3.0}, {\"id\": 2124, \"source\": \"JAK2\", \"target\": \"TYK2\", \"size\": 9.0}, {\"id\": 2125, \"source\": \"P4K2B\", \"target\": \"PI51A\", \"size\": 2.0}, {\"id\": 2126, \"source\": \"KPCG\", \"target\": \"PRKX\", \"size\": 0.5}, {\"id\": 2127, \"source\": \"MK03\", \"target\": \"RIPK2\", \"size\": 4.0}, {\"id\": 2128, \"source\": \"ERBB2\", \"target\": \"PK3CG\", \"size\": 0.5}, {\"id\": 2129, \"source\": \"KS6B1\", \"target\": \"TGFR2\", \"size\": 2.0}, {\"id\": 2130, \"source\": \"AKT3\", \"target\": \"PK3CD\", \"size\": 71.0}, {\"id\": 2131, \"source\": \"NTRK1\", \"target\": \"PK3CG\", \"size\": 0.5}, {\"id\": 2132, \"source\": \"JAK3\", \"target\": \"PK3CA\", \"size\": 9.0}, {\"id\": 2133, \"source\": \"ABL1\", \"target\": \"NTRK2\", \"size\": 1.0}, {\"id\": 2134, \"source\": \"PK3CB\", \"target\": \"KSYK\", \"size\": 11.0}, {\"id\": 2135, \"source\": \"PDK1\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 2136, \"source\": \"HCK\", \"target\": \"LCK\", \"size\": 0.5}, {\"id\": 2137, \"source\": \"KS6A5\", \"target\": \"KS6A6\", \"size\": 2.0}, {\"id\": 2138, \"source\": \"PAK4\", \"target\": \"SRC\", \"size\": 4.0}, {\"id\": 2139, \"source\": \"AKT3\", \"target\": \"ILK\", \"size\": 2.0}, {\"id\": 2140, \"source\": \"P4K2B\", \"target\": \"PK3C3\", \"size\": 2.0}, {\"id\": 2141, \"source\": \"MK03\", \"target\": \"KAPCB\", \"size\": 31.0}, {\"id\": 2142, \"source\": \"MK14\", \"target\": \"KGP1\", \"size\": 1.0}, {\"id\": 2143, \"source\": \"KS6B1\", \"target\": \"TGFR1\", \"size\": 3.0}, {\"id\": 2144, \"source\": \"KS6A1\", \"target\": \"KS6A4\", \"size\": 1.0}, {\"id\": 2145, \"source\": \"PK3CG\", \"target\": \"PI51A\", \"size\": 2.0}, {\"id\": 2146, \"source\": \"MP2K6\", \"target\": \"M3K1\", \"size\": 6.0}, {\"id\": 2147, \"source\": \"VGFR3\", \"target\": \"PK3CB\", \"size\": 5.0}, {\"id\": 2148, \"source\": \"KPCG\", \"target\": \"SRC\", \"size\": 12.0}, {\"id\": 2149, \"source\": \"HCK\", \"target\": \"ZAP70\", \"size\": 0.5}, {\"id\": 2150, \"source\": \"ILK\", \"target\": \"PK3CA\", \"size\": 4.0}, {\"id\": 2151, \"source\": \"EPHA6\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 2152, \"source\": \"PK3CD\", \"target\": \"SRC\", \"size\": 21.0}, {\"id\": 2153, \"source\": \"PDPK1\", \"target\": \"PK3CA\", \"size\": 22.0}, {\"id\": 2154, \"source\": \"PDK1\", \"target\": \"PK3CG\", \"size\": 0.5}, {\"id\": 2155, \"source\": \"PK3CG\", \"target\": \"FAK1\", \"size\": 2.0}, {\"id\": 2156, \"source\": \"PCKGM\", \"target\": \"AAPK1\", \"size\": 7.0}, {\"id\": 2157, \"source\": \"M3K1\", \"target\": \"KPCD\", \"size\": 2.0}, {\"id\": 2158, \"source\": \"VGFR3\", \"target\": \"PK3CG\", \"size\": 1.0}, {\"id\": 2159, \"source\": \"CDK2\", \"target\": \"MK03\", \"size\": 10.0}, {\"id\": 2160, \"source\": \"BMPR2\", \"target\": \"M3K7\", \"size\": 1.0}, {\"id\": 2161, \"source\": \"EPHB1\", \"target\": \"MP2K1\", \"size\": 0.5}, {\"id\": 2162, \"source\": \"BTK\", \"target\": \"ZAP70\", \"size\": 2.0}, {\"id\": 2163, \"source\": \"ABL1\", \"target\": \"EPHA1\", \"size\": 1.0}, {\"id\": 2164, \"source\": \"JAK1\", \"target\": \"MK03\", \"size\": 18.0}, {\"id\": 2165, \"source\": \"JAK1\", \"target\": \"PK3CA\", \"size\": 16.0}, {\"id\": 2166, \"source\": \"MK13\", \"target\": \"RIPK2\", \"size\": 4.0}, {\"id\": 2167, \"source\": \"INSR\", \"target\": \"KS6B1\", \"size\": 8.0}, {\"id\": 2168, \"source\": \"P4K2B\", \"target\": \"PI51C\", \"size\": 2.0}, {\"id\": 2169, \"source\": \"ARAF\", \"target\": \"KPCL\", \"size\": 1.0}, {\"id\": 2170, \"source\": \"PK3CB\", \"target\": \"PI42B\", \"size\": 3.0}, {\"id\": 2171, \"source\": \"PK3CA\", \"target\": \"TXK\", \"size\": 1.0}, {\"id\": 2172, \"source\": \"PI42C\", \"target\": \"PI51A\", \"size\": 3.0}, {\"id\": 2173, \"source\": \"JAK3\", \"target\": \"MK09\", \"size\": 4.0}, {\"id\": 2174, \"source\": \"CDK5\", \"target\": \"EPHA7\", \"size\": 1.0}, {\"id\": 2175, \"source\": \"ULK1\", \"target\": \"ULK2\", \"size\": 2.0}, {\"id\": 2176, \"source\": \"AKT2\", \"target\": \"M3K8\", \"size\": 4.0}, {\"id\": 2177, \"source\": \"LCK\", \"target\": \"PK3CB\", \"size\": 4.0}, {\"id\": 2178, \"source\": \"KS6A1\", \"target\": \"KS6A5\", \"size\": 2.0}, {\"id\": 2179, \"source\": \"AKT1\", \"target\": \"PK3CB\", \"size\": 71.0}, {\"id\": 2180, \"source\": \"AKT3\", \"target\": \"VGFR1\", \"size\": 5.0}, {\"id\": 2181, \"source\": \"PK3CD\", \"target\": \"ZAP70\", \"size\": 3.0}, {\"id\": 2182, \"source\": \"PK3CG\", \"target\": \"SRC\", \"size\": 2.0}, {\"id\": 2183, \"source\": \"VGFR2\", \"target\": \"PK3CA\", \"size\": 8.0}, {\"id\": 2184, \"source\": \"M3K1\", \"target\": \"M4K3\", \"size\": 1.0}, {\"id\": 2185, \"source\": \"MK12\", \"target\": \"ZAP70\", \"size\": 3.0}, {\"id\": 2186, \"source\": \"ABL1\", \"target\": \"EPHA5\", \"size\": 1.0}, {\"id\": 2187, \"source\": \"MK03\", \"target\": \"KPCT\", \"size\": 5.0}, {\"id\": 2188, \"source\": \"ERBB3\", \"target\": \"MP2K1\", \"size\": 4.0}, {\"id\": 2189, \"source\": \"PK3CD\", \"target\": \"KSYK\", \"size\": 11.0}, {\"id\": 2190, \"source\": \"AKT3\", \"target\": \"PK3CB\", \"size\": 71.0}, {\"id\": 2191, \"source\": \"FYN\", \"target\": \"LIMK1\", \"size\": 1.0}, {\"id\": 2192, \"source\": \"M3K7\", \"target\": \"MK13\", \"size\": 12.0}, {\"id\": 2193, \"source\": \"MP2K1\", \"target\": \"PAK7\", \"size\": 0.5}, {\"id\": 2194, \"source\": \"MP2K2\", \"target\": \"PK3CD\", \"size\": 46.0}, {\"id\": 2195, \"source\": \"MK03\", \"target\": \"PK3CA\", \"size\": 64.0}, {\"id\": 2196, \"source\": \"KCC2B\", \"target\": \"MK03\", \"size\": 16.0}, {\"id\": 2197, \"source\": \"LYN\", \"target\": \"KPCG\", \"size\": 2.0}, {\"id\": 2198, \"source\": \"ERBB2\", \"target\": \"RIPK1\", \"size\": 0.5}, {\"id\": 2199, \"source\": \"EPHB1\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 2200, \"source\": \"JAK2\", \"target\": \"M3K11\", \"size\": 0.5}, {\"id\": 2201, \"source\": \"YES\", \"target\": \"ZAP70\", \"size\": 0.5}, {\"id\": 2202, \"source\": \"JAK1\", \"target\": \"M3K1\", \"size\": 5.0}, {\"id\": 2203, \"source\": \"FER\", \"target\": \"KIT\", \"size\": 0.5}, {\"id\": 2204, \"source\": \"ABL1\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2205, \"source\": \"KPCI\", \"target\": \"RIPK1\", \"size\": 0.5}, {\"id\": 2206, \"source\": \"EPHA6\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 2207, \"source\": \"EPHA6\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 2208, \"source\": \"EPHA1\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 2209, \"source\": \"M4K1\", \"target\": \"ZAP70\", \"size\": 0.5}, {\"id\": 2210, \"source\": \"HCK\", \"target\": \"JAK1\", \"size\": 1.0}, {\"id\": 2211, \"source\": \"LCK\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2212, \"source\": \"MK14\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2213, \"source\": \"EPHA7\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 2214, \"source\": \"EPHA7\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2215, \"source\": \"EPHA1\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 2216, \"source\": \"IRAK1\", \"target\": \"M4K4\", \"size\": 0.5}, {\"id\": 2217, \"source\": \"EPHB1\", \"target\": \"M4K4\", \"size\": 0.5}, {\"id\": 2218, \"source\": \"EPHB2\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 2219, \"source\": \"EPHA1\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 2220, \"source\": \"VGFR3\", \"target\": \"MP2K4\", \"size\": 0.5}, {\"id\": 2221, \"source\": \"EPHA3\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 2222, \"source\": \"HCK\", \"target\": \"PGFRB\", \"size\": 0.5}, {\"id\": 2223, \"source\": \"LCK\", \"target\": \"PGFRB\", \"size\": 1.0}, {\"id\": 2224, \"source\": \"EPHB1\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 2225, \"source\": \"PDK1\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 2226, \"source\": \"FES\", \"target\": \"VGFR2\", \"size\": 0.5}, {\"id\": 2227, \"source\": \"EPHA1\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2228, \"source\": \"BUB1B\", \"target\": \"TAOK1\", \"size\": 0.5}, {\"id\": 2229, \"source\": \"ATM\", \"target\": \"TAOK1\", \"size\": 0.5}, {\"id\": 2230, \"source\": \"M3K5\", \"target\": \"RIPK1\", \"size\": 2.0}, {\"id\": 2231, \"source\": \"ATM\", \"target\": \"TAOK2\", \"size\": 0.5}, {\"id\": 2232, \"source\": \"LCK\", \"target\": \"M4K1\", \"size\": 0.5}, {\"id\": 2233, \"source\": \"BUB1\", \"target\": \"TAOK1\", \"size\": 0.5}, {\"id\": 2234, \"source\": \"LCK\", \"target\": \"SRC\", \"size\": 0.5}, {\"id\": 2235, \"source\": \"EPHA3\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2236, \"source\": \"EPHA5\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 2237, \"source\": \"JAK1\", \"target\": \"M3K11\", \"size\": 0.5}, {\"id\": 2238, \"source\": \"KPCI\", \"target\": \"RIPK2\", \"size\": 0.5}, {\"id\": 2239, \"source\": \"EPHA5\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 2240, \"source\": \"M4K4\", \"target\": \"RIPK1\", \"size\": 0.5}, {\"id\": 2241, \"source\": \"EPHB2\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 2242, \"source\": \"BTK\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 2243, \"source\": \"RIPK1\", \"target\": \"TGFR2\", \"size\": 0.5}, {\"id\": 2244, \"source\": \"FLT3\", \"target\": \"PIM1\", \"size\": 1.0}, {\"id\": 2245, \"source\": \"EPHA7\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 2246, \"source\": \"EPHB1\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 2247, \"source\": \"PDK1\", \"target\": \"PDPK1\", \"size\": 0.5}, {\"id\": 2248, \"source\": \"EPHA5\", \"target\": \"HCK\", \"size\": 0.5}, {\"id\": 2249, \"source\": \"MAST3\", \"target\": \"CSK21\", \"size\": 0.5}, {\"id\": 2250, \"source\": \"ACVR1\", \"target\": \"ACVL1\", \"size\": 0.5}, {\"id\": 2251, \"source\": \"AURKB\", \"target\": \"TTK\", \"size\": 0.5}, {\"id\": 2252, \"source\": \"TGFR2\", \"target\": \"ACV1B\", \"size\": 2.0}, {\"id\": 2253, \"source\": \"TGFR2\", \"target\": \"AVR2A\", \"size\": 2.0}, {\"id\": 2254, \"source\": \"TGFR2\", \"target\": \"AVR2B\", \"size\": 2.0}, {\"id\": 2255, \"source\": \"CDK15\", \"target\": \"MARK2\", \"size\": 0.5}, {\"id\": 2256, \"source\": \"EGFR\", \"target\": \"AKT1\", \"size\": 26.0}, {\"id\": 2257, \"source\": \"CDK1\", \"target\": \"CDK3\", \"size\": 0.5}, {\"id\": 2258, \"source\": \"M3K1\", \"target\": \"NEK10\", \"size\": 0.5}, {\"id\": 2259, \"source\": \"MK09\", \"target\": \"AKT1\", \"size\": 38.0}, {\"id\": 2260, \"source\": \"MK07\", \"target\": \"KPCZ\", \"size\": 1.0}, {\"id\": 2261, \"source\": \"CDK1\", \"target\": \"ABL1\", \"size\": 1.0}, {\"id\": 2262, \"source\": \"MK14\", \"target\": \"MYLK3\", \"size\": 1.0}, {\"id\": 2263, \"source\": \"UFO\", \"target\": \"TYRO3\", \"size\": 0.5}, {\"id\": 2264, \"source\": \"CDK5\", \"target\": \"CDK20\", \"size\": 0.5}, {\"id\": 2265, \"source\": \"TGFR2\", \"target\": \"TYK2\", \"size\": 2.0}, {\"id\": 2266, \"source\": \"NDKA\", \"target\": \"AAPK1\", \"size\": 0.5}, {\"id\": 2267, \"source\": \"CDK5\", \"target\": \"CDK14\", \"size\": 0.5}, {\"id\": 2268, \"source\": \"EGFR\", \"target\": \"NTRK2\", \"size\": 1.0}, {\"id\": 2269, \"source\": \"MK12\", \"target\": \"MK13\", \"size\": 45.0}, {\"id\": 2270, \"source\": \"BRSK1\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 2271, \"source\": \"EGFR\", \"target\": \"KPCE\", \"size\": 1.0}, {\"id\": 2272, \"source\": \"EGFR\", \"target\": \"MK08\", \"size\": 13.0}, {\"id\": 2273, \"source\": \"EGFR\", \"target\": \"KPCZ\", \"size\": 4.0}, {\"id\": 2274, \"source\": \"EGFR\", \"target\": \"PIM1\", \"size\": 1.0}, {\"id\": 2275, \"source\": \"MTOR\", \"target\": \"SGK1\", \"size\": 2.0}, {\"id\": 2276, \"source\": \"EGFR\", \"target\": \"PGFRA\", \"size\": 19.0}, {\"id\": 2277, \"source\": \"MK14\", \"target\": \"KC1G2\", \"size\": 0.5}, {\"id\": 2278, \"source\": \"CDK7\", \"target\": \"CDK20\", \"size\": 0.5}, {\"id\": 2279, \"source\": \"CDK14\", \"target\": \"ICK\", \"size\": 0.5}, {\"id\": 2280, \"source\": \"TGFR2\", \"target\": \"PKN3\", \"size\": 0.5}, {\"id\": 2281, \"source\": \"CDK6\", \"target\": \"E2AK1\", \"size\": 1.0}, {\"id\": 2282, \"source\": \"KC1G1\", \"target\": \"KC1G2\", \"size\": 1.0}, {\"id\": 2283, \"source\": \"EGFR\", \"target\": \"MK09\", \"size\": 13.0}, {\"id\": 2284, \"source\": \"TGFR2\", \"target\": \"BMR1A\", \"size\": 3.0}, {\"id\": 2285, \"source\": \"EGFR\", \"target\": \"RET\", \"size\": 3.0}, {\"id\": 2286, \"source\": \"EGFR\", \"target\": \"RAF1\", \"size\": 31.0}, {\"id\": 2287, \"source\": \"CDK16\", \"target\": \"CDK17\", \"size\": 0.5}, {\"id\": 2288, \"source\": \"CDK16\", \"target\": \"CDK18\", \"size\": 0.5}, {\"id\": 2289, \"source\": \"MK12\", \"target\": \"MYLK3\", \"size\": 1.0}, {\"id\": 2290, \"source\": \"CDK16\", \"target\": \"KPYM\", \"size\": 0.5}, {\"id\": 2291, \"source\": \"TYK2\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 2292, \"source\": \"INSR\", \"target\": \"AAPK1\", \"size\": 9.0}, {\"id\": 2293, \"source\": \"INSR\", \"target\": \"AAPK2\", \"size\": 9.0}, {\"id\": 2294, \"source\": \"SIK2\", \"target\": \"KC1A\", \"size\": 0.5}, {\"id\": 2295, \"source\": \"KCC2A\", \"target\": \"KCC2G\", \"size\": 27.0}, {\"id\": 2296, \"source\": \"CDK1\", \"target\": \"ICK\", \"size\": 0.5}, {\"id\": 2297, \"source\": \"CLK2\", \"target\": \"SRPK2\", \"size\": 0.5}, {\"id\": 2298, \"source\": \"TGFR2\", \"target\": \"PKN2\", \"size\": 0.5}, {\"id\": 2299, \"source\": \"STK25\", \"target\": \"TAOK2\", \"size\": 0.5}, {\"id\": 2300, \"source\": \"EGFR\", \"target\": \"FRK\", \"size\": 0.5}, {\"id\": 2301, \"source\": \"TGFR2\", \"target\": \"PK3CB\", \"size\": 11.0}, {\"id\": 2302, \"source\": \"LIMK2\", \"target\": \"CDK4\", \"size\": 0.5}, {\"id\": 2303, \"source\": \"CDK3\", \"target\": \"AKT2\", \"size\": 0.5}, {\"id\": 2304, \"source\": \"EGFR\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 2305, \"source\": \"CDK13\", \"target\": \"NEK3\", \"size\": 0.5}, {\"id\": 2306, \"source\": \"KCC1D\", \"target\": \"KCC1G\", \"size\": 2.0}, {\"id\": 2307, \"source\": \"CDK14\", \"target\": \"CDK17\", \"size\": 0.5}, {\"id\": 2308, \"source\": \"CDK1\", \"target\": \"CDK17\", \"size\": 0.5}, {\"id\": 2309, \"source\": \"KS6B2\", \"target\": \"NDK3\", \"size\": 0.5}, {\"id\": 2310, \"source\": \"MK09\", \"target\": \"KC1E\", \"size\": 2.0}, {\"id\": 2311, \"source\": \"PLK2\", \"target\": \"PAK2\", \"size\": 0.5}, {\"id\": 2312, \"source\": \"ALK\", \"target\": \"SRC\", \"size\": 0.5}, {\"id\": 2313, \"source\": \"PI51A\", \"target\": \"PI51C\", \"size\": 7.0}, {\"id\": 2314, \"source\": \"TRIB3\", \"target\": \"STK40\", \"size\": 0.5}, {\"id\": 2315, \"source\": \"KCC2D\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2316, \"source\": \"MYLK2\", \"target\": \"KS6A4\", \"size\": 0.5}, {\"id\": 2317, \"source\": \"EGFR\", \"target\": \"ITK\", \"size\": 0.5}, {\"id\": 2318, \"source\": \"CD11A\", \"target\": \"CD11B\", \"size\": 0.5}, {\"id\": 2319, \"source\": \"CDK18\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 2320, \"source\": \"CSK21\", \"target\": \"AKT1\", \"size\": 2.0}, {\"id\": 2321, \"source\": \"MINK1\", \"target\": \"M4K4\", \"size\": 0.5}, {\"id\": 2322, \"source\": \"ACK1\", \"target\": \"NEK6\", \"size\": 0.5}, {\"id\": 2323, \"source\": \"AKT1\", \"target\": \"TBK1\", \"size\": 9.0}, {\"id\": 2324, \"source\": \"CDK9\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 2325, \"source\": \"KPCZ\", \"target\": \"AKT2\", \"size\": 10.0}, {\"id\": 2326, \"source\": \"ABL1\", \"target\": \"KPCZ\", \"size\": 1.0}, {\"id\": 2327, \"source\": \"CDK13\", \"target\": \"DUSTY\", \"size\": 0.5}, {\"id\": 2328, \"source\": \"TGFR2\", \"target\": \"JAK1\", \"size\": 5.0}, {\"id\": 2329, \"source\": \"MOS\", \"target\": \"MST4\", \"size\": 0.5}, {\"id\": 2330, \"source\": \"TRIB1\", \"target\": \"STK40\", \"size\": 0.5}, {\"id\": 2331, \"source\": \"IKKA\", \"target\": \"MTOR\", \"size\": 10.0}, {\"id\": 2332, \"source\": \"EGFR\", \"target\": \"M3K3\", \"size\": 2.0}, {\"id\": 2333, \"source\": \"CDK18\", \"target\": \"CDK15\", \"size\": 0.5}, {\"id\": 2334, \"source\": \"ARAF\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 2335, \"source\": \"PDK1\", \"target\": \"PDK3\", \"size\": 0.5}, {\"id\": 2336, \"source\": \"ILK\", \"target\": \"VRK2\", \"size\": 0.5}, {\"id\": 2337, \"source\": \"PAK4\", \"target\": \"PAK6\", \"size\": 7.0}, {\"id\": 2338, \"source\": \"MK08\", \"target\": \"AKT1\", \"size\": 38.0}, {\"id\": 2339, \"source\": \"EGFR\", \"target\": \"ADCK3\", \"size\": 0.5}, {\"id\": 2340, \"source\": \"PAK4\", \"target\": \"PAK7\", \"size\": 0.5}, {\"id\": 2341, \"source\": \"CDK2\", \"target\": \"LATS1\", \"size\": 0.5}, {\"id\": 2342, \"source\": \"TGFR2\", \"target\": \"ERBB2\", \"size\": 3.0}, {\"id\": 2343, \"source\": \"CDK16\", \"target\": \"ICK\", \"size\": 0.5}, {\"id\": 2344, \"source\": \"CDK8\", \"target\": \"CDK16\", \"size\": 0.5}, {\"id\": 2345, \"source\": \"TGFR2\", \"target\": \"FGFR1\", \"size\": 3.0}, {\"id\": 2346, \"source\": \"GSK3B\", \"target\": \"M3K4\", \"size\": 0.5}, {\"id\": 2347, \"source\": \"MK14\", \"target\": \"PRKY\", \"size\": 0.5}, {\"id\": 2348, \"source\": \"MAST3\", \"target\": \"AAPK1\", \"size\": 0.5}, {\"id\": 2349, \"source\": \"KCC1A\", \"target\": \"BLK\", \"size\": 0.5}, {\"id\": 2350, \"source\": \"MAST3\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 2351, \"source\": \"MOS\", \"target\": \"STK25\", \"size\": 0.5}, {\"id\": 2352, \"source\": \"ULK1\", \"target\": \"DAPK3\", \"size\": 1.0}, {\"id\": 2353, \"source\": \"MAPK3\", \"target\": \"PRKY\", \"size\": 0.5}, {\"id\": 2354, \"source\": \"MTOR\", \"target\": \"ILK\", \"size\": 0.5}, {\"id\": 2355, \"source\": \"IKKB\", \"target\": \"MTOR\", \"size\": 14.0}, {\"id\": 2356, \"source\": \"MK01\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 2357, \"source\": \"LRRK2\", \"target\": \"KC1E\", \"size\": 0.5}, {\"id\": 2358, \"source\": \"TGFR2\", \"target\": \"MP2K1\", \"size\": 9.0}, {\"id\": 2359, \"source\": \"MAPK3\", \"target\": \"BRAF\", \"size\": 1.0}, {\"id\": 2360, \"source\": \"PRKDC\", \"target\": \"CDK8\", \"size\": 0.5}, {\"id\": 2361, \"source\": \"STK11\", \"target\": \"MAPK3\", \"size\": 0.5}, {\"id\": 2362, \"source\": \"FLT3\", \"target\": \"KSYK\", \"size\": 0.5}, {\"id\": 2363, \"source\": \"AKT1\", \"target\": \"BUB1\", \"size\": 7.0}, {\"id\": 2364, \"source\": \"KC1A\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 2365, \"source\": \"UFO\", \"target\": \"EGFR\", \"size\": 1.0}, {\"id\": 2366, \"source\": \"ERBB2\", \"target\": \"MP2K1\", \"size\": 15.0}, {\"id\": 2367, \"source\": \"PAK1\", \"target\": \"PK3CB\", \"size\": 12.0}, {\"id\": 2368, \"source\": \"EGFR\", \"target\": \"MAPK3\", \"size\": 1.0}, {\"id\": 2369, \"source\": \"STK4\", \"target\": \"ILK\", \"size\": 0.5}, {\"id\": 2370, \"source\": \"ERBB2\", \"target\": \"CDK8\", \"size\": 0.5}, {\"id\": 2371, \"source\": \"BUB1\", \"target\": \"CDK8\", \"size\": 0.5}, {\"id\": 2372, \"source\": \"KC1G1\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 2373, \"source\": \"STK24\", \"target\": \"ERBB2\", \"size\": 0.5}, {\"id\": 2374, \"source\": \"CDK8\", \"target\": \"BMR1A\", \"size\": 0.5}, {\"id\": 2375, \"source\": \"AKT1\", \"target\": \"STK11\", \"size\": 7.0}, {\"id\": 2376, \"source\": \"STK11\", \"target\": \"MP2K1\", \"size\": 4.0}, {\"id\": 2377, \"source\": \"MP2K1\", \"target\": \"BUB1\", \"size\": 8.0}, {\"id\": 2378, \"source\": \"MK08\", \"target\": \"M3K11\", \"size\": 2.0}, {\"id\": 2379, \"source\": \"BUB1\", \"target\": \"MAPK3\", \"size\": 0.5}, {\"id\": 2380, \"source\": \"LRRK2\", \"target\": \"KC1G3\", \"size\": 0.5}, {\"id\": 2381, \"source\": \"CSK\", \"target\": \"PDPK1\", \"size\": 0.5}, {\"id\": 2382, \"source\": \"STK11\", \"target\": \"STK24\", \"size\": 0.5}, {\"id\": 2383, \"source\": \"STK4\", \"target\": \"MP2K4\", \"size\": 1.0}, {\"id\": 2384, \"source\": \"STK4\", \"target\": \"PAK3\", \"size\": 1.0}, {\"id\": 2385, \"source\": \"KC1G2\", \"target\": \"LRRK2\", \"size\": 0.5}, {\"id\": 2386, \"source\": \"EGFR\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 2387, \"source\": \"KPCB\", \"target\": \"AKT1\", \"size\": 26.0}, {\"id\": 2388, \"source\": \"LRRK2\", \"target\": \"KC1D\", \"size\": 0.5}, {\"id\": 2389, \"source\": \"SRC\", \"target\": \"MAPK3\", \"size\": 1.0}, {\"id\": 2390, \"source\": \"MP2K1\", \"target\": \"BMR1A\", \"size\": 1.0}, {\"id\": 2391, \"source\": \"CDC7\", \"target\": \"CHK1\", \"size\": 1.0}, {\"id\": 2392, \"source\": \"CDC7\", \"target\": \"ATR\", \"size\": 1.0}, {\"id\": 2393, \"source\": \"PLK4\", \"target\": \"NEK2\", \"size\": 0.5}, {\"id\": 2394, \"source\": \"PLK4\", \"target\": \"TTBK2\", \"size\": 0.5}, {\"id\": 2395, \"source\": \"MP2K7\", \"target\": \"RIPK2\", \"size\": 1.0}, {\"id\": 2396, \"source\": \"MP2K7\", \"target\": \"IRAK1\", \"size\": 3.0}, {\"id\": 2397, \"source\": \"CHK1\", \"target\": \"WEE1\", \"size\": 1.0}, {\"id\": 2398, \"source\": \"IKKB\", \"target\": \"PDPK1\", \"size\": 11.0}, {\"id\": 2399, \"source\": \"IKKB\", \"target\": \"RIPK3\", \"size\": 3.0}, {\"id\": 2400, \"source\": \"STK6\", \"target\": \"PLK4\", \"size\": 0.5}, {\"id\": 2401, \"source\": \"STK6\", \"target\": \"NEK2\", \"size\": 0.5}, {\"id\": 2402, \"source\": \"STK6\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 2403, \"source\": \"IKKA\", \"target\": \"PDPK1\", \"size\": 8.0}, {\"id\": 2404, \"source\": \"IKKA\", \"target\": \"IRAK2\", \"size\": 0.5}, {\"id\": 2405, \"source\": \"IKKA\", \"target\": \"RIPK3\", \"size\": 3.0}, {\"id\": 2406, \"source\": \"TIF1A\", \"target\": \"FGFR1\", \"size\": 0.5}, {\"id\": 2407, \"source\": \"PDPK1\", \"target\": \"M3K7\", \"size\": 4.0}, {\"id\": 2408, \"source\": \"PDPK1\", \"target\": \"RIPK2\", \"size\": 1.0}, {\"id\": 2409, \"source\": \"PDPK1\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2410, \"source\": \"PDPK1\", \"target\": \"FGFR1\", \"size\": 3.0}, {\"id\": 2411, \"source\": \"PDPK1\", \"target\": \"FGFR2\", \"size\": 2.0}, {\"id\": 2412, \"source\": \"PDPK1\", \"target\": \"FGFR3\", \"size\": 1.0}, {\"id\": 2413, \"source\": \"PDPK1\", \"target\": \"GSK3A\", \"size\": 0.5}, {\"id\": 2414, \"source\": \"PDPK1\", \"target\": \"GSK3B\", \"size\": 11.0}, {\"id\": 2415, \"source\": \"PDPK1\", \"target\": \"PI3R4\", \"size\": 1.0}, {\"id\": 2416, \"source\": \"IRAK2\", \"target\": \"MP2K7\", \"size\": 1.0}, {\"id\": 2417, \"source\": \"IRAK2\", \"target\": \"M3K7\", \"size\": 0.5}, {\"id\": 2418, \"source\": \"IRAK2\", \"target\": \"RIPK2\", \"size\": 2.0}, {\"id\": 2419, \"source\": \"IRAK2\", \"target\": \"M3K8\", \"size\": 0.5}, {\"id\": 2420, \"source\": \"IRAK2\", \"target\": \"MK08\", \"size\": 2.0}, {\"id\": 2421, \"source\": \"IRAK2\", \"target\": \"MK09\", \"size\": 2.0}, {\"id\": 2422, \"source\": \"IRAK2\", \"target\": \"MP2K4\", \"size\": 0.5}, {\"id\": 2423, \"source\": \"IRAK2\", \"target\": \"MP2K3\", \"size\": 0.5}, {\"id\": 2424, \"source\": \"IRAK2\", \"target\": \"MP2K6\", \"size\": 0.5}, {\"id\": 2425, \"source\": \"IRAK2\", \"target\": \"MK10\", \"size\": 2.0}, {\"id\": 2426, \"source\": \"IRAK2\", \"target\": \"M3K1\", \"size\": 1.0}, {\"id\": 2427, \"source\": \"RIPK2\", \"target\": \"MP2K3\", \"size\": 0.5}, {\"id\": 2428, \"source\": \"RIPK2\", \"target\": \"MP2K6\", \"size\": 0.5}, {\"id\": 2429, \"source\": \"BUB1\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 2430, \"source\": \"KALRN\", \"target\": \"TRIO\", \"size\": 0.5}, {\"id\": 2431, \"source\": \"KALRN\", \"target\": \"OBSCN\", \"size\": 0.5}, {\"id\": 2432, \"source\": \"BUB1B\", \"target\": \"NEK2\", \"size\": 0.5}, {\"id\": 2433, \"source\": \"JAK2\", \"target\": \"BRAF\", \"size\": 2.0}, {\"id\": 2434, \"source\": \"JAK2\", \"target\": \"PGFRA\", \"size\": 2.0}, {\"id\": 2435, \"source\": \"JAK2\", \"target\": \"KAPCA\", \"size\": 2.0}, {\"id\": 2436, \"source\": \"JAK2\", \"target\": \"FGFR2\", \"size\": 3.0}, {\"id\": 2437, \"source\": \"JAK2\", \"target\": \"FGFR3\", \"size\": 3.0}, {\"id\": 2438, \"source\": \"JAK2\", \"target\": \"TIE2\", \"size\": 1.0}, {\"id\": 2439, \"source\": \"JAK2\", \"target\": \"KPCD\", \"size\": 2.0}, {\"id\": 2440, \"source\": \"JAK2\", \"target\": \"KCC2G\", \"size\": 3.0}, {\"id\": 2441, \"source\": \"JAK2\", \"target\": \"KCC2D\", \"size\": 3.0}, {\"id\": 2442, \"source\": \"JAK2\", \"target\": \"ERBB4\", \"size\": 0.5}, {\"id\": 2443, \"source\": \"JAK2\", \"target\": \"KCC2A\", \"size\": 3.0}, {\"id\": 2444, \"source\": \"ROCK2\", \"target\": \"KALRN\", \"size\": 0.5}, {\"id\": 2445, \"source\": \"ROCK2\", \"target\": \"TRIO\", \"size\": 0.5}, {\"id\": 2446, \"source\": \"ROCK2\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2447, \"source\": \"ROCK2\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2448, \"source\": \"ROCK2\", \"target\": \"OBSCN\", \"size\": 0.5}, {\"id\": 2449, \"source\": \"ROCK2\", \"target\": \"EPHA6\", \"size\": 1.0}, {\"id\": 2450, \"source\": \"PAK3\", \"target\": \"TRIO\", \"size\": 0.5}, {\"id\": 2451, \"source\": \"PAK3\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2452, \"source\": \"ABL1\", \"target\": \"MK14\", \"size\": 2.0}, {\"id\": 2453, \"source\": \"EGFR\", \"target\": \"FYN\", \"size\": 3.0}, {\"id\": 2454, \"source\": \"EGFR\", \"target\": \"KIT\", \"size\": 9.0}, {\"id\": 2455, \"source\": \"EGFR\", \"target\": \"FGFR1\", \"size\": 12.0}, {\"id\": 2456, \"source\": \"EGFR\", \"target\": \"BRAF\", \"size\": 19.0}, {\"id\": 2457, \"source\": \"EGFR\", \"target\": \"FGFR2\", \"size\": 10.0}, {\"id\": 2458, \"source\": \"EGFR\", \"target\": \"FGFR4\", \"size\": 6.0}, {\"id\": 2459, \"source\": \"EGFR\", \"target\": \"FGFR3\", \"size\": 11.0}, {\"id\": 2460, \"source\": \"EGFR\", \"target\": \"MATK\", \"size\": 0.5}, {\"id\": 2461, \"source\": \"EGFR\", \"target\": \"TIE2\", \"size\": 4.0}, {\"id\": 2462, \"source\": \"EGFR\", \"target\": \"KCC2B\", \"size\": 7.0}, {\"id\": 2463, \"source\": \"EGFR\", \"target\": \"KCC2D\", \"size\": 7.0}, {\"id\": 2464, \"source\": \"RAF1\", \"target\": \"PDPK1\", \"size\": 18.0}, {\"id\": 2465, \"source\": \"RAF1\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 2466, \"source\": \"RAF1\", \"target\": \"SGK3\", \"size\": 2.0}, {\"id\": 2467, \"source\": \"RAF1\", \"target\": \"SGK2\", \"size\": 2.0}, {\"id\": 2468, \"source\": \"ERBB2\", \"target\": \"ROCK2\", \"size\": 4.0}, {\"id\": 2469, \"source\": \"ERBB2\", \"target\": \"PGFRB\", \"size\": 7.0}, {\"id\": 2470, \"source\": \"ERBB2\", \"target\": \"KIT\", \"size\": 3.0}, {\"id\": 2471, \"source\": \"ERBB2\", \"target\": \"FGFR1\", \"size\": 6.0}, {\"id\": 2472, \"source\": \"ERBB2\", \"target\": \"BRAF\", \"size\": 12.0}, {\"id\": 2473, \"source\": \"ERBB2\", \"target\": \"PGFRA\", \"size\": 7.0}, {\"id\": 2474, \"source\": \"ERBB2\", \"target\": \"FGFR2\", \"size\": 4.0}, {\"id\": 2475, \"source\": \"ERBB2\", \"target\": \"FGFR4\", \"size\": 0.5}, {\"id\": 2476, \"source\": \"ERBB2\", \"target\": \"FGFR3\", \"size\": 5.0}, {\"id\": 2477, \"source\": \"ERBB2\", \"target\": \"TIE2\", \"size\": 1.0}, {\"id\": 2478, \"source\": \"ERBB2\", \"target\": \"ROCK1\", \"size\": 5.0}, {\"id\": 2479, \"source\": \"ERBB2\", \"target\": \"KCC2B\", \"size\": 4.0}, {\"id\": 2480, \"source\": \"ERBB2\", \"target\": \"KCC2G\", \"size\": 4.0}, {\"id\": 2481, \"source\": \"ERBB2\", \"target\": \"KCC2D\", \"size\": 4.0}, {\"id\": 2482, \"source\": \"ERBB2\", \"target\": \"KCC2A\", \"size\": 4.0}, {\"id\": 2483, \"source\": \"LCK\", \"target\": \"PDPK1\", \"size\": 1.0}, {\"id\": 2484, \"source\": \"LCK\", \"target\": \"PAK3\", \"size\": 1.0}, {\"id\": 2485, \"source\": \"LCK\", \"target\": \"LYN\", \"size\": 1.0}, {\"id\": 2486, \"source\": \"LCK\", \"target\": \"PAK1\", \"size\": 2.0}, {\"id\": 2487, \"source\": \"FYN\", \"target\": \"PDPK1\", \"size\": 4.0}, {\"id\": 2488, \"source\": \"FYN\", \"target\": \"ROCK2\", \"size\": 5.0}, {\"id\": 2489, \"source\": \"FYN\", \"target\": \"PAK3\", \"size\": 3.0}, {\"id\": 2490, \"source\": \"FYN\", \"target\": \"TRIO\", \"size\": 0.5}, {\"id\": 2491, \"source\": \"FYN\", \"target\": \"LYN\", \"size\": 2.0}, {\"id\": 2492, \"source\": \"FYN\", \"target\": \"MET\", \"size\": 3.0}, {\"id\": 2493, \"source\": \"FYN\", \"target\": \"FGFR1\", \"size\": 1.0}, {\"id\": 2494, \"source\": \"FYN\", \"target\": \"BRAF\", \"size\": 2.0}, {\"id\": 2495, \"source\": \"FYN\", \"target\": \"PGFRA\", \"size\": 2.0}, {\"id\": 2496, \"source\": \"FYN\", \"target\": \"FGFR3\", \"size\": 0.5}, {\"id\": 2497, \"source\": \"FYN\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2498, \"source\": \"FYN\", \"target\": \"AKT1\", \"size\": 9.0}, {\"id\": 2499, \"source\": \"FYN\", \"target\": \"GSK3B\", \"size\": 4.0}, {\"id\": 2500, \"source\": \"FYN\", \"target\": \"TIE2\", \"size\": 0.5}, {\"id\": 2501, \"source\": \"FYN\", \"target\": \"PAK1\", \"size\": 4.0}, {\"id\": 2502, \"source\": \"FYN\", \"target\": \"ROCK1\", \"size\": 5.0}, {\"id\": 2503, \"source\": \"FYN\", \"target\": \"KCC2B\", \"size\": 2.0}, {\"id\": 2504, \"source\": \"FYN\", \"target\": \"KCC2G\", \"size\": 2.0}, {\"id\": 2505, \"source\": \"FYN\", \"target\": \"KCC2D\", \"size\": 2.0}, {\"id\": 2506, \"source\": \"FYN\", \"target\": \"ERBB4\", \"size\": 0.5}, {\"id\": 2507, \"source\": \"FYN\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2508, \"source\": \"FYN\", \"target\": \"KCC2A\", \"size\": 2.0}, {\"id\": 2509, \"source\": \"FES\", \"target\": \"PAK3\", \"size\": 1.0}, {\"id\": 2510, \"source\": \"FES\", \"target\": \"LIMK1\", \"size\": 1.0}, {\"id\": 2511, \"source\": \"FES\", \"target\": \"PAK1\", \"size\": 1.0}, {\"id\": 2512, \"source\": \"FES\", \"target\": \"PAK2\", \"size\": 1.0}, {\"id\": 2513, \"source\": \"YES\", \"target\": \"ROCK2\", \"size\": 0.5}, {\"id\": 2514, \"source\": \"YES\", \"target\": \"ROCK1\", \"size\": 0.5}, {\"id\": 2515, \"source\": \"YES\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2516, \"source\": \"YES\", \"target\": \"EPHA6\", \"size\": 0.5}, {\"id\": 2517, \"source\": \"LYN\", \"target\": \"PDPK1\", \"size\": 1.0}, {\"id\": 2518, \"source\": \"LYN\", \"target\": \"ROCK2\", \"size\": 2.0}, {\"id\": 2519, \"source\": \"LYN\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2520, \"source\": \"LYN\", \"target\": \"EPHB2\", \"size\": 0.5}, {\"id\": 2521, \"source\": \"LYN\", \"target\": \"ROCK1\", \"size\": 2.0}, {\"id\": 2522, \"source\": \"LYN\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2523, \"source\": \"LYN\", \"target\": \"EPHA6\", \"size\": 0.5}, {\"id\": 2524, \"source\": \"PGFRB\", \"target\": \"FGFR1\", \"size\": 9.0}, {\"id\": 2525, \"source\": \"PGFRB\", \"target\": \"FGFR2\", \"size\": 9.0}, {\"id\": 2526, \"source\": \"PGFRB\", \"target\": \"FGFR3\", \"size\": 9.0}, {\"id\": 2527, \"source\": \"PGFRB\", \"target\": \"TIE2\", \"size\": 3.0}, {\"id\": 2528, \"source\": \"PGFRB\", \"target\": \"ERBB4\", \"size\": 1.0}, {\"id\": 2529, \"source\": \"KIT\", \"target\": \"CHK1\", \"size\": 0.5}, {\"id\": 2530, \"source\": \"KIT\", \"target\": \"PGFRB\", \"size\": 7.0}, {\"id\": 2531, \"source\": \"KIT\", \"target\": \"FGFR1\", \"size\": 6.0}, {\"id\": 2532, \"source\": \"KIT\", \"target\": \"BRAF\", \"size\": 4.0}, {\"id\": 2533, \"source\": \"KIT\", \"target\": \"FGFR2\", \"size\": 6.0}, {\"id\": 2534, \"source\": \"KIT\", \"target\": \"FGFR3\", \"size\": 6.0}, {\"id\": 2535, \"source\": \"KIT\", \"target\": \"TIE2\", \"size\": 3.0}, {\"id\": 2536, \"source\": \"KIT\", \"target\": \"ERBB4\", \"size\": 1.0}, {\"id\": 2537, \"source\": \"FGFR1\", \"target\": \"BRAF\", \"size\": 8.0}, {\"id\": 2538, \"source\": \"FGFR1\", \"target\": \"PGFRA\", \"size\": 9.0}, {\"id\": 2539, \"source\": \"FGFR1\", \"target\": \"FGFR2\", \"size\": 9.0}, {\"id\": 2540, \"source\": \"FGFR1\", \"target\": \"FGFR4\", \"size\": 6.0}, {\"id\": 2541, \"source\": \"FGFR1\", \"target\": \"FGFR3\", \"size\": 8.0}, {\"id\": 2542, \"source\": \"FGFR1\", \"target\": \"JAK1\", \"size\": 3.0}, {\"id\": 2543, \"source\": \"FGFR1\", \"target\": \"MK03\", \"size\": 13.0}, {\"id\": 2544, \"source\": \"FGFR1\", \"target\": \"MK01\", \"size\": 13.0}, {\"id\": 2545, \"source\": \"FGFR1\", \"target\": \"TIE2\", \"size\": 3.0}, {\"id\": 2546, \"source\": \"FGFR1\", \"target\": \"KCC2B\", \"size\": 1.0}, {\"id\": 2547, \"source\": \"FGFR1\", \"target\": \"KCC2G\", \"size\": 1.0}, {\"id\": 2548, \"source\": \"FGFR1\", \"target\": \"KCC2D\", \"size\": 1.0}, {\"id\": 2549, \"source\": \"FGFR1\", \"target\": \"ERBB4\", \"size\": 1.0}, {\"id\": 2550, \"source\": \"FGFR1\", \"target\": \"TRIB3\", \"size\": 0.5}, {\"id\": 2551, \"source\": \"FGFR1\", \"target\": \"KCC2A\", \"size\": 1.0}, {\"id\": 2552, \"source\": \"CDK4\", \"target\": \"ATM\", \"size\": 5.0}, {\"id\": 2553, \"source\": \"SRC\", \"target\": \"ROCK2\", \"size\": 9.0}, {\"id\": 2554, \"source\": \"SRC\", \"target\": \"PAK3\", \"size\": 4.0}, {\"id\": 2555, \"source\": \"SRC\", \"target\": \"TRIO\", \"size\": 0.5}, {\"id\": 2556, \"source\": \"SRC\", \"target\": \"ROCK1\", \"size\": 9.0}, {\"id\": 2557, \"source\": \"SRC\", \"target\": \"ERBB4\", \"size\": 3.0}, {\"id\": 2558, \"source\": \"SRC\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2559, \"source\": \"BRAF\", \"target\": \"NTRK1\", \"size\": 4.0}, {\"id\": 2560, \"source\": \"BRAF\", \"target\": \"PGFRB\", \"size\": 9.0}, {\"id\": 2561, \"source\": \"BRAF\", \"target\": \"PGFRA\", \"size\": 9.0}, {\"id\": 2562, \"source\": \"BRAF\", \"target\": \"FGFR2\", \"size\": 6.0}, {\"id\": 2563, \"source\": \"BRAF\", \"target\": \"FGFR3\", \"size\": 6.0}, {\"id\": 2564, \"source\": \"BRAF\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 2565, \"source\": \"BRAF\", \"target\": \"TIE2\", \"size\": 1.0}, {\"id\": 2566, \"source\": \"BRAF\", \"target\": \"ERBB4\", \"size\": 2.0}, {\"id\": 2567, \"source\": \"PGFRA\", \"target\": \"FGFR2\", \"size\": 10.0}, {\"id\": 2568, \"source\": \"PGFRA\", \"target\": \"FGFR3\", \"size\": 10.0}, {\"id\": 2569, \"source\": \"PGFRA\", \"target\": \"TIE2\", \"size\": 3.0}, {\"id\": 2570, \"source\": \"PGFRA\", \"target\": \"ERBB4\", \"size\": 2.0}, {\"id\": 2571, \"source\": \"KPCA\", \"target\": \"PDPK1\", \"size\": 10.0}, {\"id\": 2572, \"source\": \"KPCA\", \"target\": \"KPCG\", \"size\": 50.0}, {\"id\": 2573, \"source\": \"KPCA\", \"target\": \"KPCD\", \"size\": 5.0}, {\"id\": 2574, \"source\": \"KAPCA\", \"target\": \"PLK4\", \"size\": 0.5}, {\"id\": 2575, \"source\": \"KAPCA\", \"target\": \"STK6\", \"size\": 2.0}, {\"id\": 2576, \"source\": \"KAPCA\", \"target\": \"KC1A\", \"size\": 3.0}, {\"id\": 2577, \"source\": \"KAPCA\", \"target\": \"KC1D\", \"size\": 2.0}, {\"id\": 2578, \"source\": \"KAPCA\", \"target\": \"KC1E\", \"size\": 2.0}, {\"id\": 2579, \"source\": \"KAPCA\", \"target\": \"NEK2\", \"size\": 0.5}, {\"id\": 2580, \"source\": \"KAPCA\", \"target\": \"PLK1\", \"size\": 2.0}, {\"id\": 2581, \"source\": \"KAPCA\", \"target\": \"CDK5\", \"size\": 1.0}, {\"id\": 2582, \"source\": \"KAPCA\", \"target\": \"TTBK2\", \"size\": 0.5}, {\"id\": 2583, \"source\": \"KAPCA\", \"target\": \"MAPK5\", \"size\": 1.0}, {\"id\": 2584, \"source\": \"KAPCA\", \"target\": \"MARK4\", \"size\": 0.5}, {\"id\": 2585, \"source\": \"EPHA1\", \"target\": \"ROCK2\", \"size\": 1.0}, {\"id\": 2586, \"source\": \"EPHA1\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 2587, \"source\": \"EPHA1\", \"target\": \"EPHA2\", \"size\": 1.0}, {\"id\": 2588, \"source\": \"EPHA1\", \"target\": \"EPHA3\", \"size\": 1.0}, {\"id\": 2589, \"source\": \"EPHA1\", \"target\": \"EPHA8\", \"size\": 1.0}, {\"id\": 2590, \"source\": \"EPHA1\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2591, \"source\": \"EPHA1\", \"target\": \"EPHB3\", \"size\": 1.0}, {\"id\": 2592, \"source\": \"EPHA1\", \"target\": \"EPHB4\", \"size\": 1.0}, {\"id\": 2593, \"source\": \"EPHA1\", \"target\": \"EPHA4\", \"size\": 1.0}, {\"id\": 2594, \"source\": \"EPHA1\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 2595, \"source\": \"EPHA1\", \"target\": \"EPHA7\", \"size\": 1.0}, {\"id\": 2596, \"source\": \"EPHA1\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2597, \"source\": \"EPHA1\", \"target\": \"EPHA6\", \"size\": 1.0}, {\"id\": 2598, \"source\": \"FGFR2\", \"target\": \"FGFR4\", \"size\": 7.0}, {\"id\": 2599, \"source\": \"FGFR2\", \"target\": \"FGFR3\", \"size\": 10.0}, {\"id\": 2600, \"source\": \"FGFR2\", \"target\": \"JAK1\", \"size\": 4.0}, {\"id\": 2601, \"source\": \"FGFR2\", \"target\": \"MK03\", \"size\": 10.0}, {\"id\": 2602, \"source\": \"FGFR2\", \"target\": \"MK01\", \"size\": 10.0}, {\"id\": 2603, \"source\": \"FGFR2\", \"target\": \"TIE2\", \"size\": 3.0}, {\"id\": 2604, \"source\": \"FGFR2\", \"target\": \"KCC2B\", \"size\": 0.5}, {\"id\": 2605, \"source\": \"FGFR2\", \"target\": \"KCC2G\", \"size\": 0.5}, {\"id\": 2606, \"source\": \"FGFR2\", \"target\": \"KCC2D\", \"size\": 0.5}, {\"id\": 2607, \"source\": \"FGFR2\", \"target\": \"ERBB4\", \"size\": 1.0}, {\"id\": 2608, \"source\": \"FGFR2\", \"target\": \"TRIB3\", \"size\": 0.5}, {\"id\": 2609, \"source\": \"FGFR2\", \"target\": \"KCC2A\", \"size\": 0.5}, {\"id\": 2610, \"source\": \"ERBB3\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 2611, \"source\": \"ERBB3\", \"target\": \"PGFRB\", \"size\": 3.0}, {\"id\": 2612, \"source\": \"ERBB3\", \"target\": \"KIT\", \"size\": 1.0}, {\"id\": 2613, \"source\": \"ERBB3\", \"target\": \"BRAF\", \"size\": 3.0}, {\"id\": 2614, \"source\": \"ERBB3\", \"target\": \"PGFRA\", \"size\": 4.0}, {\"id\": 2615, \"source\": \"ERBB3\", \"target\": \"FGFR2\", \"size\": 2.0}, {\"id\": 2616, \"source\": \"ERBB3\", \"target\": \"FGFR4\", \"size\": 1.0}, {\"id\": 2617, \"source\": \"ERBB3\", \"target\": \"FGFR3\", \"size\": 3.0}, {\"id\": 2618, \"source\": \"ERBB3\", \"target\": \"JAK1\", \"size\": 1.0}, {\"id\": 2619, \"source\": \"ERBB3\", \"target\": \"MATK\", \"size\": 0.5}, {\"id\": 2620, \"source\": \"ERBB3\", \"target\": \"TIE2\", \"size\": 0.5}, {\"id\": 2621, \"source\": \"ERBB3\", \"target\": \"KCC2B\", \"size\": 3.0}, {\"id\": 2622, \"source\": \"ERBB3\", \"target\": \"KCC2G\", \"size\": 3.0}, {\"id\": 2623, \"source\": \"ERBB3\", \"target\": \"KCC2D\", \"size\": 3.0}, {\"id\": 2624, \"source\": \"ERBB3\", \"target\": \"KCC2A\", \"size\": 3.0}, {\"id\": 2625, \"source\": \"FGFR4\", \"target\": \"PDPK1\", \"size\": 1.0}, {\"id\": 2626, \"source\": \"FGFR4\", \"target\": \"JAK2\", \"size\": 2.0}, {\"id\": 2627, \"source\": \"FGFR4\", \"target\": \"FYN\", \"size\": 0.5}, {\"id\": 2628, \"source\": \"FGFR4\", \"target\": \"PGFRB\", \"size\": 5.0}, {\"id\": 2629, \"source\": \"FGFR4\", \"target\": \"KIT\", \"size\": 4.0}, {\"id\": 2630, \"source\": \"FGFR4\", \"target\": \"BRAF\", \"size\": 3.0}, {\"id\": 2631, \"source\": \"FGFR4\", \"target\": \"PGFRA\", \"size\": 6.0}, {\"id\": 2632, \"source\": \"FGFR4\", \"target\": \"FGFR3\", \"size\": 7.0}, {\"id\": 2633, \"source\": \"FGFR4\", \"target\": \"JAK1\", \"size\": 2.0}, {\"id\": 2634, \"source\": \"FGFR4\", \"target\": \"MK03\", \"size\": 6.0}, {\"id\": 2635, \"source\": \"FGFR4\", \"target\": \"MK01\", \"size\": 6.0}, {\"id\": 2636, \"source\": \"FGFR4\", \"target\": \"TIE2\", \"size\": 3.0}, {\"id\": 2637, \"source\": \"FGFR4\", \"target\": \"KCC2B\", \"size\": 0.5}, {\"id\": 2638, \"source\": \"FGFR4\", \"target\": \"KCC2G\", \"size\": 0.5}, {\"id\": 2639, \"source\": \"FGFR4\", \"target\": \"KCC2D\", \"size\": 0.5}, {\"id\": 2640, \"source\": \"FGFR4\", \"target\": \"ERBB4\", \"size\": 1.0}, {\"id\": 2641, \"source\": \"FGFR4\", \"target\": \"TRIB3\", \"size\": 0.5}, {\"id\": 2642, \"source\": \"FGFR4\", \"target\": \"KCC2A\", \"size\": 0.5}, {\"id\": 2643, \"source\": \"FGFR3\", \"target\": \"JAK1\", \"size\": 4.0}, {\"id\": 2644, \"source\": \"FGFR3\", \"target\": \"MK03\", \"size\": 10.0}, {\"id\": 2645, \"source\": \"FGFR3\", \"target\": \"MK01\", \"size\": 11.0}, {\"id\": 2646, \"source\": \"FGFR3\", \"target\": \"TIE2\", \"size\": 3.0}, {\"id\": 2647, \"source\": \"FGFR3\", \"target\": \"KCC2B\", \"size\": 0.5}, {\"id\": 2648, \"source\": \"FGFR3\", \"target\": \"KCC2G\", \"size\": 0.5}, {\"id\": 2649, \"source\": \"FGFR3\", \"target\": \"KCC2D\", \"size\": 0.5}, {\"id\": 2650, \"source\": \"FGFR3\", \"target\": \"ERBB4\", \"size\": 1.0}, {\"id\": 2651, \"source\": \"FGFR3\", \"target\": \"TRIB3\", \"size\": 0.5}, {\"id\": 2652, \"source\": \"FGFR3\", \"target\": \"KCC2A\", \"size\": 0.5}, {\"id\": 2653, \"source\": \"KAPCG\", \"target\": \"KC1A\", \"size\": 3.0}, {\"id\": 2654, \"source\": \"KAPCG\", \"target\": \"MAPK5\", \"size\": 1.0}, {\"id\": 2655, \"source\": \"KAPCB\", \"target\": \"KAPCG\", \"size\": 63.0}, {\"id\": 2656, \"source\": \"KAPCB\", \"target\": \"KC1A\", \"size\": 3.0}, {\"id\": 2657, \"source\": \"KAPCB\", \"target\": \"MAPK5\", \"size\": 1.0}, {\"id\": 2658, \"source\": \"JAK1\", \"target\": \"KIT\", \"size\": 2.0}, {\"id\": 2659, \"source\": \"JAK1\", \"target\": \"BRAF\", \"size\": 4.0}, {\"id\": 2660, \"source\": \"JAK1\", \"target\": \"TIE2\", \"size\": 1.0}, {\"id\": 2661, \"source\": \"JAK1\", \"target\": \"KPCD\", \"size\": 1.0}, {\"id\": 2662, \"source\": \"JAK1\", \"target\": \"KCC2G\", \"size\": 2.0}, {\"id\": 2663, \"source\": \"JAK1\", \"target\": \"KCC2D\", \"size\": 2.0}, {\"id\": 2664, \"source\": \"JAK1\", \"target\": \"ERBB4\", \"size\": 0.5}, {\"id\": 2665, \"source\": \"CDK2\", \"target\": \"CHK1\", \"size\": 4.0}, {\"id\": 2666, \"source\": \"CDK2\", \"target\": \"ATR\", \"size\": 4.0}, {\"id\": 2667, \"source\": \"ARBK1\", \"target\": \"KC1A\", \"size\": 0.5}, {\"id\": 2668, \"source\": \"AVR2A\", \"target\": \"BMR1B\", \"size\": 4.0}, {\"id\": 2669, \"source\": \"AVR2A\", \"target\": \"BMR1A\", \"size\": 4.0}, {\"id\": 2670, \"source\": \"AVR2A\", \"target\": \"ACV1C\", \"size\": 2.0}, {\"id\": 2671, \"source\": \"MK03\", \"target\": \"ABL1\", \"size\": 7.0}, {\"id\": 2672, \"source\": \"MK03\", \"target\": \"SRC\", \"size\": 25.0}, {\"id\": 2673, \"source\": \"MK03\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 2674, \"source\": \"MK03\", \"target\": \"MP2K4\", \"size\": 10.0}, {\"id\": 2675, \"source\": \"MK03\", \"target\": \"KSR1\", \"size\": 2.0}, {\"id\": 2676, \"source\": \"MK01\", \"target\": \"PDPK1\", \"size\": 22.0}, {\"id\": 2677, \"source\": \"MK01\", \"target\": \"KS6A5\", \"size\": 7.0}, {\"id\": 2678, \"source\": \"MK01\", \"target\": \"ABL1\", \"size\": 8.0}, {\"id\": 2679, \"source\": \"MK01\", \"target\": \"SRC\", \"size\": 30.0}, {\"id\": 2680, \"source\": \"MK01\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 2681, \"source\": \"MK01\", \"target\": \"MK07\", \"size\": 8.0}, {\"id\": 2682, \"source\": \"EPHA2\", \"target\": \"ROCK2\", \"size\": 1.0}, {\"id\": 2683, \"source\": \"EPHA2\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 2684, \"source\": \"EPHA2\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2685, \"source\": \"EPHA2\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 2686, \"source\": \"EPHA2\", \"target\": \"SRC\", \"size\": 2.0}, {\"id\": 2687, \"source\": \"EPHA2\", \"target\": \"EPHA3\", \"size\": 1.0}, {\"id\": 2688, \"source\": \"EPHA2\", \"target\": \"EPHA8\", \"size\": 1.0}, {\"id\": 2689, \"source\": \"EPHA2\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2690, \"source\": \"EPHA2\", \"target\": \"EPHB3\", \"size\": 1.0}, {\"id\": 2691, \"source\": \"EPHA2\", \"target\": \"EPHB4\", \"size\": 1.0}, {\"id\": 2692, \"source\": \"EPHA2\", \"target\": \"EPHA4\", \"size\": 1.0}, {\"id\": 2693, \"source\": \"EPHA2\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 2694, \"source\": \"EPHA2\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2695, \"source\": \"EPHA2\", \"target\": \"EPHA6\", \"size\": 1.0}, {\"id\": 2696, \"source\": \"EPHA3\", \"target\": \"ROCK2\", \"size\": 1.0}, {\"id\": 2697, \"source\": \"EPHA3\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 2698, \"source\": \"EPHA3\", \"target\": \"EPHA8\", \"size\": 1.0}, {\"id\": 2699, \"source\": \"EPHA3\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2700, \"source\": \"EPHA3\", \"target\": \"EPHB3\", \"size\": 1.0}, {\"id\": 2701, \"source\": \"EPHA3\", \"target\": \"EPHB4\", \"size\": 1.0}, {\"id\": 2702, \"source\": \"EPHA3\", \"target\": \"EPHA4\", \"size\": 1.0}, {\"id\": 2703, \"source\": \"EPHA3\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 2704, \"source\": \"EPHA3\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2705, \"source\": \"EPHA3\", \"target\": \"EPHA6\", \"size\": 1.0}, {\"id\": 2706, \"source\": \"EPHA8\", \"target\": \"ROCK2\", \"size\": 1.0}, {\"id\": 2707, \"source\": \"EPHA8\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2708, \"source\": \"EPHA8\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 2709, \"source\": \"EPHA8\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 2710, \"source\": \"EPHA8\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2711, \"source\": \"EPHA8\", \"target\": \"EPHB3\", \"size\": 1.0}, {\"id\": 2712, \"source\": \"EPHA8\", \"target\": \"EPHB4\", \"size\": 1.0}, {\"id\": 2713, \"source\": \"EPHA8\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 2714, \"source\": \"EPHA8\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2715, \"source\": \"EPHA8\", \"target\": \"EPHA6\", \"size\": 1.0}, {\"id\": 2716, \"source\": \"UFO\", \"target\": \"VGFR2\", \"size\": 1.0}, {\"id\": 2717, \"source\": \"MK04\", \"target\": \"PAK3\", \"size\": 0.5}, {\"id\": 2718, \"source\": \"MK04\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 2719, \"source\": \"MK04\", \"target\": \"PAK2\", \"size\": 0.5}, {\"id\": 2720, \"source\": \"MK04\", \"target\": \"MK06\", \"size\": 1.0}, {\"id\": 2721, \"source\": \"AKT1\", \"target\": \"LCK\", \"size\": 3.0}, {\"id\": 2722, \"source\": \"AKT1\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2723, \"source\": \"AKT1\", \"target\": \"LYN\", \"size\": 7.0}, {\"id\": 2724, \"source\": \"AKT2\", \"target\": \"FGFR1\", \"size\": 11.0}, {\"id\": 2725, \"source\": \"AKT2\", \"target\": \"FGFR2\", \"size\": 9.0}, {\"id\": 2726, \"source\": \"AKT2\", \"target\": \"FGFR4\", \"size\": 5.0}, {\"id\": 2727, \"source\": \"AKT2\", \"target\": \"FGFR3\", \"size\": 8.0}, {\"id\": 2728, \"source\": \"AKT2\", \"target\": \"PI3R4\", \"size\": 2.0}, {\"id\": 2729, \"source\": \"VGFR2\", \"target\": \"ROCK2\", \"size\": 2.0}, {\"id\": 2730, \"source\": \"VGFR2\", \"target\": \"ROCK1\", \"size\": 2.0}, {\"id\": 2731, \"source\": \"MP2K2\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 2732, \"source\": \"ACV1B\", \"target\": \"ACV1C\", \"size\": 2.0}, {\"id\": 2733, \"source\": \"M3K8\", \"target\": \"M3K7\", \"size\": 4.0}, {\"id\": 2734, \"source\": \"M3K8\", \"target\": \"RIPK2\", \"size\": 0.5}, {\"id\": 2735, \"source\": \"M3K8\", \"target\": \"MK03\", \"size\": 4.0}, {\"id\": 2736, \"source\": \"M3K8\", \"target\": \"IRAK1\", \"size\": 1.0}, {\"id\": 2737, \"source\": \"MATK\", \"target\": \"ERBB4\", \"size\": 0.5}, {\"id\": 2738, \"source\": \"KSYK\", \"target\": \"TEC\", \"size\": 1.0}, {\"id\": 2739, \"source\": \"KSYK\", \"target\": \"PAK1\", \"size\": 2.0}, {\"id\": 2740, \"source\": \"MK08\", \"target\": \"RIPK2\", \"size\": 4.0}, {\"id\": 2741, \"source\": \"MK08\", \"target\": \"MP2K3\", \"size\": 9.0}, {\"id\": 2742, \"source\": \"MK08\", \"target\": \"MAPK2\", \"size\": 3.0}, {\"id\": 2743, \"source\": \"MK08\", \"target\": \"MP2K6\", \"size\": 12.0}, {\"id\": 2744, \"source\": \"MK08\", \"target\": \"MK10\", \"size\": 57.0}, {\"id\": 2745, \"source\": \"MK08\", \"target\": \"PAK1\", \"size\": 6.0}, {\"id\": 2746, \"source\": \"MK08\", \"target\": \"ATM\", \"size\": 3.0}, {\"id\": 2747, \"source\": \"MK08\", \"target\": \"MK11\", \"size\": 34.0}, {\"id\": 2748, \"source\": \"MK09\", \"target\": \"RIPK2\", \"size\": 4.0}, {\"id\": 2749, \"source\": \"MK09\", \"target\": \"MP2K3\", \"size\": 9.0}, {\"id\": 2750, \"source\": \"MK09\", \"target\": \"MAPK2\", \"size\": 3.0}, {\"id\": 2751, \"source\": \"MK09\", \"target\": \"IRAK1\", \"size\": 7.0}, {\"id\": 2752, \"source\": \"MK09\", \"target\": \"MP2K6\", \"size\": 12.0}, {\"id\": 2753, \"source\": \"MK09\", \"target\": \"MK11\", \"size\": 35.0}, {\"id\": 2754, \"source\": \"MK09\", \"target\": \"MK14\", \"size\": 35.0}, {\"id\": 2755, \"source\": \"MP2K4\", \"target\": \"RIPK2\", \"size\": 0.5}, {\"id\": 2756, \"source\": \"MP2K4\", \"target\": \"IRAK1\", \"size\": 3.0}, {\"id\": 2757, \"source\": \"MP2K3\", \"target\": \"M3K7\", \"size\": 5.0}, {\"id\": 2758, \"source\": \"MP2K3\", \"target\": \"IRAK1\", \"size\": 3.0}, {\"id\": 2759, \"source\": \"KC1A\", \"target\": \"GSK3B\", \"size\": 4.0}, {\"id\": 2760, \"source\": \"KC1D\", \"target\": \"PLK4\", \"size\": 0.5}, {\"id\": 2761, \"source\": \"KC1D\", \"target\": \"STK6\", \"size\": 0.5}, {\"id\": 2762, \"source\": \"KC1D\", \"target\": \"NEK2\", \"size\": 0.5}, {\"id\": 2763, \"source\": \"KC1D\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 2764, \"source\": \"KC1D\", \"target\": \"TTBK2\", \"size\": 0.5}, {\"id\": 2765, \"source\": \"KC1D\", \"target\": \"MARK4\", \"size\": 0.5}, {\"id\": 2766, \"source\": \"MAPK2\", \"target\": \"MP2K3\", \"size\": 2.0}, {\"id\": 2767, \"source\": \"KC1E\", \"target\": \"PLK4\", \"size\": 1.0}, {\"id\": 2768, \"source\": \"KC1E\", \"target\": \"STK6\", \"size\": 0.5}, {\"id\": 2769, \"source\": \"KC1E\", \"target\": \"NEK2\", \"size\": 0.5}, {\"id\": 2770, \"source\": \"KC1E\", \"target\": \"PLK1\", \"size\": 1.0}, {\"id\": 2771, \"source\": \"KC1E\", \"target\": \"TTBK2\", \"size\": 0.5}, {\"id\": 2772, \"source\": \"KC1E\", \"target\": \"MARK4\", \"size\": 0.5}, {\"id\": 2773, \"source\": \"CDK7\", \"target\": \"WEE1\", \"size\": 1.0}, {\"id\": 2774, \"source\": \"KS6A3\", \"target\": \"KS6A5\", \"size\": 2.0}, {\"id\": 2775, \"source\": \"KS6A3\", \"target\": \"KS6A4\", \"size\": 1.0}, {\"id\": 2776, \"source\": \"KS6A3\", \"target\": \"RAF1\", \"size\": 5.0}, {\"id\": 2777, \"source\": \"KS6A3\", \"target\": \"KCC2B\", \"size\": 3.0}, {\"id\": 2778, \"source\": \"KS6A3\", \"target\": \"KCC2G\", \"size\": 3.0}, {\"id\": 2779, \"source\": \"KS6A3\", \"target\": \"KCC2D\", \"size\": 3.0}, {\"id\": 2780, \"source\": \"KS6A3\", \"target\": \"KS6A6\", \"size\": 7.0}, {\"id\": 2781, \"source\": \"KS6A3\", \"target\": \"KCC2A\", \"size\": 3.0}, {\"id\": 2782, \"source\": \"NEK2\", \"target\": \"TTBK2\", \"size\": 0.5}, {\"id\": 2783, \"source\": \"MP2K6\", \"target\": \"IRAK1\", \"size\": 3.0}, {\"id\": 2784, \"source\": \"PLK1\", \"target\": \"PLK4\", \"size\": 1.0}, {\"id\": 2785, \"source\": \"PLK1\", \"target\": \"STK6\", \"size\": 2.0}, {\"id\": 2786, \"source\": \"PLK1\", \"target\": \"CDK2\", \"size\": 4.0}, {\"id\": 2787, \"source\": \"PLK1\", \"target\": \"NEK2\", \"size\": 0.5}, {\"id\": 2788, \"source\": \"PLK1\", \"target\": \"TTBK2\", \"size\": 0.5}, {\"id\": 2789, \"source\": \"PLK1\", \"target\": \"TAOK1\", \"size\": 0.5}, {\"id\": 2790, \"source\": \"PLK1\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 2791, \"source\": \"PLK1\", \"target\": \"NEK6\", \"size\": 0.5}, {\"id\": 2792, \"source\": \"LIMK1\", \"target\": \"ROCK2\", \"size\": 2.0}, {\"id\": 2793, \"source\": \"LIMK1\", \"target\": \"PAK3\", \"size\": 2.0}, {\"id\": 2794, \"source\": \"LIMK1\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2795, \"source\": \"MK12\", \"target\": \"ABL1\", \"size\": 2.0}, {\"id\": 2796, \"source\": \"MK12\", \"target\": \"MK14\", \"size\": 45.0}, {\"id\": 2797, \"source\": \"MK10\", \"target\": \"MP2K7\", \"size\": 14.0}, {\"id\": 2798, \"source\": \"MK10\", \"target\": \"M3K7\", \"size\": 13.0}, {\"id\": 2799, \"source\": \"MK10\", \"target\": \"RIPK2\", \"size\": 4.0}, {\"id\": 2800, \"source\": \"MK10\", \"target\": \"MP2K3\", \"size\": 9.0}, {\"id\": 2801, \"source\": \"MK10\", \"target\": \"MAPK2\", \"size\": 3.0}, {\"id\": 2802, \"source\": \"MK10\", \"target\": \"IRAK1\", \"size\": 7.0}, {\"id\": 2803, \"source\": \"MK10\", \"target\": \"MP2K6\", \"size\": 12.0}, {\"id\": 2804, \"source\": \"MK10\", \"target\": \"MK11\", \"size\": 34.0}, {\"id\": 2805, \"source\": \"MK10\", \"target\": \"MK14\", \"size\": 34.0}, {\"id\": 2806, \"source\": \"AAPK2\", \"target\": \"PI3R4\", \"size\": 2.0}, {\"id\": 2807, \"source\": \"EPHB3\", \"target\": \"KALRN\", \"size\": 0.5}, {\"id\": 2808, \"source\": \"EPHB3\", \"target\": \"ROCK2\", \"size\": 1.0}, {\"id\": 2809, \"source\": \"EPHB3\", \"target\": \"PAK3\", \"size\": 1.0}, {\"id\": 2810, \"source\": \"EPHB3\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2811, \"source\": \"EPHB3\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 2812, \"source\": \"EPHB3\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 2813, \"source\": \"EPHB3\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2814, \"source\": \"EPHB3\", \"target\": \"LIMK1\", \"size\": 1.0}, {\"id\": 2815, \"source\": \"EPHB3\", \"target\": \"EPHB4\", \"size\": 1.0}, {\"id\": 2816, \"source\": \"EPHB3\", \"target\": \"FAK1\", \"size\": 1.0}, {\"id\": 2817, \"source\": \"EPHB3\", \"target\": \"PAK1\", \"size\": 1.0}, {\"id\": 2818, \"source\": \"EPHB3\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 2819, \"source\": \"EPHB3\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2820, \"source\": \"EPHB3\", \"target\": \"EPHA6\", \"size\": 1.0}, {\"id\": 2821, \"source\": \"EPHB4\", \"target\": \"KALRN\", \"size\": 0.5}, {\"id\": 2822, \"source\": \"EPHB4\", \"target\": \"ROCK2\", \"size\": 1.0}, {\"id\": 2823, \"source\": \"EPHB4\", \"target\": \"PAK3\", \"size\": 1.0}, {\"id\": 2824, \"source\": \"EPHB4\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 2825, \"source\": \"EPHB4\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2826, \"source\": \"EPHB4\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 2827, \"source\": \"EPHB4\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 2828, \"source\": \"EPHB4\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2829, \"source\": \"EPHB4\", \"target\": \"LIMK1\", \"size\": 1.0}, {\"id\": 2830, \"source\": \"EPHB4\", \"target\": \"FAK1\", \"size\": 1.0}, {\"id\": 2831, \"source\": \"EPHB4\", \"target\": \"PAK1\", \"size\": 1.0}, {\"id\": 2832, \"source\": \"EPHB4\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 2833, \"source\": \"EPHB4\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2834, \"source\": \"EPHB4\", \"target\": \"EPHA6\", \"size\": 1.0}, {\"id\": 2835, \"source\": \"EPHA4\", \"target\": \"ROCK2\", \"size\": 1.0}, {\"id\": 2836, \"source\": \"EPHA4\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 2837, \"source\": \"EPHA4\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 2838, \"source\": \"EPHA4\", \"target\": \"EPHA8\", \"size\": 1.0}, {\"id\": 2839, \"source\": \"EPHA4\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2840, \"source\": \"EPHA4\", \"target\": \"EPHB3\", \"size\": 1.0}, {\"id\": 2841, \"source\": \"EPHA4\", \"target\": \"EPHB4\", \"size\": 1.0}, {\"id\": 2842, \"source\": \"EPHA4\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 2843, \"source\": \"EPHA4\", \"target\": \"EPHA7\", \"size\": 1.0}, {\"id\": 2844, \"source\": \"EPHA4\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2845, \"source\": \"EPHA4\", \"target\": \"EPHA6\", \"size\": 1.0}, {\"id\": 2846, \"source\": \"KC1G2\", \"target\": \"GSK3B\", \"size\": 1.0}, {\"id\": 2847, \"source\": \"MP2K1\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 2848, \"source\": \"TIE2\", \"target\": \"ERBB4\", \"size\": 0.5}, {\"id\": 2849, \"source\": \"FAK1\", \"target\": \"ROCK2\", \"size\": 7.0}, {\"id\": 2850, \"source\": \"FAK1\", \"target\": \"PAK3\", \"size\": 4.0}, {\"id\": 2851, \"source\": \"FAK1\", \"target\": \"KIT\", \"size\": 3.0}, {\"id\": 2852, \"source\": \"FAK1\", \"target\": \"FGFR1\", \"size\": 4.0}, {\"id\": 2853, \"source\": \"FAK1\", \"target\": \"BRAF\", \"size\": 8.0}, {\"id\": 2854, \"source\": \"FAK1\", \"target\": \"PGFRA\", \"size\": 6.0}, {\"id\": 2855, \"source\": \"FAK1\", \"target\": \"FGFR2\", \"size\": 3.0}, {\"id\": 2856, \"source\": \"FAK1\", \"target\": \"FGFR4\", \"size\": 2.0}, {\"id\": 2857, \"source\": \"FAK1\", \"target\": \"FGFR3\", \"size\": 3.0}, {\"id\": 2858, \"source\": \"FAK1\", \"target\": \"JAK1\", \"size\": 4.0}, {\"id\": 2859, \"source\": \"FAK1\", \"target\": \"LIMK1\", \"size\": 2.0}, {\"id\": 2860, \"source\": \"FAK1\", \"target\": \"TIE2\", \"size\": 1.0}, {\"id\": 2861, \"source\": \"FAK1\", \"target\": \"PAK1\", \"size\": 7.0}, {\"id\": 2862, \"source\": \"FAK1\", \"target\": \"PAK2\", \"size\": 4.0}, {\"id\": 2863, \"source\": \"FAK1\", \"target\": \"KCC2B\", \"size\": 5.0}, {\"id\": 2864, \"source\": \"FAK1\", \"target\": \"KCC2G\", \"size\": 5.0}, {\"id\": 2865, \"source\": \"FAK1\", \"target\": \"KCC2D\", \"size\": 5.0}, {\"id\": 2866, \"source\": \"FAK1\", \"target\": \"ERBB4\", \"size\": 3.0}, {\"id\": 2867, \"source\": \"FAK1\", \"target\": \"KCC2A\", \"size\": 5.0}, {\"id\": 2868, \"source\": \"KPCZ\", \"target\": \"TGFR1\", \"size\": 4.0}, {\"id\": 2869, \"source\": \"KPCD\", \"target\": \"KPCE\", \"size\": 6.0}, {\"id\": 2870, \"source\": \"BTK\", \"target\": \"IRAK2\", \"size\": 0.5}, {\"id\": 2871, \"source\": \"BTK\", \"target\": \"M3K1\", \"size\": 2.0}, {\"id\": 2872, \"source\": \"BTK\", \"target\": \"IRAK4\", \"size\": 1.0}, {\"id\": 2873, \"source\": \"AAPK1\", \"target\": \"PI3R4\", \"size\": 2.0}, {\"id\": 2874, \"source\": \"PAK1\", \"target\": \"KALRN\", \"size\": 0.5}, {\"id\": 2875, \"source\": \"PAK1\", \"target\": \"PAK3\", \"size\": 7.0}, {\"id\": 2876, \"source\": \"PAK1\", \"target\": \"TRIO\", \"size\": 0.5}, {\"id\": 2877, \"source\": \"PAK1\", \"target\": \"SRC\", \"size\": 7.0}, {\"id\": 2878, \"source\": \"PAK1\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2879, \"source\": \"PAK2\", \"target\": \"PAK3\", \"size\": 7.0}, {\"id\": 2880, \"source\": \"PAK2\", \"target\": \"TRIO\", \"size\": 0.5}, {\"id\": 2881, \"source\": \"PAK2\", \"target\": \"VGFR2\", \"size\": 2.0}, {\"id\": 2882, \"source\": \"M3K1\", \"target\": \"MK10\", \"size\": 13.0}, {\"id\": 2883, \"source\": \"M3K1\", \"target\": \"PAK2\", \"size\": 2.0}, {\"id\": 2884, \"source\": \"M3K1\", \"target\": \"IRAK4\", \"size\": 2.0}, {\"id\": 2885, \"source\": \"KGP2\", \"target\": \"KGP1\", \"size\": 8.0}, {\"id\": 2886, \"source\": \"ATM\", \"target\": \"CDK2\", \"size\": 5.0}, {\"id\": 2887, \"source\": \"ATM\", \"target\": \"WEE1\", \"size\": 1.0}, {\"id\": 2888, \"source\": \"ROCK1\", \"target\": \"KALRN\", \"size\": 0.5}, {\"id\": 2889, \"source\": \"ROCK1\", \"target\": \"ROCK2\", \"size\": 17.0}, {\"id\": 2890, \"source\": \"ROCK1\", \"target\": \"TRIO\", \"size\": 0.5}, {\"id\": 2891, \"source\": \"ROCK1\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2892, \"source\": \"ROCK1\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2893, \"source\": \"ROCK1\", \"target\": \"OBSCN\", \"size\": 0.5}, {\"id\": 2894, \"source\": \"ROCK1\", \"target\": \"EPHA6\", \"size\": 1.0}, {\"id\": 2895, \"source\": \"RIPK1\", \"target\": \"MLKL\", \"size\": 2.0}, {\"id\": 2896, \"source\": \"KCC2B\", \"target\": \"RAF1\", \"size\": 11.0}, {\"id\": 2897, \"source\": \"KCC2B\", \"target\": \"PGFRB\", \"size\": 2.0}, {\"id\": 2898, \"source\": \"KCC2B\", \"target\": \"KIT\", \"size\": 1.0}, {\"id\": 2899, \"source\": \"KCC2B\", \"target\": \"BRAF\", \"size\": 6.0}, {\"id\": 2900, \"source\": \"KCC2B\", \"target\": \"PGFRA\", \"size\": 2.0}, {\"id\": 2901, \"source\": \"KCC2B\", \"target\": \"MK01\", \"size\": 20.0}, {\"id\": 2902, \"source\": \"KCC2B\", \"target\": \"TIE2\", \"size\": 1.0}, {\"id\": 2903, \"source\": \"KCC2B\", \"target\": \"KCC2G\", \"size\": 27.0}, {\"id\": 2904, \"source\": \"KCC2B\", \"target\": \"ERBB4\", \"size\": 3.0}, {\"id\": 2905, \"source\": \"KCC2G\", \"target\": \"RAF1\", \"size\": 11.0}, {\"id\": 2906, \"source\": \"KCC2G\", \"target\": \"PGFRB\", \"size\": 2.0}, {\"id\": 2907, \"source\": \"KCC2G\", \"target\": \"KIT\", \"size\": 1.0}, {\"id\": 2908, \"source\": \"KCC2G\", \"target\": \"BRAF\", \"size\": 6.0}, {\"id\": 2909, \"source\": \"KCC2G\", \"target\": \"PGFRA\", \"size\": 2.0}, {\"id\": 2910, \"source\": \"KCC2G\", \"target\": \"MK01\", \"size\": 20.0}, {\"id\": 2911, \"source\": \"KCC2G\", \"target\": \"TIE2\", \"size\": 1.0}, {\"id\": 2912, \"source\": \"KCC2G\", \"target\": \"ERBB4\", \"size\": 3.0}, {\"id\": 2913, \"source\": \"KCC2D\", \"target\": \"RAF1\", \"size\": 11.0}, {\"id\": 2914, \"source\": \"KCC2D\", \"target\": \"PGFRB\", \"size\": 2.0}, {\"id\": 2915, \"source\": \"KCC2D\", \"target\": \"KIT\", \"size\": 1.0}, {\"id\": 2916, \"source\": \"KCC2D\", \"target\": \"BRAF\", \"size\": 6.0}, {\"id\": 2917, \"source\": \"KCC2D\", \"target\": \"PGFRA\", \"size\": 2.0}, {\"id\": 2918, \"source\": \"KCC2D\", \"target\": \"MK01\", \"size\": 20.0}, {\"id\": 2919, \"source\": \"KCC2D\", \"target\": \"TIE2\", \"size\": 1.0}, {\"id\": 2920, \"source\": \"KCC2D\", \"target\": \"KCC2G\", \"size\": 27.0}, {\"id\": 2921, \"source\": \"KCC2D\", \"target\": \"ERBB4\", \"size\": 3.0}, {\"id\": 2922, \"source\": \"AVR2B\", \"target\": \"BMR1A\", \"size\": 4.0}, {\"id\": 2923, \"source\": \"AVR2B\", \"target\": \"ACV1C\", \"size\": 2.0}, {\"id\": 2924, \"source\": \"FAK2\", \"target\": \"ROCK2\", \"size\": 2.0}, {\"id\": 2925, \"source\": \"FAK2\", \"target\": \"ROCK1\", \"size\": 2.0}, {\"id\": 2926, \"source\": \"KS6A2\", \"target\": \"PDPK1\", \"size\": 3.0}, {\"id\": 2927, \"source\": \"KS6A2\", \"target\": \"KS6A5\", \"size\": 2.0}, {\"id\": 2928, \"source\": \"KS6A2\", \"target\": \"RAF1\", \"size\": 5.0}, {\"id\": 2929, \"source\": \"KS6A2\", \"target\": \"MK07\", \"size\": 2.0}, {\"id\": 2930, \"source\": \"KS6A2\", \"target\": \"KCC2B\", \"size\": 3.0}, {\"id\": 2931, \"source\": \"KS6A2\", \"target\": \"KCC2G\", \"size\": 3.0}, {\"id\": 2932, \"source\": \"KS6A2\", \"target\": \"KCC2D\", \"size\": 3.0}, {\"id\": 2933, \"source\": \"KS6A2\", \"target\": \"KCC2A\", \"size\": 3.0}, {\"id\": 2934, \"source\": \"EPHA7\", \"target\": \"ROCK2\", \"size\": 1.0}, {\"id\": 2935, \"source\": \"EPHA7\", \"target\": \"FYN\", \"size\": 1.0}, {\"id\": 2936, \"source\": \"EPHA7\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 2937, \"source\": \"EPHA7\", \"target\": \"SRC\", \"size\": 1.0}, {\"id\": 2938, \"source\": \"EPHA7\", \"target\": \"EPHA8\", \"size\": 1.0}, {\"id\": 2939, \"source\": \"EPHA7\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2940, \"source\": \"EPHA7\", \"target\": \"EPHB3\", \"size\": 1.0}, {\"id\": 2941, \"source\": \"EPHA7\", \"target\": \"EPHB4\", \"size\": 1.0}, {\"id\": 2942, \"source\": \"EPHA7\", \"target\": \"ROCK1\", \"size\": 1.0}, {\"id\": 2943, \"source\": \"EPHA7\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2944, \"source\": \"EPHA7\", \"target\": \"EPHA6\", \"size\": 1.0}, {\"id\": 2945, \"source\": \"KS6A1\", \"target\": \"RAF1\", \"size\": 5.0}, {\"id\": 2946, \"source\": \"KS6A1\", \"target\": \"KCC2B\", \"size\": 3.0}, {\"id\": 2947, \"source\": \"KS6A1\", \"target\": \"KCC2G\", \"size\": 3.0}, {\"id\": 2948, \"source\": \"KS6A1\", \"target\": \"KCC2D\", \"size\": 3.0}, {\"id\": 2949, \"source\": \"KS6A1\", \"target\": \"KS6A6\", \"size\": 7.0}, {\"id\": 2950, \"source\": \"KS6A1\", \"target\": \"KCC2A\", \"size\": 3.0}, {\"id\": 2951, \"source\": \"MK11\", \"target\": \"ABL1\", \"size\": 2.0}, {\"id\": 2952, \"source\": \"MK11\", \"target\": \"MP2K3\", \"size\": 12.0}, {\"id\": 2953, \"source\": \"MK11\", \"target\": \"MP2K6\", \"size\": 15.0}, {\"id\": 2954, \"source\": \"MK11\", \"target\": \"MK12\", \"size\": 45.0}, {\"id\": 2955, \"source\": \"PKN1\", \"target\": \"PKN2\", \"size\": 2.0}, {\"id\": 2956, \"source\": \"MK06\", \"target\": \"KALRN\", \"size\": 0.5}, {\"id\": 2957, \"source\": \"MK06\", \"target\": \"PAK3\", \"size\": 0.5}, {\"id\": 2958, \"source\": \"MK06\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 2959, \"source\": \"MK06\", \"target\": \"PAK2\", \"size\": 0.5}, {\"id\": 2960, \"source\": \"EPHAA\", \"target\": \"EPHB2\", \"size\": 0.5}, {\"id\": 2961, \"source\": \"MAPK5\", \"target\": \"KALRN\", \"size\": 0.5}, {\"id\": 2962, \"source\": \"MAPK5\", \"target\": \"MP2K3\", \"size\": 1.0}, {\"id\": 2963, \"source\": \"MAPK5\", \"target\": \"MP2K6\", \"size\": 1.0}, {\"id\": 2964, \"source\": \"AURKB\", \"target\": \"TAOK1\", \"size\": 0.5}, {\"id\": 2965, \"source\": \"MARK4\", \"target\": \"PLK4\", \"size\": 0.5}, {\"id\": 2966, \"source\": \"MARK4\", \"target\": \"NEK2\", \"size\": 0.5}, {\"id\": 2967, \"source\": \"MARK4\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 2968, \"source\": \"MARK4\", \"target\": \"TTBK2\", \"size\": 0.5}, {\"id\": 2969, \"source\": \"TRIB3\", \"target\": \"PDPK1\", \"size\": 1.0}, {\"id\": 2970, \"source\": \"TRIB3\", \"target\": \"PI3R4\", \"size\": 0.5}, {\"id\": 2971, \"source\": \"KS6B2\", \"target\": \"AKT1\", \"size\": 20.0}, {\"id\": 2972, \"source\": \"EPHA6\", \"target\": \"EPHB2\", \"size\": 1.0}, {\"id\": 2973, \"source\": \"EPHA6\", \"target\": \"EPHAA\", \"size\": 0.5}, {\"id\": 2974, \"source\": \"KS6A6\", \"target\": \"PDPK1\", \"size\": 3.0}, {\"id\": 2975, \"source\": \"KS6A6\", \"target\": \"RAF1\", \"size\": 5.0}, {\"id\": 2976, \"source\": \"KS6A6\", \"target\": \"MK01\", \"size\": 7.0}, {\"id\": 2977, \"source\": \"KS6A6\", \"target\": \"KCC2B\", \"size\": 3.0}, {\"id\": 2978, \"source\": \"KS6A6\", \"target\": \"KCC2G\", \"size\": 3.0}, {\"id\": 2979, \"source\": \"KS6A6\", \"target\": \"KCC2D\", \"size\": 3.0}, {\"id\": 2980, \"source\": \"KS6A6\", \"target\": \"KCC2A\", \"size\": 3.0}, {\"id\": 2981, \"source\": \"KCC2A\", \"target\": \"RAF1\", \"size\": 11.0}, {\"id\": 2982, \"source\": \"KCC2A\", \"target\": \"PGFRB\", \"size\": 2.0}, {\"id\": 2983, \"source\": \"KCC2A\", \"target\": \"KIT\", \"size\": 1.0}, {\"id\": 2984, \"source\": \"KCC2A\", \"target\": \"BRAF\", \"size\": 6.0}, {\"id\": 2985, \"source\": \"KCC2A\", \"target\": \"PGFRA\", \"size\": 2.0}, {\"id\": 2986, \"source\": \"KCC2A\", \"target\": \"MK01\", \"size\": 20.0}, {\"id\": 2987, \"source\": \"KCC2A\", \"target\": \"TIE2\", \"size\": 1.0}, {\"id\": 2988, \"source\": \"KCC2A\", \"target\": \"ERBB4\", \"size\": 3.0}, {\"id\": 2989, \"source\": \"ABL1\", \"target\": \"ROS1\", \"size\": 0.5}, {\"id\": 2990, \"source\": \"KPCA\", \"target\": \"KGP1\", \"size\": 5.0}, {\"id\": 2991, \"source\": \"STK6\", \"target\": \"GSK3B\", \"size\": 0.5}, {\"id\": 2992, \"source\": \"KAPCA\", \"target\": \"BRAF\", \"size\": 12.0}, {\"id\": 2993, \"source\": \"MP2K7\", \"target\": \"BMR1B\", \"size\": 1.0}, {\"id\": 2994, \"source\": \"BRAF\", \"target\": \"BMR1B\", \"size\": 0.5}, {\"id\": 2995, \"source\": \"CDK6\", \"target\": \"PLK4\", \"size\": 0.5}, {\"id\": 2996, \"source\": \"MK01\", \"target\": \"STK25\", \"size\": 0.5}, {\"id\": 2997, \"source\": \"M3K1\", \"target\": \"RIOK3\", \"size\": 0.5}, {\"id\": 2998, \"source\": \"BMR1B\", \"target\": \"CHK1\", \"size\": 0.5}, {\"id\": 2999, \"source\": \"IGF1R\", \"target\": \"CHK1\", \"size\": 0.5}, {\"id\": 3000, \"source\": \"KAPCA\", \"target\": \"CHK1\", \"size\": 2.0}, {\"id\": 3001, \"source\": \"FGFR3\", \"target\": \"CHK1\", \"size\": 0.5}, {\"id\": 3002, \"source\": \"MAPK2\", \"target\": \"CHK1\", \"size\": 2.0}, {\"id\": 3003, \"source\": \"AAPK2\", \"target\": \"CHK1\", \"size\": 0.5}, {\"id\": 3004, \"source\": \"RIOK2\", \"target\": \"CHK1\", \"size\": 0.5}, {\"id\": 3005, \"source\": \"STK6\", \"target\": \"IKKB\", \"size\": 0.5}, {\"id\": 3006, \"source\": \"FLT3\", \"target\": \"IKKB\", \"size\": 2.0}, {\"id\": 3007, \"source\": \"KC1A\", \"target\": \"IKKB\", \"size\": 1.0}, {\"id\": 3008, \"source\": \"KS6A2\", \"target\": \"IKKB\", \"size\": 4.0}, {\"id\": 3009, \"source\": \"TNIK\", \"target\": \"IKKB\", \"size\": 0.5}, {\"id\": 3010, \"source\": \"IGF1R\", \"target\": \"CSKP\", \"size\": 0.5}, {\"id\": 3011, \"source\": \"KCC2D\", \"target\": \"CSKP\", \"size\": 0.5}, {\"id\": 3012, \"source\": \"IKKA\", \"target\": \"STK6\", \"size\": 0.5}, {\"id\": 3013, \"source\": \"SRPK2\", \"target\": \"STK6\", \"size\": 0.5}, {\"id\": 3014, \"source\": \"STK3\", \"target\": \"STK6\", \"size\": 0.5}, {\"id\": 3015, \"source\": \"SRPK1\", \"target\": \"STK6\", \"size\": 0.5}, {\"id\": 3016, \"source\": \"PLK3\", \"target\": \"STK6\", \"size\": 0.5}, {\"id\": 3017, \"source\": \"TRIO\", \"target\": \"IKKA\", \"size\": 0.5}, {\"id\": 3018, \"source\": \"TBK1\", \"target\": \"IKKA\", \"size\": 13.0}, {\"id\": 3019, \"source\": \"IGF1R\", \"target\": \"PDPK1\", \"size\": 8.0}, {\"id\": 3020, \"source\": \"KAPCA\", \"target\": \"M3K7\", \"size\": 4.0}, {\"id\": 3021, \"source\": \"KC1A\", \"target\": \"M3K7\", \"size\": 1.0}, {\"id\": 3022, \"source\": \"KC1E\", \"target\": \"M3K7\", \"size\": 1.0}, {\"id\": 3023, \"source\": \"GSK3B\", \"target\": \"M3K7\", \"size\": 5.0}, {\"id\": 3024, \"source\": \"PRKX\", \"target\": \"M3K7\", \"size\": 0.5}, {\"id\": 3025, \"source\": \"RAF1\", \"target\": \"RIPK2\", \"size\": 2.0}, {\"id\": 3026, \"source\": \"GSK3B\", \"target\": \"RIPK2\", \"size\": 1.0}, {\"id\": 3027, \"source\": \"AKT1\", \"target\": \"NUAK1\", \"size\": 0.5}, {\"id\": 3028, \"source\": \"BMR1B\", \"target\": \"ROCK2\", \"size\": 1.0}, {\"id\": 3029, \"source\": \"RAF1\", \"target\": \"ROCK2\", \"size\": 11.0}, {\"id\": 3030, \"source\": \"IGF1R\", \"target\": \"ROCK2\", \"size\": 3.0}, {\"id\": 3031, \"source\": \"FGFR3\", \"target\": \"ROCK2\", \"size\": 2.0}, {\"id\": 3032, \"source\": \"BRAF\", \"target\": \"TRIO\", \"size\": 0.5}, {\"id\": 3033, \"source\": \"PKN2\", \"target\": \"STK10\", \"size\": 0.5}, {\"id\": 3034, \"source\": \"ROS1\", \"target\": \"OXSR1\", \"size\": 0.5}, {\"id\": 3035, \"source\": \"KC1E\", \"target\": \"OXSR1\", \"size\": 0.5}, {\"id\": 3036, \"source\": \"ACVR1\", \"target\": \"OXSR1\", \"size\": 0.5}, {\"id\": 3037, \"source\": \"FAK1\", \"target\": \"LATS1\", \"size\": 0.5}, {\"id\": 3038, \"source\": \"STK11\", \"target\": \"LATS1\", \"size\": 0.5}, {\"id\": 3039, \"source\": \"MARK1\", \"target\": \"LATS1\", \"size\": 0.5}, {\"id\": 3040, \"source\": \"NEK9\", \"target\": \"PAK4\", \"size\": 0.5}, {\"id\": 3041, \"source\": \"CHK1\", \"target\": \"CHK2\", \"size\": 4.0}, {\"id\": 3042, \"source\": \"CDK2\", \"target\": \"CHK2\", \"size\": 3.0}, {\"id\": 3043, \"source\": \"CLK2\", \"target\": \"CHK2\", \"size\": 0.5}, {\"id\": 3044, \"source\": \"PAK1\", \"target\": \"CHK2\", \"size\": 0.5}, {\"id\": 3045, \"source\": \"KSYK\", \"target\": \"ABL1\", \"size\": 0.5}, {\"id\": 3046, \"source\": \"STK6\", \"target\": \"EGFR\", \"size\": 0.5}, {\"id\": 3047, \"source\": \"CDK5\", \"target\": \"NTRK1\", \"size\": 0.5}, {\"id\": 3048, \"source\": \"ULK2\", \"target\": \"NTRK1\", \"size\": 0.5}, {\"id\": 3049, \"source\": \"MP2K4\", \"target\": \"KPCG\", \"size\": 3.0}, {\"id\": 3050, \"source\": \"ERBB2\", \"target\": \"LCK\", \"size\": 0.5}, {\"id\": 3051, \"source\": \"KPCE\", \"target\": \"LCK\", \"size\": 0.5}, {\"id\": 3052, \"source\": \"STK11\", \"target\": \"LCK\", \"size\": 0.5}, {\"id\": 3053, \"source\": \"CSK\", \"target\": \"YES\", \"size\": 0.5}, {\"id\": 3054, \"source\": \"ERBB3\", \"target\": \"LYN\", \"size\": 0.5}, {\"id\": 3055, \"source\": \"FGFR3\", \"target\": \"IGF1R\", \"size\": 7.0}, {\"id\": 3056, \"source\": \"IGF1R\", \"target\": \"ROS1\", \"size\": 0.5}, {\"id\": 3057, \"source\": \"MK03\", \"target\": \"PGFRB\", \"size\": 16.0}, {\"id\": 3058, \"source\": \"ERBB3\", \"target\": \"FGR\", \"size\": 0.5}, {\"id\": 3059, \"source\": \"STK3\", \"target\": \"FGFR1\", \"size\": 1.0}, {\"id\": 3060, \"source\": \"NEK9\", \"target\": \"CDK4\", \"size\": 0.5}, {\"id\": 3061, \"source\": \"KKCC2\", \"target\": \"CDK4\", \"size\": 0.5}, {\"id\": 3062, \"source\": \"KAPCB\", \"target\": \"SRC\", \"size\": 14.0}, {\"id\": 3063, \"source\": \"SRC\", \"target\": \"BRAF\", \"size\": 9.0}, {\"id\": 3064, \"source\": \"MK03\", \"target\": \"PGFRA\", \"size\": 15.0}, {\"id\": 3065, \"source\": \"MK01\", \"target\": \"FER\", \"size\": 2.0}, {\"id\": 3066, \"source\": \"PAK1\", \"target\": \"KAPCA\", \"size\": 5.0}, {\"id\": 3067, \"source\": \"PDPK1\", \"target\": \"E2AK2\", \"size\": 1.0}, {\"id\": 3068, \"source\": \"AAPK1\", \"target\": \"E2AK2\", \"size\": 0.5}, {\"id\": 3069, \"source\": \"ROS1\", \"target\": \"FGFR2\", \"size\": 0.5}, {\"id\": 3070, \"source\": \"SRC\", \"target\": \"FGFR2\", \"size\": 4.0}, {\"id\": 3071, \"source\": \"MET\", \"target\": \"ERBB3\", \"size\": 4.0}, {\"id\": 3072, \"source\": \"MK01\", \"target\": \"KAPCG\", \"size\": 36.0}, {\"id\": 3073, \"source\": \"MP2K2\", \"target\": \"KAPCG\", \"size\": 20.0}, {\"id\": 3074, \"source\": \"CHK1\", \"target\": \"KAPCB\", \"size\": 2.0}, {\"id\": 3075, \"source\": \"MK01\", \"target\": \"KAPCB\", \"size\": 36.0}, {\"id\": 3076, \"source\": \"MP2K2\", \"target\": \"KAPCB\", \"size\": 20.0}, {\"id\": 3077, \"source\": \"STK4\", \"target\": \"KAPCB\", \"size\": 3.0}, {\"id\": 3078, \"source\": \"KCC1A\", \"target\": \"KAPCB\", \"size\": 2.0}, {\"id\": 3079, \"source\": \"KS6B2\", \"target\": \"KAPCB\", \"size\": 8.0}, {\"id\": 3080, \"source\": \"ST38L\", \"target\": \"KAPCB\", \"size\": 0.5}, {\"id\": 3081, \"source\": \"AKT2\", \"target\": \"KS6B1\", \"size\": 20.0}, {\"id\": 3082, \"source\": \"PAK1\", \"target\": \"KS6B1\", \"size\": 3.0}, {\"id\": 3083, \"source\": \"M3K5\", \"target\": \"JAK1\", \"size\": 0.5}, {\"id\": 3084, \"source\": \"PDPK1\", \"target\": \"KPCL\", \"size\": 0.5}, {\"id\": 3085, \"source\": \"MK01\", \"target\": \"CDK2\", \"size\": 12.0}, {\"id\": 3086, \"source\": \"KPCE\", \"target\": \"CDK2\", \"size\": 0.5}, {\"id\": 3087, \"source\": \"PAK1\", \"target\": \"CDK2\", \"size\": 0.5}, {\"id\": 3088, \"source\": \"MK07\", \"target\": \"CDK2\", \"size\": 0.5}, {\"id\": 3089, \"source\": \"ST38L\", \"target\": \"CDK2\", \"size\": 0.5}, {\"id\": 3090, \"source\": \"AKT1\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 3091, \"source\": \"VGFR2\", \"target\": \"MK03\", \"size\": 7.0}, {\"id\": 3092, \"source\": \"GSK3A\", \"target\": \"MK03\", \"size\": 1.0}, {\"id\": 3093, \"source\": \"CDK9\", \"target\": \"MK03\", \"size\": 0.5}, {\"id\": 3094, \"source\": \"AAPK2\", \"target\": \"MK03\", \"size\": 7.0}, {\"id\": 3095, \"source\": \"MK15\", \"target\": \"MK03\", \"size\": 1.0}, {\"id\": 3096, \"source\": \"KKCC2\", \"target\": \"MK03\", \"size\": 3.0}, {\"id\": 3097, \"source\": \"RIOK1\", \"target\": \"MK03\", \"size\": 0.5}, {\"id\": 3098, \"source\": \"CSK21\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 3099, \"source\": \"BMR1B\", \"target\": \"MK01\", \"size\": 4.0}, {\"id\": 3100, \"source\": \"ROS1\", \"target\": \"MK01\", \"size\": 0.5}, {\"id\": 3101, \"source\": \"CDK7\", \"target\": \"MK01\", \"size\": 0.5}, {\"id\": 3102, \"source\": \"AAPK2\", \"target\": \"MK01\", \"size\": 12.0}, {\"id\": 3103, \"source\": \"CSK21\", \"target\": \"MK01\", \"size\": 5.0}, {\"id\": 3104, \"source\": \"STK11\", \"target\": \"MK01\", \"size\": 6.0}, {\"id\": 3105, \"source\": \"VRK3\", \"target\": \"MK01\", \"size\": 0.5}, {\"id\": 3106, \"source\": \"NEK9\", \"target\": \"MK01\", \"size\": 0.5}, {\"id\": 3107, \"source\": \"KKCC2\", \"target\": \"MK01\", \"size\": 4.0}, {\"id\": 3108, \"source\": \"AAPK2\", \"target\": \"EPHB2\", \"size\": 0.5}, {\"id\": 3109, \"source\": \"EGFR\", \"target\": \"TYK2\", \"size\": 2.0}, {\"id\": 3110, \"source\": \"CSF1R\", \"target\": \"TYK2\", \"size\": 1.0}, {\"id\": 3111, \"source\": \"AKT1\", \"target\": \"WEE1\", \"size\": 0.5}, {\"id\": 3112, \"source\": \"MK08\", \"target\": \"WEE1\", \"size\": 0.5}, {\"id\": 3113, \"source\": \"KC1E\", \"target\": \"WEE1\", \"size\": 0.5}, {\"id\": 3114, \"source\": \"STK6\", \"target\": \"AKT1\", \"size\": 1.0}, {\"id\": 3115, \"source\": \"IRAK2\", \"target\": \"AKT1\", \"size\": 2.0}, {\"id\": 3116, \"source\": \"INSR\", \"target\": \"AKT1\", \"size\": 16.0}, {\"id\": 3117, \"source\": \"KPCE\", \"target\": \"AKT1\", \"size\": 6.0}, {\"id\": 3118, \"source\": \"PKN1\", \"target\": \"AKT1\", \"size\": 1.0}, {\"id\": 3119, \"source\": \"ROR2\", \"target\": \"RYK\", \"size\": 0.5}, {\"id\": 3120, \"source\": \"PGFRB\", \"target\": \"VGFR2\", \"size\": 6.0}, {\"id\": 3121, \"source\": \"NEK9\", \"target\": \"VGFR2\", \"size\": 0.5}, {\"id\": 3122, \"source\": \"NTRK1\", \"target\": \"MP2K2\", \"size\": 6.0}, {\"id\": 3123, \"source\": \"LCK\", \"target\": \"MP2K2\", \"size\": 2.0}, {\"id\": 3124, \"source\": \"KPCZ\", \"target\": \"MP2K2\", \"size\": 5.0}, {\"id\": 3125, \"source\": \"MK14\", \"target\": \"MP2K2\", \"size\": 18.0}, {\"id\": 3126, \"source\": \"ST17B\", \"target\": \"TGFR1\", \"size\": 0.5}, {\"id\": 3127, \"source\": \"AVR2A\", \"target\": \"TGFR1\", \"size\": 2.0}, {\"id\": 3128, \"source\": \"UFO\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 3129, \"source\": \"AKT2\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 3130, \"source\": \"GSK3B\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 3131, \"source\": \"CDK6\", \"target\": \"CSK\", \"size\": 0.5}, {\"id\": 3132, \"source\": \"PAK1\", \"target\": \"KPCI\", \"size\": 0.5}, {\"id\": 3133, \"source\": \"HCK\", \"target\": \"MATK\", \"size\": 0.5}, {\"id\": 3134, \"source\": \"SRC\", \"target\": \"TEC\", \"size\": 0.5}, {\"id\": 3135, \"source\": \"MP2K7\", \"target\": \"FRK\", \"size\": 0.5}, {\"id\": 3136, \"source\": \"ROS1\", \"target\": \"FRK\", \"size\": 0.5}, {\"id\": 3137, \"source\": \"BRAF\", \"target\": \"FRK\", \"size\": 0.5}, {\"id\": 3138, \"source\": \"MK01\", \"target\": \"FRK\", \"size\": 0.5}, {\"id\": 3139, \"source\": \"TEC\", \"target\": \"FRK\", \"size\": 0.5}, {\"id\": 3140, \"source\": \"MK08\", \"target\": \"FRK\", \"size\": 0.5}, {\"id\": 3141, \"source\": \"MP2K1\", \"target\": \"FRK\", \"size\": 0.5}, {\"id\": 3142, \"source\": \"PAK2\", \"target\": \"KSYK\", \"size\": 0.5}, {\"id\": 3143, \"source\": \"AKT2\", \"target\": \"MK08\", \"size\": 38.0}, {\"id\": 3144, \"source\": \"KPCE\", \"target\": \"MK08\", \"size\": 6.0}, {\"id\": 3145, \"source\": \"PKN2\", \"target\": \"MK08\", \"size\": 1.0}, {\"id\": 3146, \"source\": \"KPCE\", \"target\": \"MK09\", \"size\": 6.0}, {\"id\": 3147, \"source\": \"IKKA\", \"target\": \"MP2K4\", \"size\": 9.0}, {\"id\": 3148, \"source\": \"MK11\", \"target\": \"MP2K4\", \"size\": 11.0}, {\"id\": 3149, \"source\": \"BMR1B\", \"target\": \"MP2K3\", \"size\": 0.5}, {\"id\": 3150, \"source\": \"TGFR1\", \"target\": \"MP2K3\", \"size\": 2.0}, {\"id\": 3151, \"source\": \"TGFR1\", \"target\": \"KC1D\", \"size\": 1.0}, {\"id\": 3152, \"source\": \"CSK21\", \"target\": \"KC1D\", \"size\": 0.5}, {\"id\": 3153, \"source\": \"RIOK1\", \"target\": \"KC1D\", \"size\": 0.5}, {\"id\": 3154, \"source\": \"RIOK2\", \"target\": \"KC1D\", \"size\": 0.5}, {\"id\": 3155, \"source\": \"E2AK4\", \"target\": \"KC1D\", \"size\": 0.5}, {\"id\": 3156, \"source\": \"IRAK2\", \"target\": \"MAPK2\", \"size\": 1.0}, {\"id\": 3157, \"source\": \"AKT2\", \"target\": \"MAPK2\", \"size\": 5.0}, {\"id\": 3158, \"source\": \"KPCE\", \"target\": \"MAPK2\", \"size\": 0.5}, {\"id\": 3159, \"source\": \"MK06\", \"target\": \"MAPK2\", \"size\": 0.5}, {\"id\": 3160, \"source\": \"AAPK2\", \"target\": \"GSK3A\", \"size\": 1.0}, {\"id\": 3161, \"source\": \"BMR1B\", \"target\": \"GSK3B\", \"size\": 3.0}, {\"id\": 3162, \"source\": \"IGF1R\", \"target\": \"GSK3B\", \"size\": 8.0}, {\"id\": 3163, \"source\": \"FGFR3\", \"target\": \"GSK3B\", \"size\": 4.0}, {\"id\": 3164, \"source\": \"CSK21\", \"target\": \"GSK3B\", \"size\": 3.0}, {\"id\": 3165, \"source\": \"ROR2\", \"target\": \"GSK3B\", \"size\": 0.5}, {\"id\": 3166, \"source\": \"KPCD\", \"target\": \"GSK3B\", \"size\": 3.0}, {\"id\": 3167, \"source\": \"KSYK\", \"target\": \"BLK\", \"size\": 0.5}, {\"id\": 3168, \"source\": \"KPCE\", \"target\": \"BMX\", \"size\": 0.5}, {\"id\": 3169, \"source\": \"EGFR\", \"target\": \"PRKX\", \"size\": 0.5}, {\"id\": 3170, \"source\": \"KIT\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 3171, \"source\": \"PLK2\", \"target\": \"PLK1\", \"size\": 1.0}, {\"id\": 3172, \"source\": \"PLK1\", \"target\": \"AAPK2\", \"size\": 1.0}, {\"id\": 3173, \"source\": \"MK14\", \"target\": \"AAPK2\", \"size\": 2.0}, {\"id\": 3174, \"source\": \"KCC1D\", \"target\": \"AAPK2\", \"size\": 1.0}, {\"id\": 3175, \"source\": \"MARK4\", \"target\": \"AAPK2\", \"size\": 0.5}, {\"id\": 3176, \"source\": \"KS6B2\", \"target\": \"AAPK2\", \"size\": 9.0}, {\"id\": 3177, \"source\": \"ABL1\", \"target\": \"EPHA4\", \"size\": 1.0}, {\"id\": 3178, \"source\": \"LIMK1\", \"target\": \"HUNK\", \"size\": 0.5}, {\"id\": 3179, \"source\": \"STK6\", \"target\": \"CSK21\", \"size\": 0.5}, {\"id\": 3180, \"source\": \"KPCE\", \"target\": \"CSK21\", \"size\": 0.5}, {\"id\": 3181, \"source\": \"KSR1\", \"target\": \"CSK21\", \"size\": 0.5}, {\"id\": 3182, \"source\": \"RIOK1\", \"target\": \"CSK21\", \"size\": 1.0}, {\"id\": 3183, \"source\": \"EPHA4\", \"target\": \"KC1G2\", \"size\": 0.5}, {\"id\": 3184, \"source\": \"FYN\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 3185, \"source\": \"YES\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 3186, \"source\": \"AAPK2\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 3187, \"source\": \"STK4\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 3188, \"source\": \"PAK1\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 3189, \"source\": \"STK11\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 3190, \"source\": \"KKCC2\", \"target\": \"CDK3\", \"size\": 0.5}, {\"id\": 3191, \"source\": \"MK08\", \"target\": \"CDK6\", \"size\": 4.0}, {\"id\": 3192, \"source\": \"CDK2\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 3193, \"source\": \"AAPK2\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 3194, \"source\": \"CDK6\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 3195, \"source\": \"STK4\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 3196, \"source\": \"STK3\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 3197, \"source\": \"NTRK2\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 3198, \"source\": \"RIOK1\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 3199, \"source\": \"GSK3A\", \"target\": \"ROR2\", \"size\": 0.5}, {\"id\": 3200, \"source\": \"IRAK1\", \"target\": \"KPCE\", \"size\": 0.5}, {\"id\": 3201, \"source\": \"PRPK\", \"target\": \"KPCE\", \"size\": 0.5}, {\"id\": 3202, \"source\": \"STK6\", \"target\": \"MP2K1\", \"size\": 2.0}, {\"id\": 3203, \"source\": \"ROS1\", \"target\": \"MP2K1\", \"size\": 0.5}, {\"id\": 3204, \"source\": \"KPCE\", \"target\": \"MP2K1\", \"size\": 6.0}, {\"id\": 3205, \"source\": \"LCK\", \"target\": \"TIE2\", \"size\": 0.5}, {\"id\": 3206, \"source\": \"LYN\", \"target\": \"TIE2\", \"size\": 0.5}, {\"id\": 3207, \"source\": \"KPCZ\", \"target\": \"M3K10\", \"size\": 0.5}, {\"id\": 3208, \"source\": \"BMR1B\", \"target\": \"ACVR1\", \"size\": 4.0}, {\"id\": 3209, \"source\": \"CSK21\", \"target\": \"KPCZ\", \"size\": 0.5}, {\"id\": 3210, \"source\": \"MK14\", \"target\": \"KPCZ\", \"size\": 6.0}, {\"id\": 3211, \"source\": \"AKT1\", \"target\": \"KPCD\", \"size\": 7.0}, {\"id\": 3212, \"source\": \"UFO\", \"target\": \"MERTK\", \"size\": 0.5}, {\"id\": 3213, \"source\": \"KKCC2\", \"target\": \"STK4\", \"size\": 0.5}, {\"id\": 3214, \"source\": \"KKCC2\", \"target\": \"AAPK1\", \"size\": 5.0}, {\"id\": 3215, \"source\": \"AKT2\", \"target\": \"PAK1\", \"size\": 10.0}, {\"id\": 3216, \"source\": \"KC1D\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 3217, \"source\": \"KC1E\", \"target\": \"PAK1\", \"size\": 1.0}, {\"id\": 3218, \"source\": \"GSK3B\", \"target\": \"PAK1\", \"size\": 5.0}, {\"id\": 3219, \"source\": \"MK07\", \"target\": \"PAK1\", \"size\": 1.0}, {\"id\": 3220, \"source\": \"ILK\", \"target\": \"PAK1\", \"size\": 2.0}, {\"id\": 3221, \"source\": \"MK14\", \"target\": \"PAK1\", \"size\": 4.0}, {\"id\": 3222, \"source\": \"ST38L\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 3223, \"source\": \"CHK2\", \"target\": \"MK07\", \"size\": 0.5}, {\"id\": 3224, \"source\": \"AAPK2\", \"target\": \"MK07\", \"size\": 2.0}, {\"id\": 3225, \"source\": \"CDK5\", \"target\": \"MK07\", \"size\": 0.5}, {\"id\": 3226, \"source\": \"KPCE\", \"target\": \"MK07\", \"size\": 1.0}, {\"id\": 3227, \"source\": \"MK14\", \"target\": \"MK07\", \"size\": 5.0}, {\"id\": 3228, \"source\": \"CDK2\", \"target\": \"STK3\", \"size\": 0.5}, {\"id\": 3229, \"source\": \"CDK6\", \"target\": \"STK3\", \"size\": 0.5}, {\"id\": 3230, \"source\": \"STK38\", \"target\": \"STK3\", \"size\": 0.5}, {\"id\": 3231, \"source\": \"STK6\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 3232, \"source\": \"PDPK1\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 3233, \"source\": \"YES\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 3234, \"source\": \"AAPK2\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 3235, \"source\": \"STK3\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 3236, \"source\": \"NEK9\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 3237, \"source\": \"KKCC2\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 3238, \"source\": \"IKKB\", \"target\": \"ATM\", \"size\": 6.0}, {\"id\": 3239, \"source\": \"AAPK1\", \"target\": \"PRP4B\", \"size\": 0.5}, {\"id\": 3240, \"source\": \"MK14\", \"target\": \"KCC2D\", \"size\": 7.0}, {\"id\": 3241, \"source\": \"SRC\", \"target\": \"BMPR2\", \"size\": 2.0}, {\"id\": 3242, \"source\": \"AKT1\", \"target\": \"PTK6\", \"size\": 0.5}, {\"id\": 3243, \"source\": \"PAK1\", \"target\": \"KGP1\", \"size\": 0.5}, {\"id\": 3244, \"source\": \"TOPK\", \"target\": \"KGP1\", \"size\": 0.5}, {\"id\": 3245, \"source\": \"KAPCG\", \"target\": \"KCC1A\", \"size\": 2.0}, {\"id\": 3246, \"source\": \"MK03\", \"target\": \"KCC1A\", \"size\": 1.0}, {\"id\": 3247, \"source\": \"CDK5\", \"target\": \"KCC1A\", \"size\": 0.5}, {\"id\": 3248, \"source\": \"MK07\", \"target\": \"KCC1A\", \"size\": 1.0}, {\"id\": 3249, \"source\": \"KPCE\", \"target\": \"FAK2\", \"size\": 0.5}, {\"id\": 3250, \"source\": \"KKCC2\", \"target\": \"MELK\", \"size\": 0.5}, {\"id\": 3251, \"source\": \"AKT2\", \"target\": \"PDK1\", \"size\": 2.0}, {\"id\": 3252, \"source\": \"MARK2\", \"target\": \"KPCD1\", \"size\": 0.5}, {\"id\": 3253, \"source\": \"RYK\", \"target\": \"EPHA7\", \"size\": 1.0}, {\"id\": 3254, \"source\": \"MKNK2\", \"target\": \"MK11\", \"size\": 1.0}, {\"id\": 3255, \"source\": \"CDK5\", \"target\": \"NTRK3\", \"size\": 0.5}, {\"id\": 3256, \"source\": \"KAPCG\", \"target\": \"MK14\", \"size\": 12.0}, {\"id\": 3257, \"source\": \"CDK7\", \"target\": \"MK14\", \"size\": 0.5}, {\"id\": 3258, \"source\": \"KPCE\", \"target\": \"MK14\", \"size\": 3.0}, {\"id\": 3259, \"source\": \"KS6B2\", \"target\": \"MK14\", \"size\": 2.0}, {\"id\": 3260, \"source\": \"ST38L\", \"target\": \"MK14\", \"size\": 0.5}, {\"id\": 3261, \"source\": \"STK6\", \"target\": \"MK06\", \"size\": 0.5}, {\"id\": 3262, \"source\": \"MK01\", \"target\": \"MK06\", \"size\": 1.0}, {\"id\": 3263, \"source\": \"LRRK2\", \"target\": \"TAOK1\", \"size\": 0.5}, {\"id\": 3264, \"source\": \"MARK2\", \"target\": \"TAOK1\", \"size\": 0.5}, {\"id\": 3265, \"source\": \"BMR1B\", \"target\": \"VRK2\", \"size\": 0.5}, {\"id\": 3266, \"source\": \"TGFR1\", \"target\": \"VRK2\", \"size\": 0.5}, {\"id\": 3267, \"source\": \"ACVR1\", \"target\": \"VRK2\", \"size\": 0.5}, {\"id\": 3268, \"source\": \"KAPCA\", \"target\": \"KCC1D\", \"size\": 2.0}, {\"id\": 3269, \"source\": \"KAPCG\", \"target\": \"KCC1D\", \"size\": 2.0}, {\"id\": 3270, \"source\": \"YES\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 3271, \"source\": \"TGFR1\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 3272, \"source\": \"FAK1\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 3273, \"source\": \"WNK1\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 3274, \"source\": \"WEE1\", \"target\": \"TRIB2\", \"size\": 0.5}, {\"id\": 3275, \"source\": \"CHK2\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 3276, \"source\": \"CDK2\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 3277, \"source\": \"KKCC2\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 3278, \"source\": \"LATS1\", \"target\": \"MARK4\", \"size\": 0.5}, {\"id\": 3279, \"source\": \"WNK1\", \"target\": \"KKCC2\", \"size\": 0.5}, {\"id\": 3280, \"source\": \"AKT1\", \"target\": \"PRPK\", \"size\": 0.5}, {\"id\": 3281, \"source\": \"KS6B2\", \"target\": \"PRPK\", \"size\": 0.5}, {\"id\": 3282, \"source\": \"AAPK1\", \"target\": \"SRPK1\", \"size\": 0.5}, {\"id\": 3283, \"source\": \"KC1D\", \"target\": \"PI3R4\", \"size\": 0.5}, {\"id\": 3284, \"source\": \"MK14\", \"target\": \"M3K5\", \"size\": 6.0}, {\"id\": 3285, \"source\": \"TGFR1\", \"target\": \"E2AK1\", \"size\": 0.5}, {\"id\": 3286, \"source\": \"RIOK2\", \"target\": \"RIOK1\", \"size\": 1.0}, {\"id\": 3287, \"source\": \"CDK5\", \"target\": \"RIOK2\", \"size\": 0.5}, {\"id\": 3288, \"source\": \"AAPK1\", \"target\": \"TRPM6\", \"size\": 0.5}, {\"id\": 3289, \"source\": \"STK11\", \"target\": \"NUAK2\", \"size\": 0.5}, {\"id\": 3290, \"source\": \"WNK1\", \"target\": \"HIPK2\", \"size\": 0.5}, {\"id\": 3291, \"source\": \"BMR1B\", \"target\": \"MKNK2\", \"size\": 0.5}, {\"id\": 3292, \"source\": \"MK03\", \"target\": \"MKNK2\", \"size\": 3.0}, {\"id\": 3293, \"source\": \"TGFR1\", \"target\": \"MKNK2\", \"size\": 1.0}, {\"id\": 3294, \"source\": \"KS6A5\", \"target\": \"DYRK4\", \"size\": 0.5}, {\"id\": 3295, \"source\": \"STK6\", \"target\": \"LATS2\", \"size\": 0.5}, {\"id\": 3296, \"source\": \"ZAP70\", \"target\": \"IRAK4\", \"size\": 1.0}, {\"id\": 3297, \"source\": \"STK4\", \"target\": \"MARK1\", \"size\": 0.5}, {\"id\": 3298, \"source\": \"MK03\", \"target\": \"E2AK4\", \"size\": 3.0}, {\"id\": 3299, \"source\": \"KC1A\", \"target\": \"E2AK4\", \"size\": 0.5}, {\"id\": 3300, \"source\": \"KC1E\", \"target\": \"E2AK4\", \"size\": 0.5}, {\"id\": 3301, \"source\": \"GSK3B\", \"target\": \"E2AK4\", \"size\": 4.0}, {\"id\": 3302, \"source\": \"AAPK2\", \"target\": \"E2AK4\", \"size\": 1.0}, {\"id\": 3303, \"source\": \"MK14\", \"target\": \"E2AK4\", \"size\": 3.0}, {\"id\": 3304, \"source\": \"MK08\", \"target\": \"NLK\", \"size\": 3.0}, {\"id\": 3305, \"source\": \"CDK5\", \"target\": \"KS6B2\", \"size\": 0.5}, {\"id\": 3306, \"source\": \"MK07\", \"target\": \"KS6B2\", \"size\": 0.5}, {\"id\": 3307, \"source\": \"E2AK4\", \"target\": \"KS6B2\", \"size\": 1.0}, {\"id\": 3308, \"source\": \"RIOK3\", \"target\": \"TBK1\", \"size\": 0.5}, {\"id\": 3309, \"source\": \"M3K7\", \"target\": \"TNIK\", \"size\": 0.5}, {\"id\": 3310, \"source\": \"STK6\", \"target\": \"TLK1\", \"size\": 0.5}, {\"id\": 3311, \"source\": \"IKKB\", \"target\": \"M3K2\", \"size\": 1.0}, {\"id\": 3312, \"source\": \"MK11\", \"target\": \"DYR1B\", \"size\": 0.5}, {\"id\": 3313, \"source\": \"MK01\", \"target\": \"M3K4\", \"size\": 2.0}, {\"id\": 3314, \"source\": \"KPCD\", \"target\": \"KS6B2\", \"size\": 3.0}, {\"id\": 3315, \"source\": \"KPCD\", \"target\": \"KPCD1\", \"size\": 0.5}, {\"id\": 3316, \"source\": \"KPCD\", \"target\": \"LIMK2\", \"size\": 1.0}, {\"id\": 3317, \"source\": \"KPCD\", \"target\": \"MET\", \"size\": 0.5}, {\"id\": 3318, \"source\": \"CSK21\", \"target\": \"KS6A5\", \"size\": 0.5}, {\"id\": 3319, \"source\": \"CSK21\", \"target\": \"MK09\", \"size\": 4.0}, {\"id\": 3320, \"source\": \"CSK21\", \"target\": \"SRPK1\", \"size\": 1.0}, {\"id\": 3321, \"source\": \"CSK21\", \"target\": \"KS6A4\", \"size\": 0.5}, {\"id\": 3322, \"source\": \"STK6\", \"target\": \"LIMK2\", \"size\": 0.5}, {\"id\": 3323, \"source\": \"PGFRB\", \"target\": \"ABL2\", \"size\": 1.0}, {\"id\": 3324, \"source\": \"AAPK1\", \"target\": \"KC1E\", \"size\": 2.0}, {\"id\": 3325, \"source\": \"AAPK1\", \"target\": \"ERBB2\", \"size\": 1.0}, {\"id\": 3326, \"source\": \"AAPK1\", \"target\": \"KSYK\", \"size\": 1.0}, {\"id\": 3327, \"source\": \"AAPK2\", \"target\": \"PAK2\", \"size\": 0.5}, {\"id\": 3328, \"source\": \"AAPK2\", \"target\": \"IKKB\", \"size\": 8.0}, {\"id\": 3329, \"source\": \"ST38L\", \"target\": \"NUAK1\", \"size\": 0.5}, {\"id\": 3330, \"source\": \"YES\", \"target\": \"CDK4\", \"size\": 0.5}, {\"id\": 3331, \"source\": \"KPCD3\", \"target\": \"KPCD1\", \"size\": 2.0}, {\"id\": 3332, \"source\": \"MK11\", \"target\": \"EGFR\", \"size\": 9.0}, {\"id\": 3333, \"source\": \"MK11\", \"target\": \"KPCE\", \"size\": 3.0}, {\"id\": 3334, \"source\": \"MAPK2\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 3335, \"source\": \"MAPK2\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 3336, \"source\": \"CHK1\", \"target\": \"CLK3\", \"size\": 0.5}, {\"id\": 3337, \"source\": \"CHK1\", \"target\": \"AURKB\", \"size\": 0.5}, {\"id\": 3338, \"source\": \"CHK1\", \"target\": \"NEK11\", \"size\": 0.5}, {\"id\": 3339, \"source\": \"CHK1\", \"target\": \"STK4\", \"size\": 0.5}, {\"id\": 3340, \"source\": \"CHK1\", \"target\": \"MP2K2\", \"size\": 1.0}, {\"id\": 3341, \"source\": \"CHK1\", \"target\": \"TIF1B\", \"size\": 0.5}, {\"id\": 3342, \"source\": \"CHK1\", \"target\": \"KSYK\", \"size\": 1.0}, {\"id\": 3343, \"source\": \"CHK1\", \"target\": \"MINK1\", \"size\": 0.5}, {\"id\": 3344, \"source\": \"CHK1\", \"target\": \"MP2K1\", \"size\": 1.0}, {\"id\": 3345, \"source\": \"CHK1\", \"target\": \"TNK1\", \"size\": 0.5}, {\"id\": 3346, \"source\": \"KAPCA\", \"target\": \"ERBB2\", \"size\": 5.0}, {\"id\": 3347, \"source\": \"KAPCA\", \"target\": \"ULK2\", \"size\": 1.0}, {\"id\": 3348, \"source\": \"KAPCA\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 3349, \"source\": \"KAPCA\", \"target\": \"STK38\", \"size\": 0.5}, {\"id\": 3350, \"source\": \"KAPCA\", \"target\": \"GRK7\", \"size\": 1.0}, {\"id\": 3351, \"source\": \"KAPCA\", \"target\": \"RET\", \"size\": 1.0}, {\"id\": 3352, \"source\": \"KAPCA\", \"target\": \"FYN\", \"size\": 3.0}, {\"id\": 3353, \"source\": \"KAPCA\", \"target\": \"TITIN\", \"size\": 1.0}, {\"id\": 3354, \"source\": \"KAPCA\", \"target\": \"KKCC1\", \"size\": 1.0}, {\"id\": 3355, \"source\": \"KAPCA\", \"target\": \"KSR1\", \"size\": 1.0}, {\"id\": 3356, \"source\": \"KAPCA\", \"target\": \"STK24\", \"size\": 0.5}, {\"id\": 3357, \"source\": \"KAPCA\", \"target\": \"ATR\", \"size\": 2.0}, {\"id\": 3358, \"source\": \"KAPCA\", \"target\": \"MYLK\", \"size\": 6.0}, {\"id\": 3359, \"source\": \"KAPCA\", \"target\": \"ANPRA\", \"size\": 6.0}, {\"id\": 3360, \"source\": \"MK03\", \"target\": \"EGFR\", \"size\": 32.0}, {\"id\": 3361, \"source\": \"MK03\", \"target\": \"GSK3B\", \"size\": 26.0}, {\"id\": 3362, \"source\": \"MK03\", \"target\": \"TTK\", \"size\": 0.5}, {\"id\": 3363, \"source\": \"SRC\", \"target\": \"WNK4\", \"size\": 0.5}, {\"id\": 3364, \"source\": \"SRC\", \"target\": \"KS6A3\", \"size\": 0.5}, {\"id\": 3365, \"source\": \"SRC\", \"target\": \"HIPK2\", \"size\": 0.5}, {\"id\": 3366, \"source\": \"SRC\", \"target\": \"FER\", \"size\": 2.0}, {\"id\": 3367, \"source\": \"SRC\", \"target\": \"CDK4\", \"size\": 5.0}, {\"id\": 3368, \"source\": \"WNK2\", \"target\": \"STK39\", \"size\": 0.5}, {\"id\": 3369, \"source\": \"KPCI\", \"target\": \"KS6B2\", \"size\": 2.0}, {\"id\": 3370, \"source\": \"KPCI\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 3371, \"source\": \"ZAP70\", \"target\": \"MK14\", \"size\": 3.0}, {\"id\": 3372, \"source\": \"KS6B2\", \"target\": \"GSK3B\", \"size\": 8.0}, {\"id\": 3373, \"source\": \"CHK2\", \"target\": \"TTK\", \"size\": 1.0}, {\"id\": 3374, \"source\": \"KCC2D\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 3375, \"source\": \"GRK6\", \"target\": \"IGF1R\", \"size\": 1.0}, {\"id\": 3376, \"source\": \"WNK3\", \"target\": \"WNK1\", \"size\": 0.5}, {\"id\": 3377, \"source\": \"M3K10\", \"target\": \"DYRK2\", \"size\": 0.5}, {\"id\": 3378, \"source\": \"CLK1\", \"target\": \"ABL1\", \"size\": 0.5}, {\"id\": 3379, \"source\": \"PKN1\", \"target\": \"EGFR\", \"size\": 1.0}, {\"id\": 3380, \"source\": \"M3K6\", \"target\": \"MK08\", \"size\": 1.0}, {\"id\": 3381, \"source\": \"M3K6\", \"target\": \"MK14\", \"size\": 1.0}, {\"id\": 3382, \"source\": \"DAPK1\", \"target\": \"KKCC2\", \"size\": 1.0}, {\"id\": 3383, \"source\": \"KPCD1\", \"target\": \"PAK4\", \"size\": 0.5}, {\"id\": 3384, \"source\": \"KPCD1\", \"target\": \"AKT1\", \"size\": 1.0}, {\"id\": 3385, \"source\": \"KPCD1\", \"target\": \"M4K1\", \"size\": 0.5}, {\"id\": 3386, \"source\": \"M3K7\", \"target\": \"KSR1\", \"size\": 0.5}, {\"id\": 3387, \"source\": \"M3K7\", \"target\": \"AAPK2\", \"size\": 3.0}, {\"id\": 3388, \"source\": \"STK11\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 3389, \"source\": \"STK11\", \"target\": \"PAK1\", \"size\": 0.5}, {\"id\": 3390, \"source\": \"STK11\", \"target\": \"MELK\", \"size\": 0.5}, {\"id\": 3391, \"source\": \"STK11\", \"target\": \"BRSK1\", \"size\": 0.5}, {\"id\": 3392, \"source\": \"ABL1\", \"target\": \"MYLK\", \"size\": 0.5}, {\"id\": 3393, \"source\": \"ABL1\", \"target\": \"MET\", \"size\": 4.0}, {\"id\": 3394, \"source\": \"ABL1\", \"target\": \"STK3\", \"size\": 0.5}, {\"id\": 3395, \"source\": \"ABL1\", \"target\": \"PGFRB\", \"size\": 3.0}, {\"id\": 3396, \"source\": \"ABL1\", \"target\": \"PDK1\", \"size\": 1.0}, {\"id\": 3397, \"source\": \"ABL1\", \"target\": \"HIPK2\", \"size\": 0.5}, {\"id\": 3398, \"source\": \"GSK3B\", \"target\": \"AAPK1\", \"size\": 5.0}, {\"id\": 3399, \"source\": \"GSK3B\", \"target\": \"STK38\", \"size\": 0.5}, {\"id\": 3400, \"source\": \"GSK3B\", \"target\": \"MYLK\", \"size\": 1.0}, {\"id\": 3401, \"source\": \"GSK3B\", \"target\": \"KPCE\", \"size\": 1.0}, {\"id\": 3402, \"source\": \"BMX\", \"target\": \"FGFR1\", \"size\": 0.5}, {\"id\": 3403, \"source\": \"BMX\", \"target\": \"ACK1\", \"size\": 0.5}, {\"id\": 3404, \"source\": \"BMX\", \"target\": \"MET\", \"size\": 0.5}, {\"id\": 3405, \"source\": \"LCK\", \"target\": \"MK14\", \"size\": 4.0}, {\"id\": 3406, \"source\": \"RON\", \"target\": \"MET\", \"size\": 0.5}, {\"id\": 3407, \"source\": \"IKKE\", \"target\": \"AKT1\", \"size\": 7.0}, {\"id\": 3408, \"source\": \"IKKE\", \"target\": \"GSK3A\", \"size\": 0.5}, {\"id\": 3409, \"source\": \"CLK4\", \"target\": \"ABL1\", \"size\": 0.5}, {\"id\": 3410, \"source\": \"PDPK1\", \"target\": \"M3K5\", \"size\": 4.0}, {\"id\": 3411, \"source\": \"PDPK1\", \"target\": \"MP2K1\", \"size\": 17.0}, {\"id\": 3412, \"source\": \"PDPK1\", \"target\": \"MP2K2\", \"size\": 16.0}, {\"id\": 3413, \"source\": \"M3K5\", \"target\": \"MK08\", \"size\": 9.0}, {\"id\": 3414, \"source\": \"MK14\", \"target\": \"GSK3B\", \"size\": 10.0}, {\"id\": 3415, \"source\": \"MK14\", \"target\": \"E2AK2\", \"size\": 4.0}, {\"id\": 3416, \"source\": \"MK14\", \"target\": \"FGFR1\", \"size\": 4.0}, {\"id\": 3417, \"source\": \"CDK2\", \"target\": \"ARBK1\", \"size\": 0.5}, {\"id\": 3418, \"source\": \"KGP1\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 3419, \"source\": \"MK01\", \"target\": \"E2AK2\", \"size\": 9.0}, {\"id\": 3420, \"source\": \"MK01\", \"target\": \"MYLK\", \"size\": 7.0}, {\"id\": 3421, \"source\": \"MK01\", \"target\": \"TTK\", \"size\": 0.5}, {\"id\": 3422, \"source\": \"MET\", \"target\": \"FAK1\", \"size\": 7.0}, {\"id\": 3423, \"source\": \"JAK2\", \"target\": \"PAK1\", \"size\": 1.0}, {\"id\": 3424, \"source\": \"JAK2\", \"target\": \"MK01\", \"size\": 17.0}, {\"id\": 3425, \"source\": \"JAK2\", \"target\": \"PDK1\", \"size\": 0.5}, {\"id\": 3426, \"source\": \"JAK2\", \"target\": \"MK03\", \"size\": 14.0}, {\"id\": 3427, \"source\": \"KPCL\", \"target\": \"GSK3B\", \"size\": 0.5}, {\"id\": 3428, \"source\": \"KPCL\", \"target\": \"KPCD2\", \"size\": 0.5}, {\"id\": 3429, \"source\": \"PLK1\", \"target\": \"RIOK2\", \"size\": 0.5}, {\"id\": 3430, \"source\": \"PLK1\", \"target\": \"LRRK1\", \"size\": 0.5}, {\"id\": 3431, \"source\": \"PLK1\", \"target\": \"TEX14\", \"size\": 0.5}, {\"id\": 3432, \"source\": \"CDK5\", \"target\": \"FAK1\", \"size\": 1.0}, {\"id\": 3433, \"source\": \"CDK5\", \"target\": \"ATM\", \"size\": 0.5}, {\"id\": 3434, \"source\": \"KCC2B\", \"target\": \"AAPK1\", \"size\": 2.0}, {\"id\": 3435, \"source\": \"KPCD2\", \"target\": \"MARK2\", \"size\": 0.5}, {\"id\": 3436, \"source\": \"FGFR3\", \"target\": \"KS6A3\", \"size\": 1.0}, {\"id\": 3437, \"source\": \"MP2K6\", \"target\": \"PAK6\", \"size\": 0.5}, {\"id\": 3438, \"source\": \"ROCK1\", \"target\": \"DAPK3\", \"size\": 1.0}, {\"id\": 3439, \"source\": \"MP2K1\", \"target\": \"GSK3B\", \"size\": 22.0}, {\"id\": 3440, \"source\": \"KS6A1\", \"target\": \"DAPK1\", \"size\": 0.5}, {\"id\": 3441, \"source\": \"KS6A1\", \"target\": \"EPHA2\", \"size\": 0.5}, {\"id\": 3442, \"source\": \"ARBK1\", \"target\": \"MK14\", \"size\": 0.5}, {\"id\": 3443, \"source\": \"ARBK1\", \"target\": \"IGF1R\", \"size\": 0.5}, {\"id\": 3444, \"source\": \"NEK6\", \"target\": \"DDR1\", \"size\": 0.5}, {\"id\": 3445, \"source\": \"KC1A\", \"target\": \"CDK5\", \"size\": 0.5}, {\"id\": 3446, \"source\": \"KPCE\", \"target\": \"FGFR1\", \"size\": 0.5}, {\"id\": 3447, \"source\": \"KPCE\", \"target\": \"KPCD2\", \"size\": 1.0}, {\"id\": 3448, \"source\": \"KPCE\", \"target\": \"MET\", \"size\": 1.0}, {\"id\": 3449, \"source\": \"STK3\", \"target\": \"NEK2\", \"size\": 0.5}, {\"id\": 3450, \"source\": \"STK10\", \"target\": \"PLK1\", \"size\": 1.0}, {\"id\": 3451, \"source\": \"ATR\", \"target\": \"PRKDC\", \"size\": 1.0}, {\"id\": 3452, \"source\": \"M3K11\", \"target\": \"MP2K3\", \"size\": 1.0}, {\"id\": 3453, \"source\": \"M3K11\", \"target\": \"AAPK1\", \"size\": 1.0}, {\"id\": 3454, \"source\": \"ROCK2\", \"target\": \"LIMK2\", \"size\": 2.0}, {\"id\": 3455, \"source\": \"KS6B1\", \"target\": \"GSK3B\", \"size\": 8.0}, {\"id\": 3456, \"source\": \"TRPM7\", \"target\": \"EF2K\", \"size\": 0.5}, {\"id\": 3457, \"source\": \"PAK6\", \"target\": \"LIMK1\", \"size\": 2.0}, {\"id\": 3458, \"source\": \"PAK1\", \"target\": \"BRAF\", \"size\": 9.0}, {\"id\": 3459, \"source\": \"PAK1\", \"target\": \"STK6\", \"size\": 0.5}, {\"id\": 3460, \"source\": \"WNK1\", \"target\": \"STK39\", \"size\": 0.5}, {\"id\": 3461, \"source\": \"M3K8\", \"target\": \"MP2K3\", \"size\": 3.0}, {\"id\": 3462, \"source\": \"M3K8\", \"target\": \"ABL1\", \"size\": 0.5}, {\"id\": 3463, \"source\": \"M3K8\", \"target\": \"MP2K6\", \"size\": 3.0}, {\"id\": 3464, \"source\": \"M3K8\", \"target\": \"PLK1\", \"size\": 0.5}, {\"id\": 3465, \"source\": \"M3K8\", \"target\": \"KS6A1\", \"size\": 1.0}, {\"id\": 3466, \"source\": \"M3K8\", \"target\": \"MP2K2\", \"size\": 3.0}, {\"id\": 3467, \"source\": \"M3K8\", \"target\": \"CHK1\", \"size\": 0.5}, {\"id\": 3468, \"source\": \"FGFR1\", \"target\": \"PDK1\", \"size\": 1.0}, {\"id\": 3469, \"source\": \"ATM\", \"target\": \"BUB1\", \"size\": 2.0}, {\"id\": 3470, \"source\": \"PKN3\", \"target\": \"EGFR\", \"size\": 1.0}, {\"id\": 3471, \"source\": \"FYN\", \"target\": \"KS6A3\", \"size\": 0.5}, {\"id\": 3472, \"source\": \"FYN\", \"target\": \"MK14\", \"size\": 5.0}, {\"id\": 3473, \"source\": \"TTK\", \"target\": \"ABL1\", \"size\": 1.0}, {\"id\": 3474, \"source\": \"TTK\", \"target\": \"BUB1B\", \"size\": 1.0}, {\"id\": 3475, \"source\": \"KPCA\", \"target\": \"ERBB2\", \"size\": 9.0}, {\"id\": 3476, \"source\": \"KPCA\", \"target\": \"TITIN\", \"size\": 0.5}, {\"id\": 3477, \"source\": \"KPCA\", \"target\": \"KPCD3\", \"size\": 2.0}, {\"id\": 3478, \"source\": \"KPCA\", \"target\": \"KS6B2\", \"size\": 8.0}, {\"id\": 3479, \"source\": \"KPCA\", \"target\": \"RET\", \"size\": 1.0}, {\"id\": 3480, \"source\": \"KPCA\", \"target\": \"AKT1\", \"size\": 27.0}, {\"id\": 3481, \"source\": \"KPCA\", \"target\": \"TGFR1\", \"size\": 5.0}, {\"id\": 3482, \"source\": \"KPCA\", \"target\": \"KPCD1\", \"size\": 2.0}, {\"id\": 3483, \"source\": \"KPCA\", \"target\": \"GRK7\", \"size\": 0.5}, {\"id\": 3484, \"source\": \"KPCA\", \"target\": \"KPCD2\", \"size\": 2.0}, {\"id\": 3485, \"source\": \"KPCA\", \"target\": \"ILK\", \"size\": 2.0}, {\"id\": 3486, \"source\": \"KPCA\", \"target\": \"MET\", \"size\": 9.0}, {\"id\": 3487, \"source\": \"SRMS\", \"target\": \"PTK6\", \"size\": 0.5}, {\"id\": 3488, \"source\": \"AURKB\", \"target\": \"PRKDC\", \"size\": 0.5}, {\"id\": 3489, \"source\": \"AURKB\", \"target\": \"ATM\", \"size\": 0.5}, {\"id\": 3490, \"source\": \"PIM1\", \"target\": \"M3K5\", \"size\": 0.5}, {\"id\": 3491, \"source\": \"STK4\", \"target\": \"STK38\", \"size\": 0.5}, {\"id\": 3492, \"source\": \"MK08\", \"target\": \"STK4\", \"size\": 4.0}, {\"id\": 3493, \"source\": \"BRAF\", \"target\": \"TTK\", \"size\": 0.5}, {\"id\": 3494, \"source\": \"KPCG\", \"target\": \"GSK3B\", \"size\": 9.0}, {\"id\": 3495, \"source\": \"KPCG\", \"target\": \"KS6B2\", \"size\": 7.0}, {\"id\": 3496, \"source\": \"FLT3\", \"target\": \"PDK1\", \"size\": 1.0}, {\"id\": 3497, \"source\": \"KPCZ\", \"target\": \"MARK2\", \"size\": 0.5}, {\"id\": 3498, \"source\": \"KPCZ\", \"target\": \"KS6B2\", \"size\": 3.0}, {\"id\": 3499, \"source\": \"KPCZ\", \"target\": \"STK11\", \"size\": 1.0}, {\"id\": 3500, \"source\": \"KPCZ\", \"target\": \"MARK3\", \"size\": 0.5}, {\"id\": 3501, \"source\": \"AKT3\", \"target\": \"BRAF\", \"size\": 27.0}, {\"id\": 3502, \"source\": \"EGFR\", \"target\": \"ATM\", \"size\": 3.0}, {\"id\": 3503, \"source\": \"KS6A5\", \"target\": \"WNK1\", \"size\": 0.5}, {\"id\": 3504, \"source\": \"M4K5\", \"target\": \"GSK3B\", \"size\": 0.5}, {\"id\": 3505, \"source\": \"AKT1\", \"target\": \"BTK\", \"size\": 4.0}, {\"id\": 3506, \"source\": \"AKT1\", \"target\": \"CDK2\", \"size\": 11.0}, {\"id\": 3507, \"source\": \"AKT1\", \"target\": \"FAK1\", \"size\": 13.0}, {\"id\": 3508, \"source\": \"AKT1\", \"target\": \"EPHA2\", \"size\": 3.0}, {\"id\": 3509, \"source\": \"AKT1\", \"target\": \"SRPK2\", \"size\": 0.5}, {\"id\": 3510, \"source\": \"RET\", \"target\": \"PDPK1\", \"size\": 0.5}, {\"id\": 3511, \"source\": \"RET\", \"target\": \"MK09\", \"size\": 1.0}, {\"id\": 3512, \"source\": \"RET\", \"target\": \"AKT1\", \"size\": 2.0}, {\"id\": 3513, \"source\": \"LYN\", \"target\": \"ABL1\", \"size\": 0.5}, {\"id\": 3514, \"source\": \"KS6A3\", \"target\": \"M3K5\", \"size\": 2.0}, {\"id\": 3515, \"source\": \"KS6A3\", \"target\": \"GSK3B\", \"size\": 3.0}, {\"id\": 3516, \"source\": \"KS6A3\", \"target\": \"E2AK2\", \"size\": 0.5}, {\"id\": 3517, \"source\": \"KS6A3\", \"target\": \"DAPK1\", \"size\": 0.5}, {\"id\": 3518, \"source\": \"KS6A3\", \"target\": \"EPHA2\", \"size\": 0.5}, {\"id\": 3519, \"source\": \"KS6A3\", \"target\": \"GSK3A\", \"size\": 0.5}]}');\n\n/*\nvar g = new Sigma.classes.graph();\n\ng.read(G);\n\nconsole.log(g);\n*/\n\nvar colors = ['#x0x0x4', '#x2x1xa',\n '#x4x312',\n '#x7x61c',\n '#xbx924',\n '#11xc2f',\n '#15xe39',\n '#1a1042',\n '#21114e',\n '#271258',\n '#2f1163',\n '#36106b',\n '#3dxf71',\n '#461077',\n '#4c117a',\n '#54137d',\n '#5b167f',\n '#621980',\n '#691c81',\n '#6f1e82',\n '#772182',\n '#7d2482',\n '#852682', '#8b2982', '#922b81', '#9a2e80', '#a0307f', '#a9327e', '#af347c', '#b7377a', '#be3978', '#c43c75', '#cc3f72', '#d3426f', '#da476b', '#e04b68', '#e54f65', '#eb5661', '#ef5c5f', '#f3645d', '#f66b5c', '#f8725c', '#fa7c5e', '#fc8360', '#fd8d63', '#fe9567', '#ff9e6c', '#ffa571', '#ffad76', '#ffb67d', '#ffbe83', '#ffc78b', '#ffce91', '#ffd698', '#fedfa0', '#fee6a7', '#fdefb1', '#fdf6b8', '#fdfec0']\n\nvar s = new sigma__WEBPACK_IMPORTED_MODULE_0___default.a();\n\ns.addRenderer({\n  type: 'canvas',\n  container: 'container',\n  settings: {\n    defaultEdgeColor:'#000',\n    defaultLabelColor:'#111',\n    defaultLabelSize:15,\n    labelThreshold:9\n  }\n});\n\ns.graph.read(G);\n\nconsole.log(s.graph.nodes());\n/*\ns.startForceAtlas2({linLogMode:true, scalingRatio:250, gravity:0.5, startingIterations:1000, slowDown:.5});\n*/\n/*\nsetTimeout(function(){\n    s.stopForceAtlas2();\n}, 50000);\n*/\n\ns.graph.edges().forEach(function(e){\n  e.color = '#b4b4b466';\n})\n\n/*\ns.graph.nodes().forEach(function(n){\n  n.color = colors[n.label];\n})\n*/\n/*\nsigma.parsers.json('./graph.json', {\n  container: 'container',\n  settings: {\n    defaultNodeColor: '#ec5148'\n  }\n});*/\n\n//,\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });